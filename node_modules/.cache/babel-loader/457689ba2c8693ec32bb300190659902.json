{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlankHoang\\\\Desktop\\\\freecodeacademy\\\\shoppingBasket\\\\client\\\\src\\\\components\\\\AddItem\\\\SearchBox.js\";\nimport grocery_sampleJSON from \"../../Data/grocery_sampleJSON.json\";\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react';\nconst initialState = {\n  isLoading: false,\n  results: [],\n  value: '',\n  emptySearchBox: false\n};\nconst source = grocery_sampleJSON;\nexport class SearchBox extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleResultSelect = (e, {\n      result\n    }) => {\n      console.log(result);\n      this.setState({\n        value: result.title,\n        emptySearchBox: false\n      });\n      this.props.result(result);\n    };\n\n    this.handleSearchChange = (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(initialState);\n        const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n\n        const isMatch = result => re.test(result.title);\n\n        this.setState({\n          isLoading: false,\n          results: _.filter(source, isMatch)\n        });\n      }, 300);\n    };\n  }\n\n  shouldComponentUpdate(nextState, nextProps) {\n    if (this.props.supermarket_selected !== nextProps.supermarket_selected) {\n      return true;\n    }\n\n    if (nextProps.emptySearchBox === true) {\n      return true;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.supermarket_selected !== this.props.supermarket_selected) {\n      this.setState({\n        value: \"\"\n      });\n    }\n\n    if (this.props.emptySearchBox === true) {\n      this.setState({\n        value: \"\",\n        emptySearchBox: false\n      });\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          value = _this$state.value,\n          results = _this$state.results;\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Search, {\n      loading: isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      results: results,\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default SearchBox;","map":{"version":3,"sources":["C:\\Users\\AlankHoang\\Desktop\\freecodeacademy\\shoppingBasket\\client\\src\\components\\AddItem\\SearchBox.js"],"names":["grocery_sampleJSON","_","React","Component","Search","Grid","Header","Segment","initialState","isLoading","results","value","emptySearchBox","source","SearchBox","state","handleResultSelect","e","result","console","log","setState","title","props","handleSearchChange","setTimeout","length","re","RegExp","escapeRegExp","isMatch","test","filter","shouldComponentUpdate","nextState","nextProps","supermarket_selected","componentDidUpdate","prevProps","render","debounce","leading"],"mappings":"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","sourcesContent":["import grocery_sampleJSON from \"../../Data/grocery_sampleJSON.json\"\r\nimport _ from 'lodash'\r\nimport React, { Component } from 'react'\r\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react'\r\n\r\nconst initialState = { isLoading: false, results: [], value: '',emptySearchBox:false }\r\nconst source = grocery_sampleJSON\r\n\r\nexport  class SearchBox extends Component {\r\n  state = initialState\r\n    shouldComponentUpdate(nextState,nextProps){\r\n         if(this.props.supermarket_selected!==nextProps.supermarket_selected\t){\r\n\t\t\treturn true\r\n\t\t}if(nextProps.emptySearchBox===true){\r\n\t\t\treturn true\r\n\t\t}\r\n    }\r\n    componentDidUpdate(prevProps){\r\n    \tif(prevProps.supermarket_selected!==this.props.supermarket_selected\t){\r\n    \t\tthis.setState({value:\"\"})\r\n    \t}if(this.props.emptySearchBox===true){\r\n    \t\tthis.setState({\r\n    \t\t\tvalue:\"\",\r\n    \t\t\temptySearchBox:false})\r\n    \t}\r\n    }\r\n  handleResultSelect = (e, { result }) => {\r\n  \tconsole.log(result)\r\n  \tthis.setState({ value: result.title, emptySearchBox:false })\r\n  \tthis.props.result(result )\r\n  }\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ isLoading: true, value })\r\n\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.setState(initialState)\r\n\r\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\r\n      const isMatch = result => re.test(result.title)\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        results: _.filter(source, isMatch),\r\n      })\r\n    }, 300)\r\n  }\r\n\r\n  render() {\r\n\r\n    const { isLoading, value, results } = this.state\r\n\r\n    return (\r\n      <Grid>\r\n        <Grid.Column width={6}>\r\n          <Search\r\n            loading={isLoading}\r\n            onResultSelect={this.handleResultSelect}\r\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n              leading: true,\r\n            })}\r\n            results={results}\r\n            value={value}\r\n\r\n          />\r\n        </Grid.Column>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\nexport default SearchBox "]},"metadata":{},"sourceType":"module"}