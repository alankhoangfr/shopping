{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlankHoang\\\\Desktop\\\\freecodeacademy\\\\shoppingBasket\\\\client\\\\src\\\\components\\\\Map.js\";\nimport React, { Component } from 'react';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport basket from \"../image/basket.png\";\nGeocode.setApiKey('AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI');\nGeocode.enableDebug();\nexport class Map extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mapPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      },\n      markerPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      },\n      map: null,\n      markers: [{\n        photo_id: 0,\n        lat: -33.78,\n        lng: 151.2,\n        name: \"add1\"\n      }, {\n        photo_id: 10,\n        lat: -33.79,\n        lng: 151.1,\n        name: \"add22\"\n      }, {\n        photo_id: 2,\n        lat: -33.785,\n        lng: 151.23,\n        name: \"add3\"\n      }],\n      bound: null,\n      markers1: [],\n      new: null\n    };\n\n    this.onPlaceSelected = (place, event) => {\n      console.log(place);\n\n      if (place.name !== undefined) {\n        Geocode.fromAddress(place.name).then(response => {\n          const _response$results$0$g = response.results[0].geometry.location,\n                lat = _response$results$0$g.lat,\n                lng = _response$results$0$g.lng;\n          console.log(lat, lng);\n\n          if (lat === undefined) {\n            return null;\n          }\n\n          this.setState({\n            mapPosition: {\n              lat: lat,\n              lng: lng\n            },\n            markerPosition: {\n              lat: lat,\n              lng: lng\n            }\n          });\n        });\n        return;\n      } else {\n        const name = place.formatted_name,\n              latValue = place.geometry.location.lat(),\n              lngValue = place.geometry.location.lng(); // Set these values in the state.\n\n        this.setState({\n          mapPosition: {\n            lat: latValue,\n            lng: lngValue\n          },\n          markerPosition: {\n            lat: latValue,\n            lng: lngValue\n          }\n        });\n      }\n    };\n\n    this.mapmoved = () => {\n      console.log(this.state);\n      console.log(\"drag:\" + this.state.map.getCenter().lat());\n      console.log(\"bound:\" + JSON.stringify(this.state.map.getBounds()));\n      this.setState({\n        bound: this.state.map.getBounds(),\n        mapPosition: {\n          lat: this.state.map.getCenter().lat(),\n          lng: this.state.map.getCenter().lng()\n        }\n      });\n    };\n\n    this.maploaded = mapRef => {\n      if (!mapRef) {\n        return;\n      }\n\n      console.log(mapRef);\n      this._gmap = mapRef;\n      console.log(this._gmap.getbounds());\n      this.setState({\n        new: this._gmap\n      });\n    };\n\n    this.onZoom = () => {\n      console.log(\"zoom:\" + JSON.stringify(this.state.map.getCenter()));\n      this.setState({\n        bound: this.state.map.getBounds()\n      });\n      console.log(this.state);\n    };\n\n    this.insideBound = (lat, lng, bound) => {\n      if (bound != null) {\n        if (lat > bound.na.j && lat < bound.na.l && lng > bound.ia.j && lng < bound.ia.l) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(this.state);\n\n    if (nextState.mapPosition.lat !== this.state.mapPosition.lat) {\n      return true;\n    } else if (this.state.mapPosition.lat === nextState.mapPosition.lat) {\n      return false;\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    const AsyncMap = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n      google: this.props.google,\n      ref: this.maploaded,\n      defaultZoom: 10,\n      defaultCenter: {\n        lat: this.state.mapPosition.lat,\n        lng: this.state.mapPosition.lng\n      },\n      onDragEnd: this.mapmoved,\n      onZoomChanged: this.onZoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      name: 'Dolores park',\n      draggable: true,\n      position: {\n        lat: this.state.markerPosition.lat,\n        lng: this.state.markerPosition.lng\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), this.state.markers.map(marker => {\n      if (this.insideBound(marker.lat, marker.lng, this.state.bound) == true) {\n        return React.createElement(Marker, {\n          key: marker.photo_id,\n          position: {\n            lat: marker.lat,\n            lng: marker.lng\n          },\n          icon: basket,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        });\n      } else {\n        return null;\n      }\n    }), this.state.markers.map(marker => {\n      if (this.insideBound(marker.lat, marker.lng, this.state.bound) == true) {\n        return React.createElement(InfoWindow, {\n          key: marker.photo_id,\n          onClose: this.onInfoWindowClose,\n          position: {\n            lat: marker.lat + 0.02,\n            lng: marker.lng\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            padding: 0,\n            margin: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, marker.name)));\n      } else {\n        return null;\n      }\n    }), React.createElement(Autocomplete, {\n      style: {\n        width: '200%',\n        height: '40px',\n        paddingLeft: '16px',\n        marginTop: '2px',\n        marginBottom: '100px'\n      },\n      onPlaceSelected: this.onPlaceSelected,\n      types: ['(regions)'],\n      placeholder: \"Enter and select location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }))));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Search for the Supermarkets near you\")), React.createElement(\"div\", {\n      style: {\n        width: \"500px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(AsyncMap, {\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI&libraries=places\",\n      loadingElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }),\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: this.props.height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default Map;","map":{"version":3,"sources":["C:\\Users\\AlankHoang\\Desktop\\freecodeacademy\\shoppingBasket\\client\\src\\components\\Map.js"],"names":["React","Component","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Geocode","Autocomplete","basket","setApiKey","enableDebug","Map","state","mapPosition","lat","props","center","lng","markerPosition","map","markers","photo_id","name","bound","markers1","new","onPlaceSelected","place","event","console","log","undefined","fromAddress","then","response","results","geometry","location","setState","formatted_name","latValue","lngValue","mapmoved","getCenter","JSON","stringify","getBounds","maploaded","mapRef","_gmap","getbounds","onZoom","insideBound","na","j","l","ia","shouldComponentUpdate","nextProps","nextState","render","AsyncMap","google","marker","onInfoWindowClose","padding","margin","width","height","paddingLeft","marginTop","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,YAAnC,EAAiDC,UAAjD,EAA6DC,MAA7D,QAA4E,mBAA5E;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEAF,OAAO,CAACG,SAAR,CAAkB,yCAAlB;AACAH,OAAO,CAACI,WAAR;AAGA,OAAO,MAAMC,GAAN,SAAkBX,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAClCY,KADkC,GAC1B;AACPC,MAAAA,WAAW,EAAC;AACXC,QAAAA,GAAG,EAAE,KAAKC,KAAL,CAAWC,MAAX,CAAkBF,GADZ;AAEXG,QAAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,MAAX,CAAkBC;AAFZ,OADL;AAKPC,MAAAA,cAAc,EAAC;AACdJ,QAAAA,GAAG,EAAC,KAAKC,KAAL,CAAWC,MAAX,CAAkBF,GADR;AAEdG,QAAAA,GAAG,EAAC,KAAKF,KAAL,CAAWC,MAAX,CAAkBC;AAFR,OALR;AASPE,MAAAA,GAAG,EAAC,IATG;AAUPC,MAAAA,OAAO,EAAC,CAAC;AAACC,QAAAA,QAAQ,EAAC,CAAV;AAAYP,QAAAA,GAAG,EAAE,CAAC,KAAlB;AAAyBG,QAAAA,GAAG,EAAE,KAA9B;AAAoCK,QAAAA,IAAI,EAAC;AAAzC,OAAD,EAAkD;AAACD,QAAAA,QAAQ,EAAC,EAAV;AAAaP,QAAAA,GAAG,EAAE,CAAC,KAAnB;AAA0BG,QAAAA,GAAG,EAAE,KAA/B;AAAqCK,QAAAA,IAAI,EAAC;AAA1C,OAAlD,EAAqG;AAACD,QAAAA,QAAQ,EAAC,CAAV;AAAYP,QAAAA,GAAG,EAAE,CAAC,MAAlB;AAA0BG,QAAAA,GAAG,EAAE,MAA/B;AAAsCK,QAAAA,IAAI,EAAC;AAA3C,OAArG,CAVD;AAWPC,MAAAA,KAAK,EAAC,IAXC;AAYPC,MAAAA,QAAQ,EAAC,EAZF;AAaPC,MAAAA,GAAG,EAAC;AAbG,KAD0B;;AAAA,SA4BlCC,eA5BkC,GA4BhB,CAAEC,KAAF,EAAQC,KAAR,KAAmB;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,UAAIA,KAAK,CAACL,IAAN,KAAaS,SAAjB,EAA2B;AAC1BzB,QAAAA,OAAO,CAAC0B,WAAR,CAAoBL,KAAK,CAACL,IAA1B,EAAgCW,IAAhC,CACCC,QAAQ,IAAI;AAAA,wCACYA,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QADzC;AAAA,gBACDvB,GADC,yBACDA,GADC;AAAA,gBACIG,GADJ,yBACIA,GADJ;AAETY,UAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAZ,EAAiBG,GAAjB;;AACA,cAAIH,GAAG,KAAIiB,SAAX,EAAqB;AACpB,mBAAO,IAAP;AACA;;AACD,eAAKO,QAAL,CAAc;AAChBzB,YAAAA,WAAW,EAAE;AACZC,cAAAA,GAAG,EAAEA,GADO;AAEZG,cAAAA,GAAG,EAAEA;AAFO,aADG;AAKhBC,YAAAA,cAAc,EAAE;AACfJ,cAAAA,GAAG,EAAEA,GADU;AAEfG,cAAAA,GAAG,EAAEA;AAFU;AALA,WAAd;AAUA,SAjBJ;AAkBA;AACA,OApBD,MAqBI;AACH,cAAMK,IAAI,GAAGK,KAAK,CAACY,cAAnB;AAAA,cACAC,QAAQ,GAAGb,KAAK,CAACS,QAAN,CAAeC,QAAf,CAAwBvB,GAAxB,EADX;AAAA,cAEA2B,QAAQ,GAAGd,KAAK,CAACS,QAAN,CAAeC,QAAf,CAAwBpB,GAAxB,EAFX,CADG,CAIH;;AACA,aAAKqB,QAAL,CAAc;AAEbzB,UAAAA,WAAW,EAAE;AACZC,YAAAA,GAAG,EAAE0B,QADO;AAEZvB,YAAAA,GAAG,EAAEwB;AAFO,WAFA;AAMbvB,UAAAA,cAAc,EAAE;AACfJ,YAAAA,GAAG,EAAE0B,QADU;AAEfvB,YAAAA,GAAG,EAAEwB;AAFU;AANH,SAAd;AAWD;AAEA,KArEiC;;AAAA,SAsElCC,QAtEkC,GAsEzB,MAAI;AACZb,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAjB;AACAiB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAQ,KAAKlB,KAAL,CAAWO,GAAX,CAAewB,SAAf,GAA2B7B,GAA3B,EAApB;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAY,WAASc,IAAI,CAACC,SAAL,CAAe,KAAKjC,KAAL,CAAWO,GAAX,CAAe2B,SAAf,EAAf,CAArB;AACA,WAAKR,QAAL,CAAc;AACbf,QAAAA,KAAK,EAAC,KAAKX,KAAL,CAAWO,GAAX,CAAe2B,SAAf,EADO;AAEbjC,QAAAA,WAAW,EAAE;AACXC,UAAAA,GAAG,EAAE,KAAKF,KAAL,CAAWO,GAAX,CAAewB,SAAf,GAA2B7B,GAA3B,EADM;AAEXG,UAAAA,GAAG,EAAE,KAAKL,KAAL,CAAWO,GAAX,CAAewB,SAAf,GAA2B1B,GAA3B;AAFM;AAFA,OAAd;AAOA,KAjFiC;;AAAA,SAkFlC8B,SAlFkC,GAkFvBC,MAAD,IAAU;AACnB,UAAG,CAACA,MAAJ,EAAW;AACV;AACA;;AAEDnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,MAAZ;AACA,WAAKC,KAAL,GAAaD,MAAb;AACAnB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKmB,KAAL,CAAWC,SAAX,EAAZ;AACA,WAAKZ,QAAL,CAAc;AAACb,QAAAA,GAAG,EAAC,KAAKwB;AAAV,OAAd;AAEA,KA5FiC;;AAAA,SA6FlCE,MA7FkC,GA6FzB,MAAI;AACZtB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAQc,IAAI,CAACC,SAAL,CAAe,KAAKjC,KAAL,CAAWO,GAAX,CAAewB,SAAf,EAAf,CAApB;AACA,WAAKL,QAAL,CAAc;AACbf,QAAAA,KAAK,EAAC,KAAKX,KAAL,CAAWO,GAAX,CAAe2B,SAAf;AADO,OAAd;AAGAjB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAjB;AACA,KAnGiC;;AAAA,SAoGlCwC,WApGkC,GAoGpB,CAACtC,GAAD,EAAKG,GAAL,EAASM,KAAT,KAAiB;AAC9B,UAAIA,KAAK,IAAE,IAAX,EAAgB;AACf,YAAIT,GAAG,GAACS,KAAK,CAAC8B,EAAN,CAASC,CAAb,IAAkBxC,GAAG,GAACS,KAAK,CAAC8B,EAAN,CAASE,CAA/B,IAAoCtC,GAAG,GAACM,KAAK,CAACiC,EAAN,CAASF,CAAjD,IAAsDrC,GAAG,GAACM,KAAK,CAACiC,EAAN,CAASD,CAAvE,EAAyE;AACxE,iBAAO,IAAP;AACA,SAFD,MAEK;AAAC,iBAAO,KAAP;AAAa;AACnB;;AACD,aAAO,KAAP;AACA,KA3GiC;AAAA;;AAiBlCE,EAAAA,qBAAqB,CAAEC,SAAF,EAAaC,SAAb,EAAwB;AAC5C9B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAjB;;AACA,QACA+C,SAAS,CAAC9C,WAAV,CAAsBC,GAAtB,KAA8B,KAAKF,KAAL,CAAWC,WAAX,CAAuBC,GADrD,EAEE;AACF,aAAO,IAAP;AACC,KAJD,MAIO,IAAK,KAAKF,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,KAAgC6C,SAAS,CAAC9C,WAAV,CAAsBC,GAA3D,EAAgE;AACvE,aAAO,KAAP;AACE;AACF;;AAmFD8C,EAAAA,MAAM,GAAG;AACR/B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAjB;AACD,UAAMiD,QAAQ,GAAG1D,YAAY,CAC5BF,aAAa,CACZc,KAAK,IACJ,oBAAC,SAAD;AACA,MAAA,MAAM,EAAE,KAAKA,KAAL,CAAW+C,MADnB;AAEA,MAAA,GAAG,EAAI,KAAKf,SAFZ;AAGA,MAAA,WAAW,EAAE,EAHb;AAIA,MAAA,aAAa,EAAE;AAAEjC,QAAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,WAAX,CAAuBC,GAA9B;AAAmCG,QAAAA,GAAG,EAAE,KAAKL,KAAL,CAAWC,WAAX,CAAuBI;AAA/D,OAJf;AAKA,MAAA,SAAS,EAAE,KAAKyB,QALhB;AAMA,MAAA,aAAa,EAAI,KAAKS,MANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQC,oBAAC,MAAD;AACC,MAAA,IAAI,EAAE,cADP;AAEC,MAAA,SAAS,EAAE,IAFZ;AAGC,MAAA,QAAQ,EAAE;AAAErC,QAAAA,GAAG,EAAE,KAAKF,KAAL,CAAWM,cAAX,CAA0BJ,GAAjC;AAAsCG,QAAAA,GAAG,EAAE,KAAKL,KAAL,CAAWM,cAAX,CAA0BD;AAArE,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARD,EAaI,KAAKL,KAAL,CAAWQ,OAAX,CAAmBD,GAAnB,CAAwB4C,MAAD,IAAY;AACnC,UAAG,KAAKX,WAAL,CAAiBW,MAAM,CAACjD,GAAxB,EAA4BiD,MAAM,CAAC9C,GAAnC,EAAuC,KAAKL,KAAL,CAAWW,KAAlD,KAA0D,IAA7D,EAAkE;AACjE,eACE,oBAAC,MAAD;AACG,UAAA,GAAG,EAAEwC,MAAM,CAAC1C,QADf;AAEG,UAAA,QAAQ,EAAE;AAAEP,YAAAA,GAAG,EAAEiD,MAAM,CAACjD,GAAd;AAAmBG,YAAAA,GAAG,EAAE8C,MAAM,CAAC9C;AAA/B,WAFb;AAGG,UAAA,IAAI,EAAGT,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMA,OAPD,MAOK;AAAC,eAAO,IAAP;AAAY;AACjB,KATD,CAbJ,EAuBK,KAAKI,KAAL,CAAWQ,OAAX,CAAmBD,GAAnB,CAAwB4C,MAAD,IAAY;AACpC,UAAG,KAAKX,WAAL,CAAiBW,MAAM,CAACjD,GAAxB,EAA4BiD,MAAM,CAAC9C,GAAnC,EAAuC,KAAKL,KAAL,CAAWW,KAAlD,KAA0D,IAA7D,EAAkE;AACjE,eACE,oBAAC,UAAD;AACC,UAAA,GAAG,EAAEwC,MAAM,CAAC1C,QADb;AAEC,UAAA,OAAO,EAAE,KAAK2C,iBAFf;AAGC,UAAA,QAAQ,EAAE;AAAElD,YAAAA,GAAG,EAAIiD,MAAM,CAACjD,GAAP,GAAa,IAAtB;AAA8BG,YAAAA,GAAG,EAAE8C,MAAM,CAAC9C;AAA1C,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAM,UAAA,KAAK,EAAE;AAAEgD,YAAAA,OAAO,EAAE,CAAX;AAAcC,YAAAA,MAAM,EAAE;AAAtB,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0CH,MAAM,CAACzC,IAAjD,CADD,CALD,CADF;AAUA,OAXD,MAWK;AAAC,eAAO,IAAP;AAAY;AAClB,KAbC,CAvBL,EAsCC,oBAAC,YAAD;AACC,MAAA,KAAK,EAAE;AACP6C,QAAAA,KAAK,EAAE,MADA;AAEPC,QAAAA,MAAM,EAAE,MAFD;AAGPC,QAAAA,WAAW,EAAE,MAHN;AAIPC,QAAAA,SAAS,EAAE,KAJJ;AAKPC,QAAAA,YAAY,EAAE;AALP,OADR;AAQC,MAAA,eAAe,EAAG,KAAK7C,eARxB;AASC,MAAA,KAAK,EAAE,CAAC,WAAD,CATR;AAUC,MAAA,WAAW,EAAE,2BAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtCD,CAFW,CADe,CAA7B;AA8DA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADA,CADF,EAOE;AAAK,MAAA,KAAK,EAAE;AAACyC,QAAAA,KAAK,EAAC;AAAP,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,QAAD;AACC,MAAA,YAAY,EAAC,sGADd;AAEC,MAAA,cAAc,EACb;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM;AAAR,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF;AAKC,MAAA,gBAAgB,EACf;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM,EAAE,KAAKrD,KAAL,CAAWqD;AAArB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF;AAQC,MAAA,UAAU,EACT;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM;AAAR,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CAPF,CADD;AA2BE;;AAxMgC;AA2MnC,eAAezD,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker  } from \"react-google-maps\";\r\nimport Geocode from \"react-geocode\"\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport basket from \"../image/basket.png\"\r\n\r\nGeocode.setApiKey('AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI');\r\nGeocode.enableDebug();\r\n\r\n\r\nexport class Map extends Component {\r\n\tstate = {\r\n\t\tmapPosition:{\r\n\t\t\tlat: this.props.center.lat,\r\n\t\t\tlng: this.props.center.lng\r\n\t\t},\r\n\t\tmarkerPosition:{\r\n\t\t\tlat:this.props.center.lat,\r\n\t\t\tlng:this.props.center.lng\r\n\t\t},\r\n\t\tmap:null,\r\n\t\tmarkers:[{photo_id:0,lat: -33.78, lng: 151.2,name:\"add1\"},{photo_id:10,lat: -33.79, lng: 151.1,name:\"add22\"},{photo_id:2,lat: -33.785, lng: 151.23,name:\"add3\"}],\r\n\t\tbound:null,\r\n\t\tmarkers1:[],\r\n\t\tnew:null\r\n\t}\r\n\r\n\tshouldComponentUpdate( nextProps, nextState ){\r\n\t\tconsole.log(this.state)\r\n\t\tif (\r\n\t\tnextState.mapPosition.lat !== this.state.mapPosition.lat \r\n\t\t) {\r\n\t\treturn true\r\n\t\t} else if ( this.state.mapPosition.lat  === nextState.mapPosition.lat ){\r\n\t\treturn false\t\r\n\t \t}\r\n\t}\r\n\r\n\tonPlaceSelected = ( place,event ) => {\r\n\t\tconsole.log(place)\r\n\t\tif (place.name!==undefined){\r\n\t\t\tGeocode.fromAddress(place.name).then(\r\n\t\t\t\tresponse => {\r\n    \t\t\tconst { lat, lng } = response.results[0].geometry.location\r\n    \t\t\tconsole.log(lat, lng)\r\n    \t\t\tif (lat ===undefined){\r\n    \t\t\t\treturn null\r\n    \t\t\t}\r\n    \t\t\tthis.setState({\r\n\t\t\t\t\tmapPosition: {\r\n\t\t\t\t\t\tlat: lat,\r\n\t\t\t\t\t\tlng: lng\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmarkerPosition: {\r\n\t\t\t\t\t\tlat: lat,\r\n\t\t\t\t\t\tlng: lng\r\n\t\t\t\t},\r\n\t\t\t})\r\n    \t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconst name = place.formatted_name,\r\n\t\t\tlatValue = place.geometry.location.lat(),\r\n\t\t\tlngValue = place.geometry.location.lng();\r\n\t\t\t// Set these values in the state.\r\n\t\t\tthis.setState({\r\n\r\n\t\t\t\tmapPosition: {\r\n\t\t\t\t\tlat: latValue,\r\n\t\t\t\t\tlng: lngValue\r\n\t\t\t\t},\r\n\t\t\t\tmarkerPosition: {\r\n\t\t\t\t\tlat: latValue,\r\n\t\t\t\t\tlng: lngValue\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t}\r\n\r\n\t};\r\n\tmapmoved=()=>{\r\n\t\tconsole.log(this.state)\r\n\t\tconsole.log(\"drag:\"+this.state.map.getCenter().lat())\r\n\t\tconsole.log(\"bound:\"+JSON.stringify(this.state.map.getBounds()))\r\n\t\tthis.setState({\r\n\t\t\tbound:this.state.map.getBounds(),\r\n\t\t\tmapPosition: {\r\n\t\t\t\t\tlat: this.state.map.getCenter().lat(),\r\n\t\t\t\t\tlng: this.state.map.getCenter().lng()\r\n\t\t\t\t},\r\n\t\t})\r\n\t}\r\n\tmaploaded=(mapRef)=>{\r\n\t\tif(!mapRef){\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconsole.log(mapRef)\r\n\t\tthis._gmap = mapRef;\r\n\t\tconsole.log(this._gmap.getbounds())\r\n\t\tthis.setState({new:this._gmap})\r\n\t\t\r\n\t}\r\n\tonZoom = ()=>{\r\n\t\tconsole.log(\"zoom:\"+JSON.stringify(this.state.map.getCenter()))\r\n\t\tthis.setState({\r\n\t\t\tbound:this.state.map.getBounds()\r\n\t\t})\r\n\t\tconsole.log(this.state\t)\r\n\t}\r\n\tinsideBound = (lat,lng,bound)=>{\r\n\t\tif (bound!=null){\r\n\t\t\tif (lat>bound.na.j && lat<bound.na.l && lng>bound.ia.j && lng<bound.ia.l){\r\n\t\t\t\treturn true\r\n\t\t\t}else{return false}\r\n\t\t}\r\n\t\treturn false\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\tconsole.log(this.state)\r\n\tconst AsyncMap = withScriptjs(\r\n\t\twithGoogleMap(\r\n\t\t\tprops => (\r\n\t\t\t\t<GoogleMap \r\n\t\t\t\tgoogle={this.props.google}\r\n\t\t\t\tref = {this.maploaded}\r\n\t\t\t\tdefaultZoom={10}\r\n\t\t\t\tdefaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\r\n\t\t\t\tonDragEnd={this.mapmoved}\r\n\t\t\t\tonZoomChanged = {this.onZoom}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Marker \r\n\t\t\t\t\t\tname={'Dolores park'}\r\n\t\t\t\t\t\tdraggable={true}\r\n\t\t\t\t\t\tposition={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\r\n\t\t\t\t\t/>\r\n  \t\t\t\t\t{this.state.markers.map((marker) => {\r\n  \t\t\t\t\t\tif(this.insideBound(marker.lat,marker.lng,this.state.bound)==true){\r\n  \t\t\t\t\t\t\treturn( \r\n\t\t    \t\t\t\t\t<Marker\r\n\t\t      \t\t\t\t\t\tkey={marker.photo_id}\r\n\t\t      \t\t\t\t\t\tposition={{ lat: marker.lat, lng: marker.lng }}\r\n\t\t      \t\t\t\t\t\ticon ={basket}\r\n\t\t    \t\t\t\t\t/>)\r\n  \t\t\t\t\t\t}else{return null}\r\n    \t\t\t\t})}\r\n    \t\t\t\t{this.state.markers.map((marker) => {\r\n  \t\t\t\t\t\tif(this.insideBound(marker.lat,marker.lng,this.state.bound)==true){\r\n  \t\t\t\t\t\t\treturn( \r\n\t\t    \t\t\t\t\t<InfoWindow\r\n\t\t    \t\t\t\t\t\tkey={marker.photo_id}\r\n\t\t   \t\t\t\t\t\t\tonClose={this.onInfoWindowClose}\r\n\t\t   \t\t\t\t\t\t\tposition={{ lat: ( marker.lat + 0.02 ), lng: marker.lng }}\r\n\t\t  \t\t\t\t\t\t>\r\n\t\t   \t\t\t\t\t\t\t<div>\r\n\t\t    \t\t\t\t\t\t\t<span style={{ padding: 0, margin: 0 }}>{ marker.name }</span>\r\n\t\t   \t\t\t\t\t\t\t</div>\r\n\t\t  \t\t\t\t\t\t</InfoWindow>)\r\n  \t\t\t\t\t\t}else{return null}\r\n \t\t\t\t\t })}\r\n\r\n\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: '200%',\r\n\t\t\t\t\t\theight: '40px',\r\n\t\t\t\t\t\tpaddingLeft: '16px',\r\n\t\t\t\t\t\tmarginTop: '2px',\r\n\t\t\t\t\t\tmarginBottom: '100px'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonPlaceSelected={ this.onPlaceSelected }\r\n\t\t\t\t\t\ttypes={['(regions)']}\r\n\t\t\t\t\t\tplaceholder={\"Enter and select location\"}\r\n\r\n\t\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t</GoogleMap>\r\n\t\t\t)\r\n\t\t)\r\n\t)\r\n\r\n\t\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t <div>\r\n\t\t\t\t<h1>\r\n\t\t\t\t\tSearch for the Supermarkets near you\r\n\t\t\t\t</h1>\r\n\t\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t <div style={{width:\"500px\"}}>\r\n\r\n\t\t\t\t<AsyncMap\r\n\t\t\t\t\tgoogleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI&libraries=places\"\r\n\t\t\t\t\tloadingElement={\r\n\t\t\t\t\t <div style={{ height: `100%` }} />\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontainerElement={\r\n\t\t\t\t\t <div style={{ height: this.props.height }} />\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmapElement={\r\n\t\t\t\t\t <div style={{ height: `100%` }} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t \r\n\t)\r\n  }\r\n}\r\n\r\nexport default Map"]},"metadata":{},"sourceType":"module"}