{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlankHoang\\\\Desktop\\\\freecodeacademy\\\\shoppingbasket\\\\client\\\\src\\\\components\\\\AddShop\\\\Shop.js\";\nimport React, { Component } from \"react\";\nimport { withGoogleMap, GoogleMap, withScriptjs, Marker } from \"react-google-maps\";\nimport Autocomplete from 'react-google-autocomplete';\nimport Geocode from \"react-geocode\";\nGeocode.setApiKey(\"AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI\");\nGeocode.enableDebug();\n\nclass Shop extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getStreetNumber = addressArray => {\n      let StreetNumber = '';\n\n      for (let i = 0; i < addressArray.length; i++) {\n        if (addressArray[i].types[0] && 'street_number' === addressArray[i].types[0]) {\n          StreetNumber = addressArray[i].long_name;\n          return StreetNumber;\n        }\n      }\n    };\n\n    this.getStreet = addressArray => {\n      let Street = '';\n\n      for (let i = 0; i < addressArray.length; i++) {\n        if (addressArray[i].types[0] && 'route' === addressArray[i].types[0]) {\n          Street = addressArray[i].long_name;\n          return Street;\n        }\n      }\n    };\n\n    this.getPostcode = addressArray => {\n      let postcode = '';\n\n      for (let i = 0; i < addressArray.length; i++) {\n        if (addressArray[i].types[0] && 'postal_code' === addressArray[i].types[0]) {\n          postcode = addressArray[i].long_name;\n          return postcode;\n        }\n      }\n    };\n\n    this.getCity = addressArray => {\n      let city = '';\n\n      for (let i = 0; i < addressArray.length; i++) {\n        if (addressArray[i].types[0]) {\n          for (let j = 0; j < addressArray[i].types.length; j++) {\n            if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\n              city = addressArray[i].long_name;\n              return city;\n            }\n          }\n        }\n      }\n    };\n\n    this.getState = addressArray => {\n      let state = '';\n\n      for (let i = 0; i < addressArray.length; i++) {\n        for (let i = 0; i < addressArray.length; i++) {\n          if (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\n            state = addressArray[i].short_name;\n            return state;\n          }\n        }\n      }\n    };\n\n    this.onPlaceSelected = place => {\n      const address = place.formatted_address,\n            addressArray = place.address_components,\n            city = this.getCity(addressArray),\n            area = this.getArea(addressArray),\n            state = this.getState(addressArray),\n            latValue = place.geometry.location.lat(),\n            lngValue = place.geometry.location.lng(); // Set these values in the state.\n\n      this.setState({\n        address: address ? address : '',\n        area: area ? area : '',\n        city: city ? city : '',\n        state: state ? state : '',\n        markerPosition: {\n          lat: latValue,\n          lng: lngValue\n        },\n        mapPosition: {\n          lat: latValue,\n          lng: lngValue\n        }\n      });\n    };\n\n    this.onMarkerDragEnd = event => {\n      console.log('event', event);\n      let newLat = event.latLng.lat(),\n          newLng = event.latLng.lng(),\n          addressArray = [];\n      Geocode.fromLatLng(newLat, newLng).then(response => {\n        const completeAddress = response.results[0].formatted_address,\n              addressArray = response.results[0].address_components,\n              street_number = this.getStreetNumber(addressArray),\n              street = this.getStreet(addressArray),\n              city = this.getCity(addressArray),\n              postcode = this.getPostcode(addressArray),\n              state = this.getState(addressArray),\n              address = street_number + \" \" + street;\n        this.props.markerInfo({\n          completeAddress: completeAddress ? completeAddress : '',\n          address: address ? address : '',\n          postcode: postcode ? postcode : '',\n          city: city ? city : '',\n          state: state ? state : '',\n          markerPosition: {\n            lat: newLat,\n            lng: newLng\n          },\n          mapPosition: {\n            lat: newLat,\n            lng: newLng\n          }\n        });\n      }, error => {\n        console.error(error);\n      });\n    };\n\n    this.state = {\n      completeAddress: \"\",\n      address: '',\n      city: '',\n      postcode: '',\n      state: '',\n      mapPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      },\n      markerPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      }\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.markerPosition.lat !== this.props.center.lat || this.state.address !== nextState.address || this.state.city !== nextState.city || this.state.area !== nextState.area || this.state.state !== nextState.state) {\n      return true;\n    } else if (this.props.center.lat !== nextProps.center.lat) {\n      return true;\n    } else if (this.props.center.lat === nextProps.center.lat) {\n      return false;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.center.lat !== prevProps.center.lat) {\n      this.setState({\n        markerPosition: this.props.center,\n        mapPosition: this.props.center\n      });\n    }\n  }\n\n  render() {\n    console.log(\"shop\", this.state, this.props);\n    const AsyncMap = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n      google: this.props.google,\n      defaultZoom: this.props.zoom,\n      center: {\n        lat: this.state.mapPosition.lat,\n        lng: this.state.mapPosition.lng\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      google: this.props.google,\n      draggable: true,\n      onDragEnd: this.onMarkerDragEnd,\n      position: {\n        lat: this.state.markerPosition.lat,\n        lng: this.state.markerPosition.lng\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(Marker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      style: {\n        width: '100%',\n        height: '40px',\n        paddingLeft: '16px',\n        marginTop: '2px',\n        marginBottom: '100px'\n      },\n      onPlaceSelected: this.onPlaceSelected,\n      types: ['(regions)'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }))));\n    let map;\n\n    if (this.props.center.lat !== undefined) {\n      map = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(AsyncMap, {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI&libraries=places\",\n        loadingElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }),\n        containerElement: React.createElement(\"div\", {\n          style: {\n            height: this.props.height\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }),\n        mapElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }));\n    } else {\n      map = React.createElement(\"div\", {\n        style: {\n          height: this.props.height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      });\n    }\n\n    return map;\n  }\n\n}\n\nexport default Shop;","map":{"version":3,"sources":["C:\\Users\\AlankHoang\\Desktop\\freecodeacademy\\shoppingbasket\\client\\src\\components\\AddShop\\Shop.js"],"names":["React","Component","withGoogleMap","GoogleMap","withScriptjs","Marker","Autocomplete","Geocode","setApiKey","enableDebug","Shop","constructor","props","getStreetNumber","addressArray","StreetNumber","i","length","types","long_name","getStreet","Street","getPostcode","postcode","getCity","city","j","getState","state","short_name","onPlaceSelected","place","address","formatted_address","address_components","area","getArea","latValue","geometry","location","lat","lngValue","lng","setState","markerPosition","mapPosition","onMarkerDragEnd","event","console","log","newLat","latLng","newLng","fromLatLng","then","response","completeAddress","results","street_number","street","markerInfo","error","center","shouldComponentUpdate","nextProps","nextState","componentDidUpdate","prevProps","render","AsyncMap","google","zoom","width","height","paddingLeft","marginTop","marginBottom","map","undefined"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,YAAnC,EAAiDC,MAAjD,QAA+D,mBAA/D;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACAA,OAAO,CAACC,SAAR,CAAkB,yCAAlB;AACAD,OAAO,CAACE,WAAR;;AAGA,MAAMC,IAAN,SAAmBV,KAAK,CAACC,SAAzB,CAAkC;AAClCU,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAOA,KAAP;;AADkB,SA+CnBC,eA/CmB,GA+CCC,YAAF,IAAoB;AACrC,UAAIC,YAAY,GAAG,EAAnB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,YAAY,CAACG,MAAjC,EAAyCD,CAAC,EAA1C,EAA+C;AAC9C,YAAKF,YAAY,CAAEE,CAAF,CAAZ,CAAkBE,KAAlB,CAAwB,CAAxB,KAA8B,oBAAoBJ,YAAY,CAAEE,CAAF,CAAZ,CAAkBE,KAAlB,CAAwB,CAAxB,CAAvD,EAAoF;AACnFH,UAAAA,YAAY,GAAGD,YAAY,CAAEE,CAAF,CAAZ,CAAkBG,SAAjC;AACA,iBAAOJ,YAAP;AACA;AACD;AACD,KAvDkB;;AAAA,SAyDlBK,SAzDkB,GAyDJN,YAAF,IAAoB;AAChC,UAAIO,MAAM,GAAG,EAAb;;AACA,WAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,YAAY,CAACG,MAAjC,EAAyCD,CAAC,EAA1C,EAA+C;AAC9C,YAAKF,YAAY,CAAEE,CAAF,CAAZ,CAAkBE,KAAlB,CAAwB,CAAxB,KAA8B,YAAYJ,YAAY,CAAEE,CAAF,CAAZ,CAAkBE,KAAlB,CAAwB,CAAxB,CAA/C,EAA4E;AAC3EG,UAAAA,MAAM,GAAGP,YAAY,CAAEE,CAAF,CAAZ,CAAkBG,SAA3B;AACA,iBAAOE,MAAP;AACA;AACD;AACD,KAjEkB;;AAAA,SAmEnBC,WAnEmB,GAmEHR,YAAF,IAAoB;AACjC,UAAIS,QAAQ,GAAG,EAAf;;AACA,WAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,YAAY,CAACG,MAAjC,EAAyCD,CAAC,EAA1C,EAA+C;AAC9C,YAAKF,YAAY,CAAEE,CAAF,CAAZ,CAAkBE,KAAlB,CAAwB,CAAxB,KAA8B,kBAAkBJ,YAAY,CAAEE,CAAF,CAAZ,CAAkBE,KAAlB,CAAwB,CAAxB,CAArD,EAAkF;AACjFK,UAAAA,QAAQ,GAAGT,YAAY,CAAEE,CAAF,CAAZ,CAAkBG,SAA7B;AACA,iBAAOI,QAAP;AACA;AACD;AACD,KA3EkB;;AAAA,SA6EnBC,OA7EmB,GA6EPV,YAAF,IAAoB;AAC7B,UAAIW,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,YAAY,CAACG,MAAjC,EAAyCD,CAAC,EAA1C,EAA+C;AAC9C,YAAKF,YAAY,CAAEE,CAAF,CAAZ,CAAkBE,KAAlB,CAAwB,CAAxB,CAAL,EAAmC;AAClC,eAAM,IAAIQ,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGZ,YAAY,CAAEE,CAAF,CAAZ,CAAkBE,KAAlB,CAAwBD,MAA7C,EAAqDS,CAAC,EAAtD,EAA2D;AAC1D,gBAAK,0BAA0BZ,YAAY,CAAEE,CAAF,CAAZ,CAAkBE,KAAlB,CAAwBQ,CAAxB,CAA1B,IAAwD,eAAeZ,YAAY,CAAEE,CAAF,CAAZ,CAAkBE,KAAlB,CAAwBQ,CAAxB,CAA5E,EAAyG;AACxGD,cAAAA,IAAI,GAAGX,YAAY,CAAEE,CAAF,CAAZ,CAAkBG,SAAzB;AACA,qBAAOM,IAAP;AACA;AACD;AACD;AACD;AACD,KAzFkB;;AAAA,SA2FnBE,QA3FmB,GA2FNb,YAAF,IAAoB;AAC9B,UAAIc,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,YAAY,CAACG,MAAjC,EAAyCD,CAAC,EAA1C,EAA+C;AAC9C,aAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,YAAY,CAACG,MAAjC,EAAyCD,CAAC,EAA1C,EAA+C;AAC9C,cAAKF,YAAY,CAAEE,CAAF,CAAZ,CAAkBE,KAAlB,CAAwB,CAAxB,KAA8B,kCAAkCJ,YAAY,CAAEE,CAAF,CAAZ,CAAkBE,KAAlB,CAAwB,CAAxB,CAArE,EAAkG;AACjGU,YAAAA,KAAK,GAAGd,YAAY,CAAEE,CAAF,CAAZ,CAAkBa,UAA1B;AACA,mBAAOD,KAAP;AACA;AACD;AACD;AACD,KArGkB;;AAAA,SAsGpBE,eAtGoB,GAsGAC,KAAF,IAAa;AAC/B,YAAMC,OAAO,GAAGD,KAAK,CAACE,iBAAtB;AAAA,YACGnB,YAAY,GAAIiB,KAAK,CAACG,kBADzB;AAAA,YAEGT,IAAI,GAAG,KAAKD,OAAL,CAAcV,YAAd,CAFV;AAAA,YAGGqB,IAAI,GAAG,KAAKC,OAAL,CAActB,YAAd,CAHV;AAAA,YAIGc,KAAK,GAAG,KAAKD,QAAL,CAAeb,YAAf,CAJX;AAAA,YAKGuB,QAAQ,GAAGN,KAAK,CAACO,QAAN,CAAeC,QAAf,CAAwBC,GAAxB,EALd;AAAA,YAMGC,QAAQ,GAAGV,KAAK,CAACO,QAAN,CAAeC,QAAf,CAAwBG,GAAxB,EANd,CAD+B,CAQ/B;;AACE,WAAKC,QAAL,CAAc;AACbX,QAAAA,OAAO,EAAIA,OAAF,GAAcA,OAAd,GAAwB,EADpB;AAEbG,QAAAA,IAAI,EAAIA,IAAF,GAAWA,IAAX,GAAkB,EAFX;AAGbV,QAAAA,IAAI,EAAIA,IAAF,GAAWA,IAAX,GAAkB,EAHX;AAIbG,QAAAA,KAAK,EAAIA,KAAF,GAAYA,KAAZ,GAAoB,EAJd;AAKbgB,QAAAA,cAAc,EAAE;AACfJ,UAAAA,GAAG,EAAEH,QADU;AAEfK,UAAAA,GAAG,EAAED;AAFU,SALH;AASbI,QAAAA,WAAW,EAAE;AACZL,UAAAA,GAAG,EAAEH,QADO;AAEZK,UAAAA,GAAG,EAAED;AAFO;AATA,OAAd;AAcA,KA7HkB;;AAAA,SA8HnBK,eA9HmB,GA8HCC,KAAF,IAAa;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAa,OAAb,EAAsBF,KAAtB;AACA,UAAIG,MAAM,GAAGH,KAAK,CAACI,MAAN,CAAaX,GAAb,EAAb;AAAA,UACCY,MAAM,GAAGL,KAAK,CAACI,MAAN,CAAaT,GAAb,EADV;AAAA,UAEC5B,YAAY,GAAG,EAFhB;AAGFP,MAAAA,OAAO,CAAC8C,UAAR,CAAoBH,MAApB,EAA6BE,MAA7B,EAAsCE,IAAtC,CACGC,QAAQ,IAAI;AACX,cAAMC,eAAe,GAAGD,QAAQ,CAACE,OAAT,CAAiB,CAAjB,EAAoBxB,iBAA5C;AAAA,cACCnB,YAAY,GAAIyC,QAAQ,CAACE,OAAT,CAAiB,CAAjB,EAAoBvB,kBADrC;AAAA,cAECwB,aAAa,GAAE,KAAK7C,eAAL,CAAqBC,YAArB,CAFhB;AAAA,cAGC6C,MAAM,GAAE,KAAKvC,SAAL,CAAeN,YAAf,CAHT;AAAA,cAICW,IAAI,GAAG,KAAKD,OAAL,CAAcV,YAAd,CAJR;AAAA,cAKCS,QAAQ,GAAG,KAAKD,WAAL,CAAkBR,YAAlB,CALZ;AAAA,cAMCc,KAAK,GAAG,KAAKD,QAAL,CAAeb,YAAf,CANT;AAAA,cAOCkB,OAAO,GAAG0B,aAAa,GAAE,GAAf,GAAmBC,MAP9B;AAQJ,aAAK/C,KAAL,CAAWgD,UAAX,CAAuB;AACnBJ,UAAAA,eAAe,EAAIA,eAAF,GAAsBA,eAAtB,GAAwC,EADtC;AAElBxB,UAAAA,OAAO,EAAIA,OAAF,GAAcA,OAAd,GAAwB,EAFf;AAGlBT,UAAAA,QAAQ,EAAIA,QAAF,GAAeA,QAAf,GAA0B,EAHlB;AAIlBE,UAAAA,IAAI,EAAIA,IAAF,GAAWA,IAAX,GAAkB,EAJN;AAKlBG,UAAAA,KAAK,EAAIA,KAAF,GAAYA,KAAZ,GAAoB,EALT;AAMlBgB,UAAAA,cAAc,EAAE;AACjBJ,YAAAA,GAAG,EAAEU,MADY;AAEjBR,YAAAA,GAAG,EAAEU;AAFY,WANE;AAUlBP,UAAAA,WAAW,EAAE;AACdL,YAAAA,GAAG,EAAEU,MADS;AAEdR,YAAAA,GAAG,EAAEU;AAFS;AAVK,SAAvB;AAeI,OAzBJ,EA0BGS,KAAK,IAAI;AACRb,QAAAA,OAAO,CAACa,KAAR,CAAcA,KAAd;AACA,OA5BJ;AA8BE,KAjKkB;;AAElB,SAAKjC,KAAL,GAAa;AACT4B,MAAAA,eAAe,EAAE,EADR;AAEZxB,MAAAA,OAAO,EAAE,EAFG;AAGZP,MAAAA,IAAI,EAAE,EAHM;AAIZF,MAAAA,QAAQ,EAAE,EAJE;AAKZK,MAAAA,KAAK,EAAE,EALK;AAMZiB,MAAAA,WAAW,EAAE;AACZL,QAAAA,GAAG,EAAE,KAAK5B,KAAL,CAAWkD,MAAX,CAAkBtB,GADX;AAEZE,QAAAA,GAAG,EAAE,KAAK9B,KAAL,CAAWkD,MAAX,CAAkBpB;AAFX,OAND;AAUZE,MAAAA,cAAc,EAAE;AACfJ,QAAAA,GAAG,EAAE,KAAK5B,KAAL,CAAWkD,MAAX,CAAkBtB,GADR;AAEfE,QAAAA,GAAG,EAAE,KAAK9B,KAAL,CAAWkD,MAAX,CAAkBpB;AAFR;AAVJ,KAAb;AAeA;;AAGDqB,EAAAA,qBAAqB,CAAEC,SAAF,EAAaC,SAAb,EAAwB;AAC5C,QACC,KAAKrC,KAAL,CAAWgB,cAAX,CAA0BJ,GAA1B,KAAkC,KAAK5B,KAAL,CAAWkD,MAAX,CAAkBtB,GAApD,IACA,KAAKZ,KAAL,CAAWI,OAAX,KAAuBiC,SAAS,CAACjC,OADjC,IAEA,KAAKJ,KAAL,CAAWH,IAAX,KAAoBwC,SAAS,CAACxC,IAF9B,IAGA,KAAKG,KAAL,CAAWO,IAAX,KAAoB8B,SAAS,CAAC9B,IAH9B,IAIA,KAAKP,KAAL,CAAWA,KAAX,KAAqBqC,SAAS,CAACrC,KALhC,EAME;AACD,aAAO,IAAP;AACA,KARD,MAQM,IAAK,KAAKhB,KAAL,CAAWkD,MAAX,CAAkBtB,GAAlB,KAA0BwB,SAAS,CAACF,MAAV,CAAiBtB,GAAhD,EAAqD;AAC1D,aAAO,IAAP;AACA,KAFK,MAGA,IAAK,KAAK5B,KAAL,CAAWkD,MAAX,CAAkBtB,GAAlB,KAA0BwB,SAAS,CAACF,MAAV,CAAiBtB,GAAhD,EAAqD;AAC1D,aAAO,KAAP;AACA;AACD;;AAGD0B,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AACzB,QAAK,KAAKvD,KAAL,CAAWkD,MAAX,CAAkBtB,GAAlB,KAA0B2B,SAAS,CAACL,MAAV,CAAiBtB,GAAhD,EAAqD;AAClD,WAAKG,QAAL,CAAc;AACVC,QAAAA,cAAc,EAAC,KAAKhC,KAAL,CAAWkD,MADhB;AAEVjB,QAAAA,WAAW,EAAC,KAAKjC,KAAL,CAAWkD;AAFb,OAAd;AAIH;AACH;;AAqHFM,EAAAA,MAAM,GAAE;AACJpB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmB,KAAKrB,KAAxB,EAA8B,KAAKhB,KAAnC;AACJ,UAAMyD,QAAQ,GAAGjE,YAAY,CAC1BF,aAAa,CACZU,KAAK,IACJ,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,KAAKA,KAAL,CAAW0D,MAA9B;AACC,MAAA,WAAW,EAAE,KAAK1D,KAAL,CAAW2D,IADzB;AAEC,MAAA,MAAM,EAAE;AAAE/B,QAAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWiB,WAAX,CAAuBL,GAA9B;AAAmCE,QAAAA,GAAG,EAAE,KAAKd,KAAL,CAAWiB,WAAX,CAAuBH;AAA/D,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOC,oBAAC,MAAD;AACA,MAAA,MAAM,EAAE,KAAK9B,KAAL,CAAW0D,MADnB;AAEO,MAAA,SAAS,EAAG,IAFnB;AAGO,MAAA,SAAS,EAAI,KAAKxB,eAHzB;AAIO,MAAA,QAAQ,EAAE;AAAEN,QAAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWgB,cAAX,CAA0BJ,GAAjC;AAAsCE,QAAAA,GAAG,EAAE,KAAKd,KAAL,CAAWgB,cAAX,CAA0BF;AAArE,OAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPD,EAaC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbD,EAcE,oBAAC,YAAD;AACA,MAAA,KAAK,EAAE;AACN8B,QAAAA,KAAK,EAAE,MADD;AAENC,QAAAA,MAAM,EAAE,MAFF;AAGNC,QAAAA,WAAW,EAAE,MAHP;AAINC,QAAAA,SAAS,EAAE,KAJL;AAKNC,QAAAA,YAAY,EAAE;AALR,OADP;AAQA,MAAA,eAAe,EAAG,KAAK9C,eARvB;AASA,MAAA,KAAK,EAAE,CAAC,WAAD,CATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CAFW,CADa,CAA7B;AAgCA,QAAI+C,GAAJ;;AACE,QAAI,KAAKjE,KAAL,CAAWkD,MAAX,CAAkBtB,GAAlB,KAA0BsC,SAA9B,EAA0C;AACzCD,MAAAA,GAAG,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ,oBAAC,QAAD;AACC,QAAA,YAAY,EAAC,sGADd;AAEC,QAAA,cAAc,EACb;AAAK,UAAA,KAAK,EAAE;AAAEJ,YAAAA,MAAM;AAAR,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAKC,QAAA,gBAAgB,EACf;AAAK,UAAA,KAAK,EAAE;AAAEA,YAAAA,MAAM,EAAE,KAAK7D,KAAL,CAAW6D;AAArB,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF;AAQC,QAAA,UAAU,EACT;AAAK,UAAA,KAAK,EAAE;AAAEA,YAAAA,MAAM;AAAR,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI,CAAN;AAcF,KAfC,MAeK;AACJI,MAAAA,GAAG,GAAG;AAAK,QAAA,KAAK,EAAE;AAACJ,UAAAA,MAAM,EAAE,KAAK7D,KAAL,CAAW6D;AAApB,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN;AACA;;AACD,WAAQI,GAAR;AACA;;AAzNgC;;AA2NlC,eAAenE,IAAf","sourcesContent":["import React, {Component} from \"react\"\r\nimport { withGoogleMap, GoogleMap, withScriptjs, Marker } from \"react-google-maps\";\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport Geocode from \"react-geocode\";\r\nGeocode.setApiKey(\"AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI\");\r\nGeocode.enableDebug();\r\n\r\n\r\nclass Shop extends React.Component{\r\nconstructor( props ){\r\n  super( props );\r\n  this.state = {\r\n      completeAddress :\"\",\r\n   address: '',\r\n   city: '',\r\n   postcode: '',\r\n   state: '',\r\n   mapPosition: {\r\n    lat: this.props.center.lat,\r\n    lng: this.props.center.lng\r\n   },\r\n   markerPosition: {\r\n    lat: this.props.center.lat,\r\n    lng: this.props.center.lng\r\n}\r\n  }\r\n }\r\n\r\n\r\n shouldComponentUpdate( nextProps, nextState ){\r\n  if (\r\n   this.state.markerPosition.lat !== this.props.center.lat ||\r\n   this.state.address !== nextState.address ||\r\n   this.state.city !== nextState.city ||\r\n   this.state.area !== nextState.area ||\r\n   this.state.state !== nextState.state\r\n  ) {\r\n   return true\r\n  }else if ( this.props.center.lat !== nextProps.center.lat ){\r\n   return true\r\n  }\r\n   else if ( this.props.center.lat === nextProps.center.lat ){\r\n   return false\r\n  }\r\n }\r\n\r\n\r\n componentDidUpdate(prevProps){\r\n     if ( this.props.center.lat !== prevProps.center.lat ){\r\n        this.setState({\r\n            markerPosition:this.props.center,\r\n            mapPosition:this.props.center,\r\n        })\r\n    }\r\n }\r\n\r\n getStreetNumber = ( addressArray ) => {\r\n  let StreetNumber = '';\r\n  for( let i = 0; i < addressArray.length; i++ ) {\r\n   if ( addressArray[ i ].types[0] && 'street_number' === addressArray[ i ].types[0] ) {\r\n    StreetNumber = addressArray[ i ].long_name;\r\n    return StreetNumber;\r\n   }\r\n  }\r\n }\r\n\r\n  getStreet = ( addressArray ) => {\r\n  let Street = '';\r\n  for( let i = 0; i < addressArray.length; i++ ) {\r\n   if ( addressArray[ i ].types[0] && 'route' === addressArray[ i ].types[0] ) {\r\n    Street = addressArray[ i ].long_name;\r\n    return Street;\r\n   }\r\n  }\r\n }\r\n\r\n getPostcode = ( addressArray ) => {\r\n  let postcode = '';\r\n  for( let i = 0; i < addressArray.length; i++ ) {\r\n   if ( addressArray[ i ].types[0] && 'postal_code' === addressArray[ i ].types[0] ) {\r\n    postcode = addressArray[ i ].long_name;\r\n    return postcode;\r\n   }\r\n  }\r\n };\r\n\r\n getCity = ( addressArray ) => {\r\n  let city = '';\r\n  for( let i = 0; i < addressArray.length; i++ ) {\r\n   if ( addressArray[ i ].types[0]  ) {\r\n    for ( let j = 0; j < addressArray[ i ].types.length; j++ ) {\r\n     if ( 'sublocality_level_1' === addressArray[ i ].types[j] || 'locality' === addressArray[ i ].types[j] ) {\r\n      city = addressArray[ i ].long_name;\r\n      return city;\r\n     }\r\n    }\r\n   }\r\n  }\r\n };\r\n\r\n getState = ( addressArray ) => {\r\n  let state = '';\r\n  for( let i = 0; i < addressArray.length; i++ ) {\r\n   for( let i = 0; i < addressArray.length; i++ ) {\r\n    if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\r\n     state = addressArray[ i ].short_name;\r\n     return state;\r\n    }\r\n   }\r\n  }\r\n };\r\nonPlaceSelected = ( place ) => {\r\nconst address = place.formatted_address,\r\n   addressArray =  place.address_components,\r\n   city = this.getCity( addressArray ),\r\n   area = this.getArea( addressArray ),\r\n   state = this.getState( addressArray ),\r\n   latValue = place.geometry.location.lat(),\r\n   lngValue = place.geometry.location.lng();\r\n// Set these values in the state.\r\n  this.setState({\r\n   address: ( address ) ? address : '',\r\n   area: ( area ) ? area : '',\r\n   city: ( city ) ? city : '',\r\n   state: ( state ) ? state : '',\r\n   markerPosition: {\r\n    lat: latValue,\r\n    lng: lngValue\r\n   },\r\n   mapPosition: {\r\n    lat: latValue,\r\n    lng: lngValue\r\n   },\r\n  })\r\n };\r\n onMarkerDragEnd = ( event ) => {\r\n  console.log( 'event', event );\r\n  let newLat = event.latLng.lat(),\r\n   newLng = event.latLng.lng(),\r\n   addressArray = [];\r\nGeocode.fromLatLng( newLat , newLng ).then(\r\n   response => {\r\n    const completeAddress = response.results[0].formatted_address,\r\n     addressArray =  response.results[0].address_components,\r\n     street_number =this.getStreetNumber(addressArray),\r\n     street =this.getStreet(addressArray),\r\n     city = this.getCity( addressArray ),\r\n     postcode = this.getPostcode( addressArray ),\r\n     state = this.getState( addressArray ),\r\n     address = street_number +\" \"+street\r\nthis.props.markerInfo( {\r\n    completeAddress: ( completeAddress ) ? completeAddress : '',\r\n     address: ( address ) ? address : '',\r\n     postcode: ( postcode ) ? postcode : '',\r\n     city: ( city ) ? city : '',\r\n     state: ( state ) ? state : '',\r\n     markerPosition: {\r\n    lat: newLat,\r\n    lng: newLng\r\n   },\r\n     mapPosition: {\r\n    lat: newLat,\r\n    lng: newLng\r\n   },\r\n    } )\r\n   },\r\n   error => {\r\n    console.error(error);\r\n   }\r\n  );\r\n };\r\nrender(){\r\n    console.log(\"shop\",this.state,this.props)\r\nconst AsyncMap = withScriptjs(\r\n   withGoogleMap(\r\n    props => (\r\n     <GoogleMap google={this.props.google}\r\n      defaultZoom={this.props.zoom}\r\n      center={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\r\n     >\r\n      {/* For Auto complete Search Box */}\r\n\r\n{/*Marker*/}\r\n      <Marker \r\n      google={this.props.google}\r\n             draggable ={true}\r\n             onDragEnd = {this.onMarkerDragEnd}\r\n             position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\r\n      />\r\n      <Marker />\r\n       <Autocomplete\r\n       style={{\r\n        width: '100%',\r\n        height: '40px',\r\n        paddingLeft: '16px',\r\n        marginTop: '2px',\r\n        marginBottom: '100px'\r\n       }}\r\n       onPlaceSelected={ this.onPlaceSelected }\r\n       types={['(regions)']}\r\n      />\r\n</GoogleMap>\r\n)\r\n   )\r\n  );\r\nlet map;\r\n  if( this.props.center.lat !== undefined ) {\r\n   map = <div>\r\n     <AsyncMap\r\n      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI&libraries=places\"\r\n      loadingElement={\r\n       <div style={{ height: `100%` }} />\r\n      }\r\n      containerElement={\r\n       <div style={{ height: this.props.height }} />\r\n      }\r\n      mapElement={\r\n       <div style={{ height: `100%` }} />\r\n      }\r\n     />\r\n    </div>\r\n} else {\r\n   map = <div style={{height: this.props.height}} />\r\n  }\r\n  return( map )\r\n }\r\n}\r\nexport default Shop"]},"metadata":{},"sourceType":"module"}