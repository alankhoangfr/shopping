{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlankHoang\\\\Desktop\\\\freecodeacademy\\\\shoppingBasket\\\\client\\\\src\\\\components\\\\Compare\\\\SearchBoxCompare.js\";\nimport grocery_sampleJSON from \"../../Data/grocery_sampleJSON.json\";\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react';\nimport { getSuperMarkets } from \"../../actions/SuperMarketActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst initialState = {\n  isLoading: false,\n  results: [],\n  value: '',\n  emptySearchBox: false\n};\nvar source = grocery_sampleJSON;\nexport class SearchBoxCompare extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleResultSelect = (e, {\n      result\n    }) => {\n      this.setState({\n        value: result.title,\n        emptySearchBox: false\n      });\n      this.props.result(result);\n    };\n\n    this.sourceForList = arr => {\n      let arrays = [];\n      arr.map(shop => {\n        if (this.props.superMarket[shop.id].item !== undefined) {\n          const list_items = Object.keys(this.props.superMarket[shop.id].item);\n          arrays.push(list_items);\n        }\n      });\n      console.log(arrays);\n      var result = arrays.shift().reduce(function (res, v) {\n        if (res.indexOf(v) === -1 && arrays.every(function (a) {\n          return a.indexOf(v) !== -1;\n        })) res.push(v);\n        return res;\n      }, []);\n      result = grocery_sampleJSON.filter(item => item.item_id);\n      return result;\n    };\n\n    this.handleSearchChange = (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(initialState);\n        const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n\n        const isMatch = result => re.test(result.title);\n\n        this.setState({\n          isLoading: false,\n          results: _.filter(source, isMatch)\n        });\n      }, 300);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getSuperMarkets();\n  }\n\n  shouldComponentUpdate(nextState, nextProps) {\n    if (this.props.supermarket_selected !== nextProps.supermarket_selected) {\n      return true;\n    }\n\n    if (nextProps.emptySearchBox === true) {\n      console.log(\"clear search box\");\n      return true;\n    }\n\n    if (this.props.space !== nextProps.space) {\n      return true;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.supermarket_selected !== this.props.supermarket_selected) {\n      this.setState({\n        value: \"\"\n      });\n    }\n\n    if (this.props.emptySearchBox !== prevProps.emptySearchBox) {\n      console.log(\"clear search box\");\n      this.setState({\n        value: \"\",\n        emptySearchBox: false\n      });\n    }\n\n    if (prevProps.space !== this.props.space) {\n      source = this.sourceForList(this.props.space);\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          value = _this$state.value,\n          results = _this$state.results;\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Search, {\n      loading: isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      results: results,\n      value: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })));\n  }\n\n}\nSearchBoxCompare.propTypes = {\n  getSuperMarkets: PropTypes.func.isRequired,\n  superMarket: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  superMarket: state.superMarket\n});\n\nexport default connect(mapStateToProps, {\n  getSuperMarkets\n})(SearchBoxCompare);","map":{"version":3,"sources":["C:\\Users\\AlankHoang\\Desktop\\freecodeacademy\\shoppingBasket\\client\\src\\components\\Compare\\SearchBoxCompare.js"],"names":["grocery_sampleJSON","_","React","Component","Search","Grid","Header","Segment","getSuperMarkets","connect","PropTypes","initialState","isLoading","results","value","emptySearchBox","source","SearchBoxCompare","state","handleResultSelect","e","result","setState","title","props","sourceForList","arr","arrays","map","shop","superMarket","id","item","undefined","list_items","Object","keys","push","console","log","shift","reduce","res","v","indexOf","every","a","filter","item_id","handleSearchChange","setTimeout","length","re","RegExp","escapeRegExp","isMatch","test","componentDidMount","shouldComponentUpdate","nextState","nextProps","supermarket_selected","space","componentDidUpdate","prevProps","render","debounce","leading","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import grocery_sampleJSON from \"../../Data/grocery_sampleJSON.json\"\r\nimport _ from 'lodash'\r\nimport React, { Component } from 'react'\r\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react'\r\nimport {getSuperMarkets} from \"../../actions/SuperMarketActions\"\r\nimport {connect} from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\nconst initialState = { isLoading: false, results: [], value: '',emptySearchBox:false }\r\nvar source = grocery_sampleJSON\r\n\r\nexport  class SearchBoxCompare extends Component {\r\n  state = initialState\r\n     componentDidMount(){\r\n        this.props.getSuperMarkets()\r\n    }\r\n    shouldComponentUpdate(nextState,nextProps){\r\n         if(this.props.supermarket_selected!==nextProps.supermarket_selected\t){\r\n\t\t\treturn true\r\n\t\t}if(nextProps.emptySearchBox===true){\r\n\t\t\tconsole.log(\"clear search box\")\r\n\t\t\treturn true\r\n\t\t}if(this.props.space!==nextProps.space){\r\n            return true\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps){\r\n    \tif(prevProps.supermarket_selected!==this.props.supermarket_selected\t){\r\n    \t\tthis.setState({value:\"\"})\r\n    \t}if(this.props.emptySearchBox!==prevProps.emptySearchBox){\r\n    \t\tconsole.log(\"clear search box\")\r\n    \t\tthis.setState({\r\n    \t\t\tvalue:\"\",\r\n    \t\t\temptySearchBox:false})\r\n    \t}if(prevProps.space!==this.props.space){\r\n            source = this.sourceForList(this.props.space)\r\n        }\r\n    }\r\n  handleResultSelect = (e, { result }) => {\r\n  \tthis.setState({ value: result.title, emptySearchBox:false })\r\n  \tthis.props.result(result )\r\n  }\r\n sourceForList=(arr)=>{\r\n        let arrays=[]\r\n        arr.map((shop)=>{\r\n            if(this.props.superMarket[shop.id].item!==undefined){\r\n                const list_items = Object.keys(this.props.superMarket[shop.id].item)\r\n                arrays.push(list_items)\r\n            }\r\n        })\r\n        console.log(arrays)\r\n        var result = arrays.shift().reduce(function(res, v) {\r\n            if (res.indexOf(v) === -1 && arrays.every(function(a) {\r\n                return a.indexOf(v) !== -1;\r\n            })) res.push(v);\r\n        return res;\r\n        }, []);\r\n        result = grocery_sampleJSON.filter((item)=>item.item_id)\r\n        return result\r\n    }\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ isLoading: true, value })\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.setState(initialState)\r\n\r\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\r\n      const isMatch = result => re.test(result.title)\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        results: _.filter(source, isMatch),\r\n      })\r\n    }, 300)\r\n  }\r\n  render() {\r\n\r\n    const { isLoading, value, results } = this.state\r\n\r\n    return (\r\n      <Grid>\r\n        <Grid.Column width={6}>\r\n          <Search\r\n            loading={isLoading}\r\n            onResultSelect={this.handleResultSelect}\r\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n              leading: true,\r\n            })}\r\n            results={results}\r\n            value={value}\r\n\r\n          />\r\n        </Grid.Column>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nSearchBoxCompare.propTypes = {\r\n    getSuperMarkets:PropTypes.func.isRequired,\r\n    superMarket:PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = (state)=>({\r\n    superMarket:state.superMarket\r\n})\r\n\r\nexport default connect(mapStateToProps,{getSuperMarkets}) (SearchBoxCompare)\r\n"]},"metadata":{},"sourceType":"module"}