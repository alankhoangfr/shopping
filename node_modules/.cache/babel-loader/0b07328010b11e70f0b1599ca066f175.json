{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlankHoang\\\\Desktop\\\\freecodeacademy\\\\shoppingBasket\\\\client\\\\src\\\\components\\\\AddItem\\\\Modal.js\";\nimport React from 'react';\nimport { Alert } from 'reactstrap';\n\nconst Modal = props => {\n  console.log(this.props);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    color: \"success\",\n    isOpen: this.props.visible,\n    toggle: this.props.onDismiss,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"alert-heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Well done!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\")));\n};\n\nexport default Modal;","map":{"version":3,"sources":["C:\\Users\\AlankHoang\\Desktop\\freecodeacademy\\shoppingBasket\\client\\src\\components\\AddItem\\Modal.js"],"names":["React","Alert","Modal","props","console","log","visible","onDismiss"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,YAAtB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,SAAb;AAAuB,IAAA,MAAM,EAAE,KAAKA,KAAL,CAAWG,OAA1C;AAAmD,IAAA,MAAM,EAAE,KAAKH,KAAL,CAAWI,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qMAFF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2FARF,CADF,CADF;AAgBD,CAlBD;;AAoBA,eAAeL,KAAf","sourcesContent":["import React from 'react';\r\nimport { Alert } from 'reactstrap';\r\n\r\nconst Modal = (props) => {\r\n\tconsole.log(this.props)\r\n  return (\r\n    <div>\r\n      <Alert color=\"success\" isOpen={this.props.visible} toggle={this.props.onDismiss}>\r\n        <h4 className=\"alert-heading\">Well done!</h4>\r\n        <p>\r\n          Aww yeah, you successfully read this important alert message. This example text is going\r\n          to run a bit longer so that you can see how spacing within an alert works with this kind\r\n          of content.\r\n        </p>\r\n        <hr />\r\n        <p className=\"mb-0\">\r\n          Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\r\n        </p>\r\n      </Alert>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;"]},"metadata":{},"sourceType":"module"}