{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlankHoang\\\\Desktop\\\\freecodeacademy\\\\shoppingBasket\\\\client\\\\src\\\\components\\\\AddItem\\\\FormItem.js\";\nimport React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardLink, CardTitle, CardSubtitle, Form, FormGroup, Label, Input, Col, Button } from 'reactstrap';\nimport SearchBox from \"./SearchBox\";\nimport { addItemToShop, getSuperMarkets, putPrice } from \"../../actions/SuperMarketActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport Cleave from 'cleave.js/react';\nimport { Alert } from 'reactstrap';\nimport grocery_sampleJSON from \"../../Data/grocery_sampleJSON.json\";\nconst source = grocery_sampleJSON;\nexport class FormItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.visible = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onDismiss = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.result = result => {\n      this.setState({\n        result: result\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            result = _this$state.result,\n            price = _this$state.price;\n      const newItem = {\n        item_id: result.item_id,\n        brand_name: result.brand_name,\n        price: price,\n        timeStamp: moment().format(),\n        superMarket_id: this.props.supermarket_selected.id,\n        date: moment().format(\"ddd Do MMM YY\")\n      };\n      this.setState({\n        price: \"\",\n        visible: true\n      });\n      this.props.addItemToShop(newItem);\n    };\n\n    this.onChange = event => {\n      this.setState({\n        price: event.target.value\n      });\n    };\n\n    this.onClick = event => {\n      let shoppingItems = {};\n      source.forEach(item => {\n        console.log(item);\n        let eachItem = {\n          item_id: item.item_id,\n          brand_name: item.brand_name,\n          price: (Math.random() * 20 + 0.5).toFixed(2),\n          timeStamp: moment().format(),\n          superMarket_id: this.props.supermarket_selected.id,\n          date: moment().format(\"ddd Do MMM YY\")\n        };\n        shoppingItems[item.item_id] = eachItem;\n        this.props.addItemToShop(eachItem);\n      });\n      console.log(shoppingItems);\n    };\n\n    this.onStartDrag = (resultInfo, event) => {\n      console.log(\"drag START\", resultInfo);\n      this.props.itemOnDrag(resultInfo);\n    };\n\n    this.state = {\n      result: \"\",\n      price: \"\",\n      visible: false\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    this.props.getSuperMarkets();\n  }\n\n  shouldComponentUpdate(nextState, nextProps) {\n    if (this.state.result !== nextState.result) {\n      return true;\n    }\n\n    if (this.props.supermarket_selected !== nextProps.supermarket_selected) {\n      return true;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.supermarket_selected !== this.props.supermarket_selected) {\n      this.setState({\n        result: \"\"\n      });\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          result = _this$state2.result,\n          price = _this$state2.price;\n    var oldPrice = \"Be the first to register a price!\";\n    console.log(this.state);\n\n    if (this.props.superMarket[this.props.supermarket_selected.id].item !== undefined) {\n      if (this.props.superMarket[this.props.supermarket_selected.id].item[result.item_id]) {\n        const prevPrice = this.props.superMarket[this.props.supermarket_selected.id].item[result.item_id].price;\n        const prevDate = this.props.superMarket[this.props.supermarket_selected.id].item[result.item_id].date;\n        oldPrice = \"This was last registered at $\".concat(prevPrice, \" on \").concat(prevDate);\n      }\n    }\n\n    let cardImage = React.createElement(CardImg, {\n      top: true,\n      width: \"100%\",\n      src: this.state.result.image,\n      alt: \"Card image cap\",\n      style: {\n        maxWidth: \"150px\",\n        maxHeight: \"150px\",\n        margin: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    });\n\n    if (this.state.result.image === null) {\n      cardImage = React.createElement(CardBody, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Be the first to upload a photo\"), React.createElement(Input, {\n        type: \"file\",\n        name: \"file\",\n        id: \"exampleFile\",\n        style: {\n          width: \"60%\",\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n    }\n\n    let card = React.createElement(Card, {\n      style: {\n        marginTop: \"20px\"\n      },\n      draggable: true,\n      onDragStart: this.onStartDrag.bind(this, {\n        result: this.state.result,\n        price: price\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.state.result.brand_name), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.state.result.description)), cardImage, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, oldPrice), React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"$\", React.createElement(Cleave, {\n      placeholder: \"Enter the Price\",\n      options: {\n        numeral: true\n      },\n      numeralThousandsGroupStyle: \"thousand\",\n      onChange: this.onChange,\n      value: price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      check: true,\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        size: 10,\n        offset: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Submit\"))))));\n\n    if (this.state.result === \"\") {\n      console.log(\"new item\");\n      card = null;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Search an item\"), React.createElement(SearchBox, {\n      result: this.result,\n      supermarket_selected: this.props.supermarket_selected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(Alert, {\n      color: \"success\",\n      isOpen: this.state.visible,\n      toggle: this.onDismiss,\n      style: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"The price has been registered\"), card, this.props.superMarket[this.props.supermarket_selected.id].item === undefined ? React.createElement(Button, {\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Generate Item Data for shop\") : null);\n  }\n\n}\nFormItem.propTypes = {\n  addItemToShop: PropTypes.func.isRequired,\n  getSuperMarkets: PropTypes.func.isRequired,\n  superMarket: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  superMarket: state.superMarket\n});\n\nexport default connect(mapStateToProps, {\n  getSuperMarkets,\n  addItemToShop\n})(FormItem);","map":{"version":3,"sources":["C:\\Users\\AlankHoang\\Desktop\\freecodeacademy\\shoppingBasket\\client\\src\\components\\AddItem\\FormItem.js"],"names":["React","Card","CardImg","CardText","CardBody","CardLink","CardTitle","CardSubtitle","Form","FormGroup","Label","Input","Col","Button","SearchBox","addItemToShop","getSuperMarkets","putPrice","connect","PropTypes","moment","Cleave","Alert","grocery_sampleJSON","source","FormItem","Component","constructor","props","visible","setState","onDismiss","result","onSubmit","event","preventDefault","state","price","newItem","item_id","brand_name","timeStamp","format","superMarket_id","supermarket_selected","id","date","onChange","target","value","onClick","shoppingItems","forEach","item","console","log","eachItem","Math","random","toFixed","onStartDrag","resultInfo","itemOnDrag","componentDidMount","shouldComponentUpdate","nextState","nextProps","componentDidUpdate","prevProps","render","oldPrice","superMarket","undefined","prevPrice","prevDate","cardImage","image","maxWidth","maxHeight","margin","width","card","marginTop","bind","description","numeral","size","offset","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardLink,\r\n  CardTitle, CardSubtitle,Form, FormGroup, Label, Input,Col,Button } from 'reactstrap';\r\nimport SearchBox from \"./SearchBox\"\r\nimport {addItemToShop,getSuperMarkets,putPrice} from \"../../actions/SuperMarketActions\"\r\nimport {connect} from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\nimport moment from \"moment\"\r\nimport Cleave from 'cleave.js/react';\t\r\nimport { Alert } from 'reactstrap';\r\nimport grocery_sampleJSON from \"../../Data/grocery_sampleJSON.json\"\r\n\r\nconst source = grocery_sampleJSON\r\n\r\nexport class FormItem extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n             result:\"\",\r\n             price:\"\",\r\n             visible:false,\r\n         }\r\n     }\r\n\r\n     componentDidMount(){\r\n\t\tconsole.log(\"componentDidMount\")\r\n\t\tthis.props.getSuperMarkets()\r\n\t}\r\n    shouldComponentUpdate(nextState,nextProps){\r\n         if(this.state.result!==nextState.result){\r\n             return true\r\n         }\r\n         if(this.props.supermarket_selected!==nextProps.supermarket_selected\t){\r\n\t\t\treturn true\r\n\t\t}\r\n    }\r\n    componentDidUpdate(prevProps){\r\n    \tif(prevProps.supermarket_selected!==this.props.supermarket_selected\t){\r\n    \t\tthis.setState({result:\"\"})\r\n    \t}\r\n    }\r\n    visible=()=>{\r\n\t\tthis.setState({visible:true})\r\n\t}\r\n\tonDismiss=()=> {\r\n    \tthis.setState({ visible: false });\r\n    }\r\n\tresult = (result)=>{\r\n    \tthis.setState({result:result})\r\n\t}\r\n\tonSubmit=(event)=>{\r\n\t\tevent.preventDefault()\r\n\t\tconst {result,price}=this.state\r\n\t\tconst newItem = {\r\n\t\t\titem_id:result.item_id,\r\n\t\t\tbrand_name:result.brand_name,\t\r\n\t\t\tprice:price,\r\n\t\t\ttimeStamp:moment().format(),\r\n\t\t\tsuperMarket_id:this.props.supermarket_selected.id,\r\n\t\t\tdate:moment().format(\"ddd Do MMM YY\")\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tprice:\"\",\r\n\t\t\tvisible:true})\r\n\t\tthis.props.addItemToShop(newItem)\t\t\r\n\t}\r\n\tonChange=(event)=>{\r\n\t\tthis.setState({\r\n\t\t\tprice:event.target.value\r\n\t\t})\r\n\t}\r\n\tonClick=(event)=>{\r\n\t\tlet shoppingItems = {}\r\n\t\tsource.forEach((item)=>{\r\n\t\t\tconsole.log(item)\r\n\t\t\tlet eachItem = {\r\n\t\t\t\titem_id:item.item_id,\r\n\t\t\t\tbrand_name:item.brand_name,\t\r\n\t\t\t\tprice:(Math.random()*(20)+0.5).toFixed(2),\r\n\t\t\t\ttimeStamp:moment().format(),\r\n\t\t\t\tsuperMarket_id:this.props.supermarket_selected.id,\r\n\t\t\t\tdate:moment().format(\"ddd Do MMM YY\")\r\n\t\t\t}\r\n\t\t\tshoppingItems[item.item_id]=eachItem\r\n\t\t\tthis.props.addItemToShop(eachItem)\t\r\n\t\t})\r\n\t\tconsole.log(shoppingItems)\r\n\r\n\t}\r\n\tonStartDrag=(resultInfo,event)=>{\r\n\t\tconsole.log(\"drag START\",resultInfo)\r\n\t\tthis.props.itemOnDrag(resultInfo)\r\n\t}\r\n    render() {\r\n    \tconst {result,price}=this.state\r\n    \tvar oldPrice = \"Be the first to register a price!\"\r\n    \tconsole.log(this.state)\r\n\t\tif(this.props.superMarket[this.props.supermarket_selected.id].item!==undefined\t){\r\n\t\t\tif(this.props.superMarket[this.props.supermarket_selected.id].item[result.item_id]){\r\n\t\t\t\tconst prevPrice = this.props.superMarket[this.props.supermarket_selected.id].item[result.item_id].price\r\n\t\t\t\tconst prevDate = this.props.superMarket[this.props.supermarket_selected.id].item[result.item_id].date\r\n\t\t\t\toldPrice = `This was last registered at $${prevPrice} on ${prevDate}`\r\n    \t\t}\r\n\t\t}\r\n    \tlet cardImage = <CardImg top width=\"100%\" src={this.state.result.image} alt=\"Card image cap\"\r\n             \t\tstyle={{maxWidth:\"150px\",maxHeight:\"150px\",margin:\"auto\"}}/>\r\n        if(this.state.result.image===null){\r\n        \tcardImage=\r\n        \t    <CardBody className=\"text-center\"> \r\n        \t    \t<CardText>Be the first to upload a photo</CardText>\r\n        \t\t\t<Input type=\"file\" name=\"file\" id=\"exampleFile\"  style={{width:\"60%\",margin:\"auto\"}}/>\r\n        \t\t</CardBody>\r\n        }\t\t\r\n        let card =\r\n            <Card style={{marginTop:\"20px\"}} draggable={true} onDragStart={this.onStartDrag.bind(this,{result:this.state.result,price:price})}>\r\n            <CardBody className=\"text-center\">\r\n                <CardTitle>{this.state.result.brand_name}</CardTitle>\r\n                <CardSubtitle>{this.state.result.description}</CardSubtitle>\r\n                \r\n            </CardBody>\r\n           \t{cardImage}\r\n            <CardBody>\r\n                <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n                 <CardText>{oldPrice}</CardText>\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <FormGroup row className=\"text-center\">\r\n                        <Col sm={10}>\r\n                       \t\t$<Cleave placeholder=\"Enter the Price\"\r\n                       \t\t\toptions={{numeral: true}}\r\n                \t\t\t\tnumeralThousandsGroupStyle = 'thousand'\r\n                \t\t\t\tonChange={this.onChange}\r\n                \t\t\t\tvalue={price} />\r\n                        </Col>\r\n                    </FormGroup>\r\n    \t\t\t\t<FormGroup check row>\r\n    \t\t\t\t\t<Col sm={{ size: 10, offset: 2 }}>\r\n    \t\t\t\t\t\t<Button>Submit</Button>\r\n     \t\t\t\t\t</Col>\r\n    \t\t\t\t</FormGroup>\r\n    \t\t\t</Form>\r\n    \t\t</CardBody>\r\n    \t\t</Card>\r\n    \t\t\tif (this.state.result===\"\"){\r\n       \t\t\t\tconsole.log(\"new item\")\r\n       \t\t\t\tcard=null\r\n    \t\t\t}\r\n\treturn (\r\n    \t<div>\r\n    \t\t<h1 style={{marginTop:\"20px\"}}>Search an item</h1>\r\n        \t<SearchBox\r\n            \tresult = {this.result}\r\n            \tsupermarket_selected={this.props.supermarket_selected}/>\r\n              <Alert color=\"success\" isOpen={this.state.visible} toggle={this.onDismiss} style={{}}>\r\n        \t\tThe price has been registered\r\n      \t\t</Alert>\r\n        \t{card}\r\n        \t{this.props.superMarket[this.props.supermarket_selected.id].item===undefined?\r\n        \t\t<Button onClick = {this.onClick} >Generate Item Data for shop</Button>:null}\r\n    \t</div>\r\n   \r\n\t\t);\r\n\t}\r\n}\r\n\r\nFormItem.propTypes = {\r\n\taddItemToShop:PropTypes.func.isRequired,\r\n\tgetSuperMarkets:PropTypes.func.isRequired,\r\n\tsuperMarket:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n\tsuperMarket:state.superMarket\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,{getSuperMarkets,addItemToShop})(FormItem)"]},"metadata":{},"sourceType":"module"}