{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlankHoang\\\\Desktop\\\\freecodeacademy\\\\shoppingBasket\\\\client\\\\src\\\\components\\\\Map.js\";\nimport React, { Component } from 'react';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport basket from \"../image/basket.png\";\nGeocode.setApiKey('AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI');\nGeocode.enableDebug();\nexport class Map extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mapPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      },\n      markerPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      },\n      map: null,\n      markers: [{\n        photo_id: 0,\n        lat: -33.78,\n        lng: 151.2,\n        name: \"add1\"\n      }, {\n        photo_id: 10,\n        lat: -33.79,\n        lng: 151.1,\n        name: \"add22\"\n      }, {\n        photo_id: 2,\n        lat: -33.785,\n        lng: 151.23,\n        name: \"add3\"\n      }],\n      bound: null,\n      markers1: []\n    };\n\n    this.onPlaceSelected = (place, event) => {\n      console.log(place);\n\n      if (place.name !== undefined) {\n        Geocode.fromAddress(place.name).then(response => {\n          const _response$results$0$g = response.results[0].geometry.location,\n                lat = _response$results$0$g.lat,\n                lng = _response$results$0$g.lng;\n          console.log(lat, lng);\n\n          if (lat === undefined) {\n            return null;\n          }\n\n          this.setState({\n            mapPosition: {\n              lat: lat,\n              lng: lng\n            },\n            markerPosition: {\n              lat: lat,\n              lng: lng\n            }\n          });\n        });\n        return;\n      } else {\n        const name = place.formatted_name,\n              latValue = place.geometry.location.lat(),\n              lngValue = place.geometry.location.lng(); // Set these values in the state.\n\n        this.setState({\n          mapPosition: {\n            lat: latValue,\n            lng: lngValue\n          },\n          markerPosition: {\n            lat: latValue,\n            lng: lngValue\n          }\n        });\n      }\n    };\n\n    this.mapmoved = () => {\n      console.log(\"drag:\" + JSON.stringify(this.state.map.getCenter()));\n      console.log(\"bound:\" + JSON.stringify(this.state.map.getBounds()));\n    };\n\n    this.maploaded = map => {\n      if (this.state.map != null) {\n        return;\n      }\n\n      this.setState({\n        map: map,\n        bound: JSON.stringify(map.getBounds())\n      });\n    };\n\n    this.onZoom = () => {\n      console.log(\"zoom:\" + JSON.stringify(this.state.map.getCenter()));\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState.mapPosition.lat !== this.state.mapPosition.lat) {\n      return true;\n    } else if (this.state.mapPosition.lat === nextState.mapPosition.lat) {\n      return false;\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    const AsyncMap = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n      google: this.props.google,\n      ref: this.maploaded,\n      defaultZoom: 10,\n      defaultCenter: {\n        lat: this.state.mapPosition.lat,\n        lng: this.state.mapPosition.lng\n      },\n      onDragEnd: this.mapmoved,\n      onZoomChanged: this.onZoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      name: 'Dolores park',\n      draggable: true,\n      position: {\n        lat: this.state.markerPosition.lat,\n        lng: this.state.markerPosition.lng\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), this.state.markers.map(marker => {\n      console.log(marker);\n      return React.createElement(Marker, {\n        key: marker.photo_id,\n        position: {\n          lat: marker.lat,\n          lng: marker.lng\n        },\n        icon: basket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      });\n    }), this.state.markers.map(marker => React.createElement(InfoWindow, {\n      key: marker.photo_id,\n      onClose: this.onInfoWindowClose,\n      position: {\n        lat: marker.lat + 0.02,\n        lng: marker.lng\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        padding: 0,\n        margin: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, marker.name)))), React.createElement(Autocomplete, {\n      style: {\n        width: '200%',\n        height: '40px',\n        paddingLeft: '16px',\n        marginTop: '2px',\n        marginBottom: '100px'\n      },\n      onPlaceSelected: this.onPlaceSelected,\n      types: ['(regions)'],\n      placeholder: \"Enter and select location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }))));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Search for the Supermarkets near you\")), React.createElement(\"div\", {\n      style: {\n        width: \"500px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(AsyncMap, {\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI&libraries=places\",\n      loadingElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }),\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: this.props.height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default Map;","map":{"version":3,"sources":["C:\\Users\\AlankHoang\\Desktop\\freecodeacademy\\shoppingBasket\\client\\src\\components\\Map.js"],"names":["React","Component","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Geocode","Autocomplete","basket","setApiKey","enableDebug","Map","state","mapPosition","lat","props","center","lng","markerPosition","map","markers","photo_id","name","bound","markers1","onPlaceSelected","place","event","console","log","undefined","fromAddress","then","response","results","geometry","location","setState","formatted_name","latValue","lngValue","mapmoved","JSON","stringify","getCenter","getBounds","maploaded","onZoom","shouldComponentUpdate","nextProps","nextState","render","AsyncMap","google","marker","onInfoWindowClose","padding","margin","width","height","paddingLeft","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker  } from \"react-google-maps\";\r\nimport Geocode from \"react-geocode\"\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport basket from \"../image/basket.png\"\r\n\r\nGeocode.setApiKey('AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI');\r\nGeocode.enableDebug();\r\n\r\n\r\nexport class Map extends Component {\r\n\tstate = {\r\n\t\tmapPosition:{\r\n\t\t\tlat: this.props.center.lat,\r\n\t\t\tlng: this.props.center.lng\r\n\t\t},\r\n\t\tmarkerPosition:{\r\n\t\t\tlat:this.props.center.lat,\r\n\t\t\tlng:this.props.center.lng\r\n\t\t},\r\n\t\tmap:null,\r\n\t\tmarkers:[{photo_id:0,lat: -33.78, lng: 151.2,name:\"add1\"},{photo_id:10,lat: -33.79, lng: 151.1,name:\"add22\"},{photo_id:2,lat: -33.785, lng: 151.23,name:\"add3\"}],\r\n\t\tbound:null,\r\n\t\tmarkers1:[],\r\n\t}\r\n\r\n\tshouldComponentUpdate( nextProps, nextState ){\r\n\t\tif (\r\n\t\tnextState.mapPosition.lat !== this.state.mapPosition.lat \r\n\t\t) {\r\n\t\treturn true\r\n\t\t} else if ( this.state.mapPosition.lat  === nextState.mapPosition.lat ){\r\n\t\treturn false\r\n\t\t}\r\n\t }\r\n\r\n\tonPlaceSelected = ( place,event ) => {\r\n\t\tconsole.log(place)\r\n\t\tif (place.name!==undefined){\r\n\t\t\tGeocode.fromAddress(place.name).then(\r\n\t\t\t\tresponse => {\r\n    \t\t\tconst { lat, lng } = response.results[0].geometry.location\r\n    \t\t\tconsole.log(lat, lng)\r\n    \t\t\tif (lat ===undefined){\r\n    \t\t\t\treturn null\r\n    \t\t\t}\r\n    \t\t\tthis.setState({\r\n\t\t\t\t\tmapPosition: {\r\n\t\t\t\t\t\tlat: lat,\r\n\t\t\t\t\t\tlng: lng\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmarkerPosition: {\r\n\t\t\t\t\t\tlat: lat,\r\n\t\t\t\t\t\tlng: lng\r\n\t\t\t\t},\r\n\t\t\t})\r\n    \t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconst name = place.formatted_name,\r\n\t\t\tlatValue = place.geometry.location.lat(),\r\n\t\t\tlngValue = place.geometry.location.lng();\r\n\t\t\t// Set these values in the state.\r\n\t\t\tthis.setState({\r\n\r\n\t\t\t\tmapPosition: {\r\n\t\t\t\t\tlat: latValue,\r\n\t\t\t\t\tlng: lngValue\r\n\t\t\t\t},\r\n\t\t\t\tmarkerPosition: {\r\n\t\t\t\t\tlat: latValue,\r\n\t\t\t\t\tlng: lngValue\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t}\r\n\r\n\t};\r\n\tmapmoved=()=>{\r\n\t\tconsole.log(\"drag:\"+JSON.stringify(this.state.map.getCenter()))\r\n\t\tconsole.log(\"bound:\"+JSON.stringify(this.state.map.getBounds()))\r\n\t}\r\n\tmaploaded=(map)=>{\r\n\t\tif (this.state.map !=null){\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tmap:map,\r\n\t\t\tbound:JSON.stringify(map.getBounds())\r\n\t\t})\r\n\t\t\r\n\t}\r\n\tonZoom = ()=>{\r\n\t\tconsole.log(\"zoom:\"+JSON.stringify(this.state.map.getCenter()))\r\n\t}\r\n\r\n\trender() {\r\n\t\tconsole.log(this.state)\r\n\tconst AsyncMap = withScriptjs(\r\n\t\twithGoogleMap(\r\n\t\t\tprops => (\r\n\t\t\t\t<GoogleMap \r\n\t\t\t\tgoogle={this.props.google}\r\n\t\t\t\tref = {this.maploaded}\r\n\t\t\t\tdefaultZoom={10}\r\n\t\t\t\tdefaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\r\n\t\t\t\tonDragEnd={this.mapmoved}\r\n\t\t\t\tonZoomChanged = {this.onZoom}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Marker \r\n\t\t\t\t\t\tname={'Dolores park'}\r\n\t\t\t\t\t\tdraggable={true}\r\n\t\t\t\t\t\tposition={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\r\n\t\t\t\t\t/>\r\n  \t\t\t\t\t{this.state.markers.map((marker) => {\r\n  \t\t\t\t\t\tconsole.log(marker)\r\n  \t\t\t\t\t\treturn( \r\n    \t\t\t\t\t<Marker\r\n      \t\t\t\t\t\tkey={marker.photo_id}\r\n      \t\t\t\t\t\tposition={{ lat: marker.lat, lng: marker.lng }}\r\n      \t\t\t\t\t\ticon ={basket}\r\n    \t\t\t\t\t/>)\r\n    \t\t\t\t})}\r\n    \t\t\t\t{this.state.markers.map((marker) => \r\n    \t\t\t\t\t<InfoWindow\r\n    \t\t\t\t\t\tkey={marker.photo_id}\r\n   \t\t\t\t\t\t\tonClose={this.onInfoWindowClose}\r\n   \t\t\t\t\t\t\tposition={{ lat: ( marker.lat + 0.02 ), lng: marker.lng }}\r\n  \t\t\t\t\t\t>\r\n   \t\t\t\t\t\t\t<div>\r\n    \t\t\t\t\t\t\t<span style={{ padding: 0, margin: 0 }}>{ marker.name }</span>\r\n   \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t</InfoWindow>\r\n \t\t\t\t\t )}\r\n\r\n\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: '200%',\r\n\t\t\t\t\t\theight: '40px',\r\n\t\t\t\t\t\tpaddingLeft: '16px',\r\n\t\t\t\t\t\tmarginTop: '2px',\r\n\t\t\t\t\t\tmarginBottom: '100px'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonPlaceSelected={ this.onPlaceSelected }\r\n\t\t\t\t\t\ttypes={['(regions)']}\r\n\t\t\t\t\t\tplaceholder={\"Enter and select location\"}\r\n\r\n\t\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t</GoogleMap>\r\n\t\t\t)\r\n\t\t)\r\n\t)\r\n\r\n\t\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t <div>\r\n\t\t\t\t<h1>\r\n\t\t\t\t\tSearch for the Supermarkets near you\r\n\t\t\t\t</h1>\r\n\t\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t <div style={{width:\"500px\"}}>\r\n\r\n\t\t\t\t<AsyncMap\r\n\t\t\t\t\tgoogleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI&libraries=places\"\r\n\t\t\t\t\tloadingElement={\r\n\t\t\t\t\t <div style={{ height: `100%` }} />\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontainerElement={\r\n\t\t\t\t\t <div style={{ height: this.props.height }} />\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmapElement={\r\n\t\t\t\t\t <div style={{ height: `100%` }} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t \r\n\t)\r\n  }\r\n}\r\n\r\nexport default Map"]},"metadata":{},"sourceType":"module"}