{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlankHoang\\\\Desktop\\\\freecodeacademy\\\\shoppingbasket\\\\client\\\\src\\\\components\\\\InfoArea.js\";\nimport React, { Component } from \"react\";\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport Geocode from \"react-geocode\";\nexport class InfoArea extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onclickMarker = (marker, event) => {\n      console.log(marker);\n      this.setState({\n        markerHighlighted: marker.photo_id,\n        active: \"success\"\n      });\n    };\n\n    this.markersInBound = markers => {\n      return markers.map(marker => {\n        return React.createElement(ListGroupItem, {\n          onClick: this.onclickMarker.bind(this, marker),\n          key: marker.photo_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(ListGroupItemHeading, {\n          color: this.state.active,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, marker.name), React.createElement(ListGroupItemText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, marker.address), React.createElement(ListGroupItemText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, marker.score));\n      });\n    };\n\n    this.focusOnMarker = marker => {\n      return React.createElement(ListGroupItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(ListGroupItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, marker.name), React.createElement(ListGroupItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, marker.address), React.createElement(ListGroupItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, marker.score), React.createElement(ListGroupItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, marker.details));\n    };\n\n    this.state = {\n      markerHighlighted: \"\",\n      active: \"\"\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    let info;\n\n    if (this.props.markerSelected === \"\") {\n      console.log(this.props.markerSelected);\n      info = React.createElement(\"div\", {\n        style: {\n          border: \"1px solid black\",\n          height: \"438px\",\n          overflowY: \"scroll\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \" Stores in the area \")), React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.markersInBound(this.props.markersInBound)));\n    } else {\n      info = React.createElement(\"div\", {\n        style: {\n          border: \"1px solid black\",\n          height: \"438px\",\n          overflowY: \"scroll\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.focusOnMarker(this.props.markerSelected));\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        height: '62px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), info);\n  }\n\n}\nexport default InfoArea;","map":{"version":3,"sources":["C:\\Users\\AlankHoang\\Desktop\\freecodeacademy\\shoppingbasket\\client\\src\\components\\InfoArea.js"],"names":["React","Component","ListGroup","ListGroupItem","Geocode","InfoArea","constructor","props","onclickMarker","marker","event","console","log","setState","markerHighlighted","photo_id","active","markersInBound","markers","map","bind","state","name","address","score","focusOnMarker","details","render","info","markerSelected","border","height","overflowY"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\nimport Geocode from \"react-geocode\";\r\n\r\nexport class InfoArea extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state={\r\n\t\t\tmarkerHighlighted:\"\",\r\n\t\t\tactive:\"\"\r\n\t\t}\r\n\t}\r\n\tonclickMarker = (marker,event) =>{\r\n\t\tconsole.log(marker)\r\n\t\tthis.setState({markerHighlighted:marker.photo_id,\r\n\t\t\t\t\t\tactive:\"success\"})\r\n\t}\r\n\r\n\tmarkersInBound = (markers)=>{\r\n\t\treturn markers.map((marker)=>{\r\n\r\n\t\t\treturn(\r\n\t\t\t\t<ListGroupItem onClick={this.onclickMarker.bind(this,marker)}  key={marker.photo_id}>\r\n\t\t\t\t\t<ListGroupItemHeading color={this.state.active}>\r\n\t\t\t\t\t\t{marker.name}\r\n\t\t\t\t\t</ListGroupItemHeading>\r\n\t\t\t\t\t<ListGroupItemText>\r\n\t\t\t\t\t\t{marker.address}\r\n\t\t\t\t\t</ListGroupItemText>\r\n\t\t\t\t\t<ListGroupItemText>\r\n\t\t\t\t\t\t{marker.score}\r\n\t\t\t\t\t</ListGroupItemText>\r\n\t\t\t\t</ListGroupItem>\r\n\t\t\t\t)\r\n\t\t})\r\n\t}\r\n\tfocusOnMarker = (marker)=>{\r\n\t\treturn(\r\n\t\t\t<ListGroupItem >\r\n\t\t\t\t<ListGroupItem>\r\n\t\t\t\t\t{marker.name}\r\n\t\t\t\t</ListGroupItem>\r\n\t\t\t\t<ListGroupItem>\r\n\t\t\t\t\t{marker.address}\r\n\t\t\t\t</ListGroupItem>\r\n\t\t\t\t<ListGroupItem>\r\n\t\t\t\t\t{marker.score}\r\n\t\t\t\t</ListGroupItem>\r\n\t\t\t\t<ListGroupItem>\r\n\t\t\t\t\t{marker.details}\r\n\t\t\t\t</ListGroupItem>\r\n\t\t\t</ListGroupItem>\r\n\r\n\t\t\t)\r\n\t}\r\n\trender() {\r\n\tconsole.log(this.props)\r\n\tlet info \r\n\tif (this.props.markerSelected===\"\"){\r\n\t\tconsole.log(this.props.markerSelected)\r\n\t\tinfo = \r\n\t\t\t\t<div style={{border:\"1px solid black\", height:\"438px\", overflowY: \"scroll\"}}>\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<h2> Stores in the area </h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ListGroup>\r\n\t\t\t\t\t\t{this.markersInBound(this.props.markersInBound)}\r\n\t\t\t\t\t</ListGroup>\r\n\t\t\t\t</div>\r\n\r\n\t}else{\r\n\t\tinfo = \t\r\n\t\t\t\t<div style={{border:\"1px solid black\", height:\"438px\", overflowY: \"scroll\"}}>\r\n\t\t\t\t\t{this.focusOnMarker(this.props.markerSelected)}\r\n\t\t\t\t</div>\r\n\t\r\n\r\n\t\t}\r\n\t\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t<div style={{height: '62px'}}>\r\n\t\t</div>\r\n\t\t\t{info}\r\n\t\t</React.Fragment>\t\r\n)\r\n  }\r\n}\r\n\r\nexport default InfoArea\r\n\r\n"]},"metadata":{},"sourceType":"module"}