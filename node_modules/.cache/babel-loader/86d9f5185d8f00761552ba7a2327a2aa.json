{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlankHoang\\\\Desktop\\\\freecodeacademy\\\\shoppingBasket\\\\client\\\\src\\\\components\\\\AddShop\\\\InfoAreaAddShop.js\";\nimport React, { Component } from \"react\";\nimport { ListGroup, ListGroupItem, ListGroupItemText, ListGroupItemHeading } from 'reactstrap';\nexport class InfoAreaAddShop extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onclickMarker = (marker, event) => {\n      console.log(marker);\n      this.setState({\n        markerHighlighted: marker.id\n      });\n    };\n\n    this.onDoubleClick = markerObject => {\n      this.setState({\n        markerSelected: markerObject\n      });\n      this.props.shopSelected(markerObject);\n    };\n\n    this.markersInBound = markers => {\n      return markers.map(marker => {\n        console.log(marker.id, this.state.markerHighlighted.id);\n        let active = \"\";\n\n        if (marker.id === this.state.markerHighlighted.id) {\n          active = \"success\";\n        }\n\n        return React.createElement(ListGroupItem, {\n          onClick: this.onclickMarker.bind(this, marker),\n          key: marker.id,\n          color: active,\n          onDoubleClick: this.onDoubleClick.bind(this, marker),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(ListGroupItemHeading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, marker.name), React.createElement(ListGroupItemText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, marker.address), React.createElement(ListGroupItemText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, marker.score));\n      });\n    };\n\n    this.focusOnMarker = marker => {\n      return React.createElement(ListGroupItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(ListGroupItemHeading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, marker.name), React.createElement(ListGroupItemText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, marker.address), React.createElement(ListGroupItemText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, marker.score), React.createElement(ListGroupItemText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, marker.details));\n    };\n\n    this.state = {\n      markerHighlighted: \"\",\n      markerSelected: this.props.markerSelected\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props !== nextProps) {\n      return true;\n    } else if (this.state !== nextState) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.markerSelected !== prevProps.markerSelected) {\n      this.setState({\n        markerSelected: this.props.markerSelected,\n        markerHighlighted: \"\"\n      });\n    }\n\n    if (this.props.markers !== prevProps.markers) {\n      this.setState({\n        markerSelected: \"\",\n        markerHighlighted: this.props.markerSelected.id\n      });\n    }\n\n    if (this.props.markerHighlighted !== prevProps.markerHighlighted) {\n      this.setState({\n        markerSelected: \"\",\n        markerHighlighted: this.props.markerHighlighted.id\n      });\n    }\n  }\n\n  render() {\n    console.log(this.props, this.state);\n    let info;\n    let infoall = React.createElement(\"div\", {\n      style: {\n        border: \"1px solid black\",\n        height: \"438px\",\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \" Stores in the area \")), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.markersInBound(this.props.markersInBound)));\n    let infoFocus = React.createElement(\"div\", {\n      style: {\n        border: \"1px solid black\",\n        height: \"438px\",\n        overflowY: \"scroll\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.focusOnMarker(this.state.markerSelected));\n\n    if (this.state.markerSelected === \"\") {\n      info = infoall;\n    } else if (this.state.markerSelected !== \"\") {\n      info = infoFocus;\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        height: '62px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), info);\n  }\n\n}\nexport default InfoAreaAddShop;","map":{"version":3,"sources":["C:\\Users\\AlankHoang\\Desktop\\freecodeacademy\\shoppingBasket\\client\\src\\components\\AddShop\\InfoAreaAddShop.js"],"names":["React","Component","ListGroup","ListGroupItem","ListGroupItemText","ListGroupItemHeading","InfoAreaAddShop","constructor","props","onclickMarker","marker","event","console","log","setState","markerHighlighted","id","onDoubleClick","markerObject","markerSelected","shopSelected","markersInBound","markers","map","state","active","bind","name","address","score","focusOnMarker","details","shouldComponentUpdate","nextProps","nextState","componentDidUpdate","prevProps","prevState","render","info","infoall","border","height","overflowY","infoFocus"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAkCC,iBAAlC,EAAoDC,oBAApD,QAA+E,YAA/E;AAGA,OAAO,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAC9CM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;;AADiB,SAgClBC,aAhCkB,GAgCF,CAACC,MAAD,EAAQC,KAAR,KAAiB;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,WAAKI,QAAL,CAAc;AAACC,QAAAA,iBAAiB,EAACL,MAAM,CAACM;AAA1B,OAAd;AACA,KAnCiB;;AAAA,SAoClBC,aApCkB,GAoCDC,YAAD,IAAgB;AAC/B,WAAKJ,QAAL,CAAc;AAACK,QAAAA,cAAc,EAACD;AAAhB,OAAd;AACA,WAAKV,KAAL,CAAWY,YAAX,CAAwBF,YAAxB;AAEA,KAxCiB;;AAAA,SAyClBG,cAzCkB,GAyCAC,OAAD,IAAW;AAC3B,aAAOA,OAAO,CAACC,GAAR,CAAab,MAAD,IAAU;AAC5BE,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACM,EAAnB,EAAsB,KAAKQ,KAAL,CAAWT,iBAAX,CAA6BC,EAAnD;AACA,YAAIS,MAAM,GAAG,EAAb;;AACA,YAAIf,MAAM,CAACM,EAAP,KAAY,KAAKQ,KAAL,CAAWT,iBAAX,CAA6BC,EAA7C,EAAgD;AAC/CS,UAAAA,MAAM,GAAG,SAAT;AACA;;AACD,eACC,oBAAC,aAAD;AACA,UAAA,OAAO,EAAE,KAAKhB,aAAL,CAAmBiB,IAAnB,CAAwB,IAAxB,EAA6BhB,MAA7B,CADT;AAEA,UAAA,GAAG,EAAEA,MAAM,CAACM,EAFZ;AAGA,UAAA,KAAK,EAAES,MAHP;AAIA,UAAA,aAAa,EAAI,KAAKR,aAAL,CAAmBS,IAAnB,CAAwB,IAAxB,EAA6BhB,MAA7B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKC,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACEA,MAAM,CAACiB,IADT,CALD,EAQC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACEjB,MAAM,CAACkB,OADT,CARD,EAWC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACElB,MAAM,CAACmB,KADT,CAXD,CADD;AAiBA,OAvBM,CAAP;AAwBA,KAlEiB;;AAAA,SAmElBC,aAnEkB,GAmEDpB,MAAD,IAAU;AACzB,aACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEA,MAAM,CAACiB,IADT,CADD,EAIC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEjB,MAAM,CAACkB,OADT,CAJD,EAOC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACElB,MAAM,CAACmB,KADT,CAPD,EAUC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEnB,MAAM,CAACqB,OADT,CAVD,CADD;AAiBA,KArFiB;;AAEjB,SAAKP,KAAL,GAAW;AACVT,MAAAA,iBAAiB,EAAC,EADR;AAEVI,MAAAA,cAAc,EAAC,KAAKX,KAAL,CAAWW;AAFhB,KAAX;AAIA;;AACDa,EAAAA,qBAAqB,CAACC,SAAD,EAAWC,SAAX,EAAqB;AACzC,QAAG,KAAK1B,KAAL,KAAayB,SAAhB,EAA0B;AACzB,aAAO,IAAP;AACA,KAFD,MAEM,IAAG,KAAKT,KAAL,KAAaU,SAAhB,EAA0B;AAC/B,aAAO,IAAP;AACA,KAFK,MAGD;AAAC,aAAO,KAAP;AAAa;AACnB;;AACDC,EAAAA,kBAAkB,CAACC,SAAD,EAAWC,SAAX,EAAqB;AACtC,QAAG,KAAK7B,KAAL,CAAWW,cAAX,KAA4BiB,SAAS,CAACjB,cAAzC,EAAwD;AACvD,WAAKL,QAAL,CAAc;AACbK,QAAAA,cAAc,EAAC,KAAKX,KAAL,CAAWW,cADb;AAEbJ,QAAAA,iBAAiB,EAAC;AAFL,OAAd;AAGA;;AAAA,QAAI,KAAKP,KAAL,CAAWc,OAAX,KAAqBc,SAAS,CAACd,OAAnC,EAA2C;AAC3C,WAAKR,QAAL,CAAc;AACbK,QAAAA,cAAc,EAAC,EADF;AAEbJ,QAAAA,iBAAiB,EAAC,KAAKP,KAAL,CAAWW,cAAX,CAA0BH;AAF/B,OAAd;AAIA;;AAAA,QAAG,KAAKR,KAAL,CAAWO,iBAAX,KAA+BqB,SAAS,CAACrB,iBAA5C,EAA8D;AAC9D,WAAKD,QAAL,CAAc;AACbK,QAAAA,cAAc,EAAC,EADF;AAEbJ,QAAAA,iBAAiB,EAAC,KAAKP,KAAL,CAAWO,iBAAX,CAA6BC;AAFlC,OAAd;AAIA;AACD;;AAuDDsB,EAAAA,MAAM,GAAG;AACT1B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB,EAAuB,KAAKgB,KAA5B;AACA,QAAIe,IAAJ;AACA,QAAIC,OAAO,GACR;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC,iBAAR;AAA2BC,QAAAA,MAAM,EAAC,OAAlC;AAA2CC,QAAAA,SAAS,EAAE;AAAtD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADD,CADD,EAIC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKtB,cAAL,CAAoB,KAAKb,KAAL,CAAWa,cAA/B,CADF,CAJD,CADH;AASA,QAAIuB,SAAS,GACV;AAAK,MAAA,KAAK,EAAE;AAACH,QAAAA,MAAM,EAAC,iBAAR;AAA2BC,QAAAA,MAAM,EAAC,OAAlC;AAA2CC,QAAAA,SAAS,EAAE;AAAtD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKb,aAAL,CAAmB,KAAKN,KAAL,CAAWL,cAA9B,CADF,CADH;;AAKA,QAAI,KAAKK,KAAL,CAAWL,cAAX,KAA4B,EAAhC,EAAmC;AAClCoB,MAAAA,IAAI,GAAGC,OAAP;AACA,KAFD,MAEM,IAAG,KAAKhB,KAAL,CAAWL,cAAX,KAA4B,EAA/B,EAAkC;AACvCoB,MAAAA,IAAI,GAAIK,SAAR;AACA;;AAED,WACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,KAAK,EAAE;AAACF,QAAAA,MAAM,EAAE;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAGEH,IAHF,CADD;AAOE;;AArH4C;AAwH/C,eAAejC,eAAf","sourcesContent":["import React, {Component} from \"react\"\r\nimport { ListGroup, ListGroupItem,ListGroupItemText,ListGroupItemHeading} from 'reactstrap';\r\n\r\n\r\nexport class InfoAreaAddShop extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state={\r\n\t\t\tmarkerHighlighted:\"\",\r\n\t\t\tmarkerSelected:this.props.markerSelected\r\n\t\t}\r\n\t}\r\n\tshouldComponentUpdate(nextProps,nextState){\r\n\t\tif(this.props!==nextProps){\r\n\t\t\treturn true\r\n\t\t}else if(this.state!==nextState){\r\n\t\t\treturn true\r\n\t\t}\r\n\t\telse {return false}\r\n\t}\r\n\tcomponentDidUpdate(prevProps,prevState){\r\n\t\tif(this.props.markerSelected!==prevProps.markerSelected){\r\n\t\t\tthis.setState({\r\n\t\t\t\tmarkerSelected:this.props.markerSelected,\r\n\t\t\t\tmarkerHighlighted:\"\"})\r\n\t\t}if (this.props.markers!==prevProps.markers){\r\n\t\t\tthis.setState({\r\n\t\t\t\tmarkerSelected:\"\",\r\n\t\t\t\tmarkerHighlighted:this.props.markerSelected.id\r\n\t\t\t})\r\n\t\t}if(this.props.markerHighlighted!==prevProps.markerHighlighted){\r\n\t\t\tthis.setState({\r\n\t\t\t\tmarkerSelected:\"\",\r\n\t\t\t\tmarkerHighlighted:this.props.markerHighlighted.id\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tonclickMarker = (marker,event) =>{\r\n\t\tconsole.log(marker)\r\n\t\tthis.setState({markerHighlighted:marker.id})\r\n\t}\r\n\tonDoubleClick = (markerObject)=>{\r\n\t\tthis.setState({markerSelected:markerObject})\r\n\t\tthis.props.shopSelected(markerObject)\r\n\r\n\t}\r\n\tmarkersInBound = (markers)=>{\r\n\t\treturn markers.map((marker)=>{\r\n\t\t\tconsole.log(marker.id,this.state.markerHighlighted.id)\r\n\t\t\tlet active = \"\"\r\n\t\t\tif (marker.id===this.state.markerHighlighted.id){\r\n\t\t\t\tactive = \"success\"\r\n\t\t\t}\r\n\t\t\treturn(\r\n\t\t\t\t<ListGroupItem \r\n\t\t\t\tonClick={this.onclickMarker.bind(this,marker)}  \r\n\t\t\t\tkey={marker.id}  \r\n\t\t\t\tcolor={active}\r\n\t\t\t\tonDoubleClick = {this.onDoubleClick.bind(this,marker)}>\r\n\t\t\t\t\t<ListGroupItemHeading>\r\n\t\t\t\t\t\t{marker.name}\r\n\t\t\t\t\t</ListGroupItemHeading>\r\n\t\t\t\t\t<ListGroupItemText>\r\n\t\t\t\t\t\t{marker.address}\r\n\t\t\t\t\t</ListGroupItemText>\r\n\t\t\t\t\t<ListGroupItemText>\r\n\t\t\t\t\t\t{marker.score}\r\n\t\t\t\t\t</ListGroupItemText>\r\n\t\t\t\t</ListGroupItem>\r\n\t\t\t\t)\r\n\t\t})\r\n\t}\r\n\tfocusOnMarker = (marker)=>{\r\n\t\treturn(\r\n\t\t\t<ListGroupItem >\r\n\t\t\t\t<ListGroupItemHeading>\r\n\t\t\t\t\t{marker.name}\r\n\t\t\t\t</ListGroupItemHeading>\r\n\t\t\t\t<ListGroupItemText>\r\n\t\t\t\t\t{marker.address}\r\n\t\t\t\t</ListGroupItemText>\r\n\t\t\t\t<ListGroupItemText>\r\n\t\t\t\t\t{marker.score}\r\n\t\t\t\t</ListGroupItemText>\r\n\t\t\t\t<ListGroupItemText>\r\n\t\t\t\t\t{marker.details}\r\n\t\t\t\t</ListGroupItemText>\r\n\t\t\t</ListGroupItem>\r\n\r\n\t\t\t)\r\n\t}\r\n\trender() {\r\n\tconsole.log(this.props,this.state)\r\n\tlet info\r\n\tlet infoall =  \r\n\t\t\t\t<div style={{border:\"1px solid black\", height:\"438px\", overflowY: \"scroll\"}}>\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<h2> Stores in the area </h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ListGroup>\r\n\t\t\t\t\t\t{this.markersInBound(this.props.markersInBound)}\r\n\t\t\t\t\t</ListGroup>\r\n\t\t\t\t</div>\r\n\tlet infoFocus =\r\n\t\t\t\t<div style={{border:\"1px solid black\", height:\"438px\", overflowY: \"scroll\"}}>\r\n\t\t\t\t\t{this.focusOnMarker(this.state.markerSelected)}\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\tif (this.state.markerSelected===\"\"){\r\n\t\tinfo = infoall\r\n\t}else if(this.state.markerSelected!==\"\"){\r\n\t\tinfo = \tinfoFocus\r\n\t}\t\t\r\n\t\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t<div style={{height: '62px'}}>\r\n\t\t</div>\r\n\t\t\t{info}\r\n\t\t</React.Fragment>\t\r\n)\r\n  }\r\n}\r\n\r\nexport default InfoAreaAddShop\r\n\r\n"]},"metadata":{},"sourceType":"module"}