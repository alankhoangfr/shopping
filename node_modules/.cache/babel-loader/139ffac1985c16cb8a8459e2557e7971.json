{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlankHoang\\\\Desktop\\\\freecodeacademy\\\\shoppingBasket\\\\client\\\\src\\\\components\\\\AddItem\\\\Modal.js\";\nimport React, { Component } from 'react';\nimport { Alert } from 'reactstrap';\nexport class Modal extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(Alert, {\n      color: \"success\",\n      isOpen: this.props.visible,\n      toggle: this.props.onDismiss,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"alert-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Well done!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\"));\n  }\n\n}\n;\nexport default Modal;","map":{"version":3,"sources":["C:\\Users\\AlankHoang\\Desktop\\freecodeacademy\\shoppingBasket\\client\\src\\components\\AddItem\\Modal.js"],"names":["React","Component","Alert","Modal","constructor","props","render","visible","onDismiss"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,QAAsB,YAAtB;AAEA,OAAO,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AACpCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA;;AACDC,EAAAA,MAAM,GAAE;AACP,WAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,SAAb;AAAuB,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,OAA1C;AAAmD,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWG,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uMAFF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FARF,CAFJ;AAeE;;AApBiC;AAqBpC;AAED,eAAeL,KAAf","sourcesContent":["import React ,{Component} from 'react';\r\nimport { Alert } from 'reactstrap';\r\n\r\nexport class Modal extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t}\r\n\trender(){\r\n  return (\r\n\r\n      <Alert color=\"success\" isOpen={this.props.visible} toggle={this.props.onDismiss}>\r\n        <h4 className=\"alert-heading\">Well done!</h4>\r\n        <p>\r\n          Aww yeah, you successfully read this important alert message. This example text is going\r\n          to run a bit longer so that you can see how spacing within an alert works with this kind\r\n          of content.\r\n        </p>\r\n        <hr />\r\n        <p className=\"mb-0\">\r\n          Whenever you need to, be sure to use margin utilities to keep things nice and tidy.\r\n        </p>\r\n      </Alert>\r\n\r\n  )}\r\n};\r\n\r\nexport default Modal;"]},"metadata":{},"sourceType":"module"}