{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlankHoang\\\\Desktop\\\\freecodeacademy\\\\shoppingBasket\\\\client\\\\src\\\\components\\\\Map.js\";\nimport React, { Component } from 'react';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport basket from \"../image/basket.png\";\nGeocode.setApiKey('AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI');\nGeocode.enableDebug();\nexport class Map extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bound: null,\n      mapPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      },\n      markerPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      },\n      map: null,\n      markers: [{\n        photo_id: 0,\n        lat: -33.78,\n        lng: 151.2,\n        name: \"add1\"\n      }, {\n        photo_id: 10,\n        lat: -33.79,\n        lng: 151.1,\n        name: \"add22\"\n      }, {\n        photo_id: 2,\n        lat: -33.785,\n        lng: 151.23,\n        name: \"add3\"\n      }],\n      markers1: []\n    };\n\n    this.onPlaceSelected = (place, event) => {\n      console.log(place);\n\n      if (place.name !== undefined) {\n        Geocode.fromAddress(place.name).then(response => {\n          const _response$results$0$g = response.results[0].geometry.location,\n                lat = _response$results$0$g.lat,\n                lng = _response$results$0$g.lng;\n          console.log(lat, lng);\n\n          if (lat === undefined) {\n            return null;\n          }\n\n          this.setState({\n            mapPosition: {\n              lat: lat,\n              lng: lng\n            },\n            markerPosition: {\n              lat: lat,\n              lng: lng\n            }\n          });\n        });\n      } else {\n        const name = place.formatted_name,\n              latValue = place.geometry.location.lat(),\n              lngValue = place.geometry.location.lng(); // Set these values in the state.\n\n        this.setState({\n          mapPosition: {\n            lat: latValue,\n            lng: lngValue\n          },\n          markerPosition: {\n            lat: latValue,\n            lng: lngValue\n          }\n        });\n      }\n\n      return;\n    };\n\n    this.mapmoved = () => {\n      console.log(\"bound:\" + JSON.stringify(this.state.map.getBounds()));\n      this.setState({\n        bound: this.state.map.getBounds()\n      });\n    };\n\n    this.maploaded = mapRef => {\n      console.log(\"maploaded\");\n\n      if (!mapRef) {\n        return;\n      }\n\n      this.setState({\n        map: mapRef,\n        bound: mapRef.getBounds()\n      });\n    };\n\n    this.onZoom = () => {\n      console.log(\"zoom:\" + JSON.stringify(this.state.map.getCenter()));\n      this.setState({\n        bound: this.state.map.getBounds()\n      });\n    };\n\n    this.insideBound = (shops, map) => {\n      if (map != null && shops != null) {\n        var result = [];\n        console.log(map.getBounds(), \"lets look\");\n        var bound = map.getBounds();\n        shops.map(shop => {\n          if (shop.lat > bound.na.j && shop.lat < bound.na.l && shop.lng > bound.ia.j && shop.lng < bound.ia.l) {\n            result.push(shop);\n          }\n        });\n        return result;\n      } else {\n        return [];\n      }\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(this.state, \"should componenet\");\n\n    if (this.state.map != null) {\n      if (this.state.map.props.center.lat !== this.state.mapPosition.lat) {\n        return true;\n      }\n    }\n\n    if (nextState.mapPosition.lat !== this.state.mapPosition.lat) {\n      return true;\n    } else if (this.state.mapPosition.lat === nextState.mapPosition.lat) {\n      return false;\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    const AsyncMap = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n      google: this.props.google,\n      ref: this.maploaded,\n      zoom: 10,\n      defaultCenter: {\n        lat: this.props.lat,\n        lng: this.props.lng\n      },\n      center: {\n        lat: this.state.mapPosition.lat,\n        lng: this.state.mapPosition.lng\n      },\n      onDragEnd: this.mapmoved,\n      onZoomChanged: this.onZoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      draggable: true,\n      position: {\n        lat: this.state.markerPosition.lat,\n        lng: this.state.markerPosition.lng\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), this.insideBound(this.state.markers, this.state.map).map(marker => {\n      return React.createElement(Marker, {\n        key: marker.photo_id,\n        position: {\n          lat: marker.lat,\n          lng: marker.lng\n        },\n        icon: basket,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      });\n    }), React.createElement(Autocomplete, {\n      style: {\n        width: '200%',\n        height: '40px',\n        paddingLeft: '16px',\n        marginTop: '2px',\n        marginBottom: '100px'\n      },\n      onPlaceSelected: this.onPlaceSelected,\n      types: ['(regions)'],\n      placeholder: \"Enter and select location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }))));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Search for the Supermarkets near you\")), React.createElement(\"div\", {\n      style: {\n        width: \"500px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(AsyncMap, {\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI&libraries=places\",\n      loadingElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }),\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: this.props.height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default Map;","map":{"version":3,"sources":["C:\\Users\\AlankHoang\\Desktop\\freecodeacademy\\shoppingBasket\\client\\src\\components\\Map.js"],"names":["React","Component","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Geocode","Autocomplete","basket","setApiKey","enableDebug","Map","state","bound","mapPosition","lat","props","center","lng","markerPosition","map","markers","photo_id","name","markers1","onPlaceSelected","place","event","console","log","undefined","fromAddress","then","response","results","geometry","location","setState","formatted_name","latValue","lngValue","mapmoved","JSON","stringify","getBounds","maploaded","mapRef","onZoom","getCenter","insideBound","shops","result","shop","na","j","l","ia","push","shouldComponentUpdate","nextProps","nextState","render","AsyncMap","google","marker","width","height","paddingLeft","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker  } from \"react-google-maps\";\r\nimport Geocode from \"react-geocode\"\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport basket from \"../image/basket.png\"\r\n\r\nGeocode.setApiKey('AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI');\r\nGeocode.enableDebug();\r\n\r\n\r\nexport class Map extends Component {\r\n\tstate = {\r\n\t\tbound:null,\r\n\t\tmapPosition:{\r\n\t\t\tlat: this.props.center.lat,\r\n\t\t\tlng: this.props.center.lng\r\n\t\t},\r\n\t\tmarkerPosition:{\r\n\t\t\tlat:this.props.center.lat,\r\n\t\t\tlng:this.props.center.lng\r\n\t\t},\r\n\t\tmap:null,\r\n\t\tmarkers:[{photo_id:0,lat: -33.78, lng: 151.2,name:\"add1\"},{photo_id:10,lat: -33.79, lng: 151.1,name:\"add22\"},{photo_id:2,lat: -33.785, lng: 151.23,name:\"add3\"}],\r\n\t\tmarkers1:[],\r\n\r\n\t}\r\n\r\n\tshouldComponentUpdate( nextProps, nextState ){\r\n\t\tconsole.log(this.state,\"should componenet\")\r\n\t\tif (this.state.map!=null){\r\n\t\t\tif(this.state.map.props.center.lat!==this.state.mapPosition.lat){\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\r\n\t\tif (nextState.mapPosition.lat !== this.state.mapPosition.lat ) {\r\n\t\treturn true\r\n\t\t} else if ( this.state.mapPosition.lat  === nextState.mapPosition.lat ){\r\n\t\treturn false\t\r\n\t \t}\r\n\t}\r\n\r\n\tonPlaceSelected = ( place,event ) => {\r\n\t\tconsole.log(place)\r\n\t\tif (place.name!==undefined){\r\n\t\t\tGeocode.fromAddress(place.name).then(\r\n\t\t\t\tresponse => {\r\n    \t\t\tconst { lat, lng } = response.results[0].geometry.location\r\n    \t\t\tconsole.log(lat, lng)\r\n    \t\t\tif (lat ===undefined){\r\n    \t\t\t\treturn null\r\n    \t\t\t}\r\n    \t\t\tthis.setState({\r\n\t\t\t\t\tmapPosition: {\r\n\t\t\t\t\t\tlat: lat,\r\n\t\t\t\t\t\tlng: lng\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmarkerPosition: {\r\n\t\t\t\t\t\tlat: lat,\r\n\t\t\t\t\t\tlng: lng\r\n\t\t\t\t\t},\r\n\t\t\t})\r\n    \t\t})\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconst name = place.formatted_name,\r\n\t\t\tlatValue = place.geometry.location.lat(),\r\n\t\t\tlngValue = place.geometry.location.lng();\r\n\t\t\t// Set these values in the state.\r\n\t\t\tthis.setState({\r\n\t\t\t\tmapPosition: {\r\n\t\t\t\t\tlat: latValue,\r\n\t\t\t\t\tlng: lngValue\r\n\t\t\t\t},\r\n\t\t\t\tmarkerPosition: {\r\n\t\t\t\t\tlat: latValue,\r\n\t\t\t\t\tlng: lngValue\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t}\r\n\treturn\r\n\r\n\t};\r\n\tmapmoved=()=>{\r\n\t\tconsole.log(\"bound:\"+JSON.stringify(this.state.map.getBounds()))\r\n\t\tthis.setState({\r\n\t\t\tbound:this.state.map.getBounds(),\r\n\r\n\t\t})\r\n\t}\r\n\tmaploaded=(mapRef)=>{\r\n\t\tconsole.log(\"maploaded\")\r\n\t\tif(!mapRef){\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tmap:mapRef,\r\n\t\t\tbound:mapRef.getBounds()})\r\n\t\t\r\n\t}\r\n\tonZoom = ()=>{\r\n\t\tconsole.log(\"zoom:\"+JSON.stringify(this.state.map.getCenter()))\r\n\t\tthis.setState({\r\n\t\t\tbound:this.state.map.getBounds(),\r\n\r\n\t\t})\r\n\t}\r\n\tinsideBound = (shops,map)=>{\r\n\t\tif (map!=null&&shops!=null){\r\n\t\t\tvar result = []\r\n\t\t\tconsole.log(map.getBounds(),\"lets look\")\r\n\t\t\tvar bound = map.getBounds()\r\n\t\t\tshops.map((shop)=>{\r\n\t\t\t\tif (shop.lat>bound.na.j && shop.lat<bound.na.l && shop.lng>bound.ia.j && shop.lng<bound.ia.l){\r\n\t\t\t\t\tresult.push(shop)}\t\r\n\r\n\t\t\t})\r\n\t\t\treturn result\r\n\t\t}else{return []}}\r\n\t\r\n\trender() {\r\n\tconsole.log(this.state)\r\n\tconst AsyncMap = withScriptjs(\r\n\t\twithGoogleMap(\r\n\t\t\tprops => (\r\n\t\t\t\t<GoogleMap \r\n\t\t\t\tgoogle={this.props.google}\r\n\t\t\t\tref = {this.maploaded}\r\n\t\t\t\tzoom={10}\r\n\t\t\t\tdefaultCenter={{ lat: this.props.lat, lng: this.props.lng }}\r\n\t\t\t\tcenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\r\n\t\t\t\tonDragEnd={this.mapmoved}\r\n\t\t\t\tonZoomChanged = {this.onZoom}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Marker \r\n\t\t\t\t\t\tdraggable={true}\r\n\t\t\t\t\t\tposition={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\r\n\t\t\t\t\t/>\r\n  \t\t\t\t\t{this.insideBound(this.state.markers,this.state.map).map((marker) => {\r\n\t\t\t\t\t\treturn( \r\n\t    \t\t\t\t\t<Marker\r\n\t      \t\t\t\t\t\tkey={marker.photo_id}\r\n\t      \t\t\t\t\t\tposition={{ lat: marker.lat, lng: marker.lng }}\r\n\t      \t\t\t\t\t\ticon ={basket}\r\n\t    \t\t\t\t\t/>)\r\n  \t\t\t\t\t\t\r\n    \t\t\t\t})}\r\n    \t\t\t\t\r\n\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: '200%',\r\n\t\t\t\t\t\theight: '40px',\r\n\t\t\t\t\t\tpaddingLeft: '16px',\r\n\t\t\t\t\t\tmarginTop: '2px',\r\n\t\t\t\t\t\tmarginBottom: '100px',\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonPlaceSelected={ this.onPlaceSelected }\r\n\t\t\t\t\t\ttypes={['(regions)']}\r\n\t\t\t\t\t\tplaceholder={\"Enter and select location\"}\r\n\r\n\t\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t</GoogleMap>\r\n\t\t\t)\r\n\t\t)\r\n\t)\r\n\r\n\t\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t <div>\r\n\t\t\t\t<h1>\r\n\t\t\t\t\tSearch for the Supermarkets near you\r\n\t\t\t\t</h1>\r\n\t\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t <div style={{width:\"500px\"}}>\r\n\r\n\t\t\t\t<AsyncMap\r\n\t\t\t\t\tgoogleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI&libraries=places\"\r\n\t\t\t\t\tloadingElement={\r\n\t\t\t\t\t <div style={{ height: `100%` }} />\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontainerElement={\r\n\t\t\t\t\t <div style={{ height: this.props.height }} />\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmapElement={\r\n\t\t\t\t\t <div style={{ height: `100%` }} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t \r\n\t)\r\n  }\r\n}\r\n\r\nexport default Map"]},"metadata":{},"sourceType":"module"}