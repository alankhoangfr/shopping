{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlankHoang\\\\Desktop\\\\freecodeacademy\\\\shoppingbasket\\\\client\\\\src\\\\components\\\\AddShop\\\\Shop.js\";\nimport React, { Component } from \"react\";\nimport { withGoogleMap, GoogleMap, withScriptjs, Marker } from \"react-google-maps\";\nimport Autocomplete from 'react-google-autocomplete';\nimport Geocode from \"react-geocode\";\nGeocode.setApiKey(\"AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI\");\nGeocode.enableDebug();\n\nclass Shop extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getPostcode = addressArray => {\n      let postcode = '';\n\n      for (let i = 0; i < addressArray.length; i++) {\n        if (addressArray[i].types[0] && 'postal_code' === addressArray[i].types[0]) {\n          postcode = addressArray[i].long_name;\n          return postcode;\n        }\n      }\n    };\n\n    this.getCity = addressArray => {\n      let city = '';\n\n      for (let i = 0; i < addressArray.length; i++) {\n        if (addressArray[i].types[0]) {\n          for (let j = 0; j < addressArray[i].types.length; j++) {\n            if ('sublocality_level_1' === addressArray[i].types[j] || 'locality' === addressArray[i].types[j]) {\n              city = addressArray[i].long_name;\n              return city;\n            }\n          }\n        }\n      }\n    };\n\n    this.getState = addressArray => {\n      let state = '';\n\n      for (let i = 0; i < addressArray.length; i++) {\n        for (let i = 0; i < addressArray.length; i++) {\n          if (addressArray[i].types[0] && 'administrative_area_level_1' === addressArray[i].types[0]) {\n            state = addressArray[i].short_name;\n            return state;\n          }\n        }\n      }\n    };\n\n    this.onMarkerDragEnd = event => {\n      console.log('event', event);\n      let newLat = event.latLng.lat(),\n          newLng = event.latLng.lng(),\n          addressArray = [];\n      Geocode.fromLatLng(newLat, newLng).then(response => {\n        const address = response.results[0].formatted_address,\n              addressArray = response.results[0].address_components,\n              city = this.getCity(addressArray),\n              postcode = this.getPostcode(addressArray),\n              state = this.getState(addressArray);\n        this.setState({\n          address: address ? address : '',\n          postcode: postcode ? postcode : '',\n          city: city ? city : '',\n          state: state ? state : '',\n          markerPosition: {\n            lat: newLat,\n            lng: newLng\n          },\n          mapPosition: {\n            lat: newLat,\n            lng: newLng\n          }\n        });\n      }, error => {\n        console.error(error);\n      });\n    };\n\n    this.state = {\n      address: '',\n      city: '',\n      area: '',\n      state: '',\n      mapPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      },\n      markerPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      }\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.markerPosition.lat !== this.props.center.lat || this.state.address !== nextState.address || this.state.city !== nextState.city || this.state.area !== nextState.area || this.state.state !== nextState.state) {\n      return true;\n    } else if (this.props.center.lat !== nextProps.center.lat) {\n      return true;\n    } else if (this.props.center.lat === nextProps.center.lat) {\n      return false;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.center.lat !== prevProps.center.lat) {\n      this.setState({\n        markerPosition: this.props.center,\n        mapPosition: this.props.center\n      });\n    }\n  }\n  /**\r\n    * Get the city and set the city input value to the one selected\r\n    *\r\n    * @param addressArray\r\n    * @return {string}\r\n    */\n\n\n  render() {\n    console.log(\"shop\", this.state, this.props);\n    const AsyncMap = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n      google: this.props.google,\n      defaultZoom: this.props.zoom,\n      center: {\n        lat: this.state.mapPosition.lat,\n        lng: this.state.mapPosition.lng\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      google: this.props.google,\n      draggable: true,\n      onDragEnd: this.onMarkerDragEnd,\n      position: {\n        lat: this.state.markerPosition.lat,\n        lng: this.state.markerPosition.lng\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(Marker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }))));\n    let map;\n\n    if (this.props.center.lat !== undefined) {\n      map = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(AsyncMap, {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI&libraries=places\",\n        loadingElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }),\n        containerElement: React.createElement(\"div\", {\n          style: {\n            height: this.props.height\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }),\n        mapElement: React.createElement(\"div\", {\n          style: {\n            height: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }));\n    } else {\n      map = React.createElement(\"div\", {\n        style: {\n          height: this.props.height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      });\n    }\n\n    return map;\n  }\n\n}\n\nexport default Shop;","map":{"version":3,"sources":["C:\\Users\\AlankHoang\\Desktop\\freecodeacademy\\shoppingbasket\\client\\src\\components\\AddShop\\Shop.js"],"names":["React","Component","withGoogleMap","GoogleMap","withScriptjs","Marker","Autocomplete","Geocode","setApiKey","enableDebug","Shop","constructor","props","getPostcode","addressArray","postcode","i","length","types","long_name","getCity","city","j","getState","state","short_name","onMarkerDragEnd","event","console","log","newLat","latLng","lat","newLng","lng","fromLatLng","then","response","address","results","formatted_address","address_components","setState","markerPosition","mapPosition","error","area","center","shouldComponentUpdate","nextProps","nextState","componentDidUpdate","prevProps","render","AsyncMap","google","zoom","map","undefined","height"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport { withGoogleMap, GoogleMap, withScriptjs, Marker } from \"react-google-maps\";\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport Geocode from \"react-geocode\";\r\nGeocode.setApiKey(\"AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI\");\r\nGeocode.enableDebug();\r\n\r\n\r\nclass Shop extends React.Component{\r\nconstructor( props ){\r\n  super( props );\r\n  this.state = {\r\n   address: '',\r\n   city: '',\r\n   area: '',\r\n   state: '',\r\n   mapPosition: {\r\n    lat: this.props.center.lat,\r\n    lng: this.props.center.lng\r\n   },\r\n   markerPosition: {\r\n    lat: this.props.center.lat,\r\n    lng: this.props.center.lng\r\n}\r\n  }\r\n }\r\n\r\n\r\n shouldComponentUpdate( nextProps, nextState ){\r\n  if (\r\n   this.state.markerPosition.lat !== this.props.center.lat ||\r\n   this.state.address !== nextState.address ||\r\n   this.state.city !== nextState.city ||\r\n   this.state.area !== nextState.area ||\r\n   this.state.state !== nextState.state\r\n  ) {\r\n   return true\r\n  }else if ( this.props.center.lat !== nextProps.center.lat ){\r\n   return true\r\n  }\r\n   else if ( this.props.center.lat === nextProps.center.lat ){\r\n   return false\r\n  }\r\n }\r\n\r\n\r\n componentDidUpdate(prevProps){\r\n     if ( this.props.center.lat !== prevProps.center.lat ){\r\n        this.setState({\r\n            markerPosition:this.props.center,\r\n            mapPosition:this.props.center,\r\n        })\r\n    }\r\n }\r\n/**\r\n  * Get the city and set the city input value to the one selected\r\n  *\r\n  * @param addressArray\r\n  * @return {string}\r\n  */\r\n getPostcode = ( addressArray ) => {\r\n  let postcode = '';\r\n  for( let i = 0; i < addressArray.length; i++ ) {\r\n   if ( addressArray[ i ].types[0] && 'postal_code' === addressArray[ i ].types[0] ) {\r\n    postcode = addressArray[ i ].long_name;\r\n    return postcode;\r\n   }\r\n  }\r\n };\r\n/**\r\n  * Get the area and set the area input value to the one selected\r\n  *\r\n  * @param addressArray\r\n  * @return {string}\r\n  */\r\n getCity = ( addressArray ) => {\r\n  let city = '';\r\n  for( let i = 0; i < addressArray.length; i++ ) {\r\n   if ( addressArray[ i ].types[0]  ) {\r\n    for ( let j = 0; j < addressArray[ i ].types.length; j++ ) {\r\n     if ( 'sublocality_level_1' === addressArray[ i ].types[j] || 'locality' === addressArray[ i ].types[j] ) {\r\n      city = addressArray[ i ].long_name;\r\n      return city;\r\n     }\r\n    }\r\n   }\r\n  }\r\n };\r\n/**\r\n  * Get the address and set the address input value to the one selected\r\n  *\r\n  * @param addressArray\r\n  * @return {string}\r\n  */\r\n getState = ( addressArray ) => {\r\n  let state = '';\r\n  for( let i = 0; i < addressArray.length; i++ ) {\r\n   for( let i = 0; i < addressArray.length; i++ ) {\r\n    if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\r\n     state = addressArray[ i ].short_name;\r\n     return state;\r\n    }\r\n   }\r\n  }\r\n };\r\n/**\r\n  * And function for city,state and address input\r\n  * @param event\r\n  */\r\n\r\n\r\n\r\n/**\r\n  * When the marker is dragged you get the lat and long using the functions available from event object.\r\n  * Use geocode to get the address, city, area and state from the lat and lng positions.\r\n  * And then set those values in the state.\r\n  *\r\n  * @param event\r\n  */\r\n onMarkerDragEnd = ( event ) => {\r\n  console.log( 'event', event );\r\n  let newLat = event.latLng.lat(),\r\n   newLng = event.latLng.lng(),\r\n   addressArray = [];\r\nGeocode.fromLatLng( newLat , newLng ).then(\r\n   response => {\r\n    const address = response.results[0].formatted_address,\r\n     addressArray =  response.results[0].address_components,\r\n     city = this.getCity( addressArray ),\r\n     postcode = this.getPostcode( addressArray ),\r\n     state = this.getState( addressArray );\r\nthis.setState( {\r\n     address: ( address ) ? address : '',\r\n     postcode: ( postcode ) ? postcode : '',\r\n     city: ( city ) ? city : '',\r\n     state: ( state ) ? state : '',\r\n     markerPosition: {\r\n    lat: newLat,\r\n    lng: newLng\r\n   },\r\n     mapPosition: {\r\n    lat: newLat,\r\n    lng: newLng\r\n   },\r\n    } )\r\n   },\r\n   error => {\r\n    console.error(error);\r\n   }\r\n  );\r\n };\r\nrender(){\r\n    console.log(\"shop\",this.state,this.props)\r\nconst AsyncMap = withScriptjs(\r\n   withGoogleMap(\r\n    props => (\r\n     <GoogleMap google={this.props.google}\r\n      defaultZoom={this.props.zoom}\r\n      center={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\r\n     >\r\n      {/* For Auto complete Search Box */}\r\n\r\n{/*Marker*/}\r\n      <Marker \r\n      google={this.props.google}\r\n             draggable ={true}\r\n             onDragEnd = {this.onMarkerDragEnd}\r\n             position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\r\n      />\r\n      <Marker />\r\n</GoogleMap>\r\n)\r\n   )\r\n  );\r\nlet map;\r\n  if( this.props.center.lat !== undefined ) {\r\n   map = <div>\r\n     <AsyncMap\r\n      googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI&libraries=places\"\r\n      loadingElement={\r\n       <div style={{ height: `100%` }} />\r\n      }\r\n      containerElement={\r\n       <div style={{ height: this.props.height }} />\r\n      }\r\n      mapElement={\r\n       <div style={{ height: `100%` }} />\r\n      }\r\n     />\r\n    </div>\r\n} else {\r\n   map = <div style={{height: this.props.height}} />\r\n  }\r\n  return( map )\r\n }\r\n}\r\nexport default Shop"]},"metadata":{},"sourceType":"module"}