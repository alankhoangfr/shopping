{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\AlankHoang\\\\Desktop\\\\freecodeacademy\\\\shoppingBasket\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\AlankHoang\\\\Desktop\\\\freecodeacademy\\\\shoppingBasket\\\\client\\\\src\\\\components\\\\Compare\\\\ItemDisplay.js\";\nimport React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardLink, CardTitle, CardSubtitle, Form, FormGroup, Label, Input, Col, Button } from 'reactstrap';\nimport SearchBoxCompare from \"./SearchBoxCompare\";\nimport PropTypes from \"prop-types\";\nimport grocery_sampleJSON from \"../../Data/grocery_sampleJSON.json\";\nimport { getSuperMarkets } from \"../../actions/SuperMarketActions\";\nimport { connect } from \"react-redux\";\nconst source = grocery_sampleJSON;\nexport class ItemDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sourceForList = arr => {\n      arr.map(shop => {\n        console.log(shop, this.props.superMarket[shop.id].item);\n\n        if (this.props.superMarket[shop.id].item !== undefined) {\n          const list_items = Object.keys(this.props.superMarket[shop.id].item);\n          console.log(list_items, shop.id);\n        }\n      });\n    };\n\n    this.result = result => {\n      this.setState({\n        result: result\n      });\n    };\n\n    this.onStartDrag = (resultInfo, event) => {\n      const info = _objectSpread({}, this.state.result, {\n        quantity: this.state.quantity\n      });\n\n      this.props.itemOnDrag(info);\n    };\n\n    this.onChange = event => {\n      this.setState({\n        quantity: event.target.value,\n        emptySearchBox: true\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n\n      const info = _objectSpread({}, this.state.result, {\n        quantity: this.state.quantity\n      });\n\n      this.setState({\n        basket: [...this.state.basket, info],\n        quantity: \"\",\n        result: \"\",\n        emptySearchBox: true\n      });\n      this.props.basket([...this.state.basket, info]);\n    };\n\n    this.state = {\n      result: \"\",\n      quantity: \"\",\n      basket: [],\n      emptySearchBox: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.getSuperMarkets();\n  }\n\n  shouldComponentUpdate(nextState, nextProps) {\n    console.log(nextState, nextProps, \"ItemDisplay should component update\");\n\n    if (this.state.result !== nextState.result) {\n      return true;\n    }\n\n    if (this.props.supermarket_selected !== nextProps.supermarket_selected) {\n      return true;\n    }\n\n    if (this.props.space !== nextProps.space) {\n      return true;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.supermarket_selected !== this.props.supermarket_selected) {\n      this.setState({\n        result: \"\"\n      });\n    }\n\n    if (prevProps.space !== this.props.space) {\n      this.sourceForList(this.props.space);\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          result = _this$state.result,\n          price = _this$state.price;\n    let cardImage = React.createElement(CardImg, {\n      top: true,\n      width: \"100%\",\n      src: this.state.result.image,\n      alt: \"Card image cap\",\n      style: {\n        maxWidth: \"150px\",\n        maxHeight: \"150px\",\n        margin: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    });\n\n    if (this.state.result.image === null) {\n      cardImage = React.createElement(CardBody, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Be the first to upload a photo\"), React.createElement(Input, {\n        type: \"file\",\n        name: \"file\",\n        id: \"exampleFile\",\n        style: {\n          width: \"60%\",\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n    }\n\n    let card = React.createElement(Card, {\n      style: {\n        marginTop: \"20px\"\n      },\n      draggable: true,\n      onDragStart: this.onStartDrag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.result.brand_name), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.result.description)), cardImage, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"number\",\n      name: \"quantity\",\n      id: \"quantity\",\n      placeholder: \"quantity\",\n      onChange: this.onChange,\n      required: true,\n      min: \"1\",\n      step: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      check: true,\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        size: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Add to the Basket\"))))));\n\n    if (this.state.result === \"\") {\n      card = null;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Search an item\"), React.createElement(SearchBoxCompare, {\n      result: this.result,\n      supermarket_selected: this.props.supermarket_selected,\n      emptySearchBox: this.state.emptySearchBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), card);\n  }\n\n}\nItemDisplay.propTypes = {\n  getSuperMarkets: PropTypes.func.isRequired,\n  superMarket: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  superMarket: state.superMarket\n});\n\nexport default connect(mapStateToProps, {\n  getSuperMarkets\n})(ItemDisplay);","map":{"version":3,"sources":["C:\\Users\\AlankHoang\\Desktop\\freecodeacademy\\shoppingBasket\\client\\src\\components\\Compare\\ItemDisplay.js"],"names":["React","Card","CardImg","CardText","CardBody","CardLink","CardTitle","CardSubtitle","Form","FormGroup","Label","Input","Col","Button","SearchBoxCompare","PropTypes","grocery_sampleJSON","getSuperMarkets","connect","source","ItemDisplay","Component","constructor","props","sourceForList","arr","map","shop","console","log","superMarket","id","item","undefined","list_items","Object","keys","result","setState","onStartDrag","resultInfo","event","info","state","quantity","itemOnDrag","onChange","target","value","emptySearchBox","onSubmit","preventDefault","basket","componentDidMount","shouldComponentUpdate","nextState","nextProps","supermarket_selected","space","componentDidUpdate","prevProps","render","price","cardImage","image","maxWidth","maxHeight","margin","width","card","marginTop","brand_name","description","size","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardLink,\r\n  CardTitle, CardSubtitle,Form, FormGroup, Label, Input,Col,Button } from 'reactstrap';\r\nimport SearchBoxCompare from \"./SearchBoxCompare\"\r\nimport PropTypes from \"prop-types\"\r\nimport grocery_sampleJSON from \"../../Data/grocery_sampleJSON.json\"\r\nimport {getSuperMarkets} from \"../../actions/SuperMarketActions\"\r\nimport {connect} from \"react-redux\"\r\nconst source = grocery_sampleJSON\r\n\r\nexport class ItemDisplay extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n             result:\"\",\r\n             quantity:\"\",\r\n             basket:[],\r\n             emptySearchBox:false,\r\n         }\r\n     }\r\n    componentDidMount(){\r\n        this.props.getSuperMarkets()\r\n    }\r\n    shouldComponentUpdate(nextState,nextProps){\r\n        console.log(nextState,nextProps,\"ItemDisplay should component update\")\r\n         if(this.state.result!==nextState.result){\r\n             return true\r\n         }\r\n         if(this.props.supermarket_selected!==nextProps.supermarket_selected\t){\r\n\t\t\treturn true\r\n\t\t}if(this.props.space!==nextProps.space){\r\n            return true\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps){\r\n    \tif(prevProps.supermarket_selected!==this.props.supermarket_selected\t){\r\n    \t\tthis.setState({result:\"\"})\r\n    \t}if(prevProps.space!==this.props.space){\r\n            this.sourceForList(this.props.space)\r\n        }\r\n    }\r\n    sourceForList=(arr)=>{\r\n        arr.map((shop)=>{\r\n            console.log(shop,this.props.superMarket[shop.id].item)\r\n            if(this.props.superMarket[shop.id].item!==undefined){\r\n                const list_items = Object.keys(this.props.superMarket[shop.id].item)\r\n                console.log(list_items,shop.id)\r\n            }\r\n        })\r\n    }\r\n\tresult = (result)=>{\r\n    \tthis.setState({result:result})\r\n\t}\r\n\r\n\tonStartDrag=(resultInfo,event)=>{\r\n\t\tconst info = {\r\n            ...this.state.result,\r\n            quantity:this.state.quantity\r\n        }\r\n\t\tthis.props.itemOnDrag(info)\r\n\t}\r\n    onChange=(event)=>{\r\n        this.setState({\r\n            quantity:event.target.value,\r\n            emptySearchBox:true,})\r\n    }\r\n    onSubmit=(event)=>{\r\n        event.preventDefault()\r\n        const info = {\r\n            ...this.state.result,\r\n            quantity:this.state.quantity\r\n        }\r\n        this.setState({\r\n            basket:[...this.state.basket,info],\r\n            quantity:\"\",\r\n            result:\"\",\r\n            emptySearchBox:true})\r\n        this.props.basket([...this.state.basket,info])\r\n    }\r\n    render() {\r\n    \tconst {result,price}=this.state\r\n    \tlet cardImage = <CardImg top width=\"100%\" src={this.state.result.image} alt=\"Card image cap\"\r\n             \t\tstyle={{maxWidth:\"150px\",maxHeight:\"150px\",margin:\"auto\"}}/>\r\n        if(this.state.result.image===null){\r\n        \tcardImage=\r\n        \t    <CardBody className=\"text-center\"> \r\n        \t    \t<CardText>Be the first to upload a photo</CardText>\r\n        \t\t\t<Input type=\"file\" name=\"file\" id=\"exampleFile\"  style={{width:\"60%\",margin:\"auto\"}}/>\r\n        \t\t</CardBody>\r\n        }\t\t\r\n         let card = \r\n            <Card style={{marginTop:\"20px\"}} draggable={true} onDragStart={this.onStartDrag}>\r\n                <CardBody className=\"text-center\">\r\n                    <CardTitle>{this.state.result.brand_name}</CardTitle>\r\n                    <CardSubtitle>{this.state.result.description}</CardSubtitle>        \r\n                </CardBody>\r\n                   {cardImage}\r\n                <CardBody>\r\n                    <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n                    <Form onSubmit={this.onSubmit}>\r\n                        <FormGroup row className=\"text-center\">\r\n                            <Col sm={10}>\r\n                                <Input type=\"number\" name=\"quantity\" id=\"quantity\" placeholder=\"quantity\" onChange={this.onChange} required min=\"1\" step=\"1\"/>\r\n                            </Col>\r\n                        </FormGroup>\r\n                        <FormGroup check row>\r\n                            <Col sm={{ size: 10}}>\r\n                                <Button>Add to the Basket</Button>\r\n                             </Col>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </CardBody>\r\n            </Card>\r\n    \t\t\tif (this.state.result===\"\"){\r\n       \t\t\t\tcard=null\r\n    \t\t\t}\r\n\treturn (\r\n    \t<div>\r\n    \t\t<h1 style={{marginTop:\"20px\"}}>Search an item</h1>\r\n        \t<SearchBoxCompare\r\n            \tresult = {this.result}\r\n            \tsupermarket_selected={this.props.supermarket_selected}\r\n                emptySearchBox={this.state.emptySearchBox}/>\r\n        \t{card}\r\n    \t</div>\r\n   \r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nItemDisplay.propTypes = {\r\n    getSuperMarkets:PropTypes.func.isRequired,\r\n    superMarket:PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = (state)=>({\r\n    superMarket:state.superMarket\r\n})\r\n\r\nexport default connect(mapStateToProps,{getSuperMarkets}) (ItemDisplay)\r\n"]},"metadata":{},"sourceType":"module"}