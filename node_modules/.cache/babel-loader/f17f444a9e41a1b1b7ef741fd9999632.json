{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlankHoang\\\\Desktop\\\\freecodeacademy\\\\shoppingBasket\\\\client\\\\src\\\\components\\\\AddItem\\\\FormItem.js\";\nimport React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardLink, CardTitle, CardSubtitle, Form, FormGroup, Label, Input, Col, Button } from 'reactstrap';\nimport SearchBox from \"./SearchBox\";\nimport { addItemToShop, getSuperMarkets, putPrice } from \"../../actions/SuperMarketActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nexport class FormItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.result = result => {\n      this.setState({\n        result: result\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            result = _this$state.result,\n            price = _this$state.price;\n      const newItem = {\n        item_id: result.item_id,\n        brand_name: result.brand_name,\n        price: price,\n        timeStamp: moment().format(),\n        superMarket_id: this.props.supermarket_selected.id,\n        date: moment().format(\"ddd Do MMM YY\")\n      };\n      this.props.addItemToShop(newItem);\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      result: \"\",\n      price: \"\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    this.props.getSuperMarkets();\n  }\n\n  shouldComponentUpdate(nextState, nextProps) {\n    if (this.state.result !== nextState.result) {\n      return true;\n    }\n\n    if (this.props.supermarket_selected !== nextProps.supermarket_selected) {\n      return true;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.supermarket_selected !== this.props.supermarket_selected) {\n      this.setState({\n        result: \"\"\n      });\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          result = _this$state2.result,\n          price = _this$state2.price;\n    var oldPrice = \"Be the first to register a price!\";\n    console.log(this.state);\n\n    if (this.props.superMarket[this.props.supermarket_selected.id].item !== undefined) {\n      if (this.props.superMarket[this.props.supermarket_selected.id].item[result.item_id]) {\n        const prevPrice = this.props.superMarket[this.props.supermarket_selected.id].item[result.item_id].price;\n        const prevDate = this.props.superMarket[this.props.supermarket_selected.id].item[result.item_id].date;\n        oldPrice = \"This was last registered at $\".concat(prevPrice, \" on \").concat(prevDate);\n      }\n    }\n\n    let cardImage = React.createElement(CardImg, {\n      top: true,\n      width: \"100%\",\n      src: this.state.result.image,\n      alt: \"Card image cap\",\n      style: {\n        maxWidth: \"150px\",\n        maxHeight: \"150px\",\n        margin: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n\n    if (this.state.result.image === null) {\n      cardImage = React.createElement(CardBody, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Be the first to upload a photo\"), React.createElement(Input, {\n        type: \"file\",\n        name: \"file\",\n        id: \"exampleFile\",\n        style: {\n          width: \"60%\",\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    }\n\n    let card = React.createElement(Card, {\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.result.brand_name), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.result.description)), cardImage, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, oldPrice), React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"price\",\n      placeholder: \"Price\",\n      onChange: this.onChange,\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      check: true,\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        size: 10,\n        offset: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Submit\"))))));\n\n    if (this.state.result === \"\") {\n      console.log(\"new item\");\n      card = null;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(SearchBox, {\n      result: this.result,\n      supermarket_selected: this.props.supermarket_selected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), card);\n  }\n\n}\nFormItem.propTypes = {\n  addItemToShop: PropTypes.func.isRequired,\n  getSuperMarkets: PropTypes.func.isRequired,\n  superMarket: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  superMarket: state.superMarket\n});\n\nexport default connect(mapStateToProps, {\n  getSuperMarkets,\n  addItemToShop\n})(FormItem);","map":{"version":3,"sources":["C:\\Users\\AlankHoang\\Desktop\\freecodeacademy\\shoppingBasket\\client\\src\\components\\AddItem\\FormItem.js"],"names":["React","Card","CardImg","CardText","CardBody","CardLink","CardTitle","CardSubtitle","Form","FormGroup","Label","Input","Col","Button","SearchBox","addItemToShop","getSuperMarkets","putPrice","connect","PropTypes","moment","FormItem","Component","constructor","props","result","setState","onSubmit","event","preventDefault","state","price","newItem","item_id","brand_name","timeStamp","format","superMarket_id","supermarket_selected","id","date","onChange","target","name","value","componentDidMount","console","log","shouldComponentUpdate","nextState","nextProps","componentDidUpdate","prevProps","render","oldPrice","superMarket","item","undefined","prevPrice","prevDate","cardImage","image","maxWidth","maxHeight","margin","width","card","marginTop","description","size","offset","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardLink,\r\n  CardTitle, CardSubtitle,Form, FormGroup, Label, Input,Col,Button } from 'reactstrap';\r\nimport SearchBox from \"./SearchBox\"\r\nimport {addItemToShop,getSuperMarkets,putPrice} from \"../../actions/SuperMarketActions\"\r\nimport {connect} from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\nimport moment from \"moment\"\r\n\r\nexport class FormItem extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n             result:\"\",\r\n             price:\"\"\r\n         }\r\n     }\r\n     componentDidMount(){\r\n\t\tconsole.log(\"componentDidMount\")\r\n\t\tthis.props.getSuperMarkets()\r\n\t}\r\n    shouldComponentUpdate(nextState,nextProps){\r\n         if(this.state.result!==nextState.result){\r\n             return true\r\n         }\r\n         if(this.props.supermarket_selected!==nextProps.supermarket_selected\t){\r\n\t\t\treturn true\r\n\t\t}\r\n    }\r\n    componentDidUpdate(prevProps){\r\n    \tif(prevProps.supermarket_selected!==this.props.supermarket_selected\t){\r\n    \t\tthis.setState({result:\"\"})\r\n    \t}\r\n    }\r\n\tresult = (result)=>{\r\n    \tthis.setState({result:result})\r\n\t}\r\n\tonSubmit=(event)=>{\r\n\t\tevent.preventDefault()\r\n\t\tconst {result,price}=this.state\r\n\t\tconst newItem = {\r\n\t\t\titem_id:result.item_id,\r\n\t\t\tbrand_name:result.brand_name,\t\r\n\t\t\tprice:price,\r\n\t\t\ttimeStamp:moment().format(),\r\n\t\t\tsuperMarket_id:this.props.supermarket_selected.id,\r\n\t\t\tdate:moment().format(\"ddd Do MMM YY\")\r\n\t\t}\r\n\t\tthis.props.addItemToShop(newItem)\t\t\r\n\t}\r\n\tonChange=(event)=>{\r\n\t\tthis.setState({\r\n\t\t\t[event.target.name]:event.target.value\r\n\t\t})\r\n\t}\r\n    render() {\r\n    \tconst {result,price}=this.state\r\n    \tvar oldPrice = \"Be the first to register a price!\"\r\n    \tconsole.log(this.state)\r\n\t\tif(this.props.superMarket[this.props.supermarket_selected.id].item!==undefined\t){\r\n\t\t\tif(this.props.superMarket[this.props.supermarket_selected.id].item[result.item_id]){\r\n\t\t\t\tconst prevPrice = this.props.superMarket[this.props.supermarket_selected.id].item[result.item_id].price\r\n\t\t\t\tconst prevDate = this.props.superMarket[this.props.supermarket_selected.id].item[result.item_id].date\r\n\t\t\t\toldPrice = `This was last registered at $${prevPrice} on ${prevDate}`\r\n    \t\t}\r\n\t\t}\r\n    \tlet cardImage = <CardImg top width=\"100%\" src={this.state.result.image} alt=\"Card image cap\"\r\n             \t\tstyle={{maxWidth:\"150px\",maxHeight:\"150px\",margin:\"auto\"}}/>\r\n        if(this.state.result.image===null){\r\n        \tcardImage=\r\n        \t    <CardBody className=\"text-center\"> \r\n        \t    \t<CardText>Be the first to upload a photo</CardText>\r\n        \t\t\t<Input type=\"file\" name=\"file\" id=\"exampleFile\"  style={{width:\"60%\",margin:\"auto\"}}/>\r\n        \t\t</CardBody>\r\n        }\t\t\r\n        let card =\r\n            <Card style={{marginTop:\"20px\"}}>\r\n            <CardBody className=\"text-center\">\r\n                <CardTitle>{this.state.result.brand_name}</CardTitle>\r\n                <CardSubtitle>{this.state.result.description}</CardSubtitle>\r\n                \r\n            </CardBody>\r\n           \t{cardImage}\r\n            <CardBody>\r\n                <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n                 <CardText>{oldPrice}</CardText>\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <FormGroup row className=\"text-center\">\r\n                        <Col sm={10}>\r\n                       \t\t<Input name=\"price\" placeholder=\"Price\" onChange={this.onChange\t} type=\"number\"/>\r\n                        </Col>\r\n                    </FormGroup>\r\n    \t\t\t\t<FormGroup check row>\r\n    \t\t\t\t\t<Col sm={{ size: 10, offset: 2 }}>\r\n    \t\t\t\t\t\t<Button>Submit</Button>\r\n     \t\t\t\t\t</Col>\r\n    \t\t\t\t</FormGroup>\r\n    \t\t\t</Form>\r\n    \t\t</CardBody>\r\n    \t\t</Card>\r\n    \t\t\tif (this.state.result===\"\"){\r\n       \t\t\t\tconsole.log(\"new item\")\r\n       \t\t\t\tcard=null\r\n    \t\t\t}\r\n\treturn (\r\n    \t<div>\r\n        \t<SearchBox\r\n            \tresult = {this.result}\r\n            \tsupermarket_selected={this.props.supermarket_selected}/>\r\n        \t{card}\r\n    \t</div>\r\n   \r\n\t\t);\r\n\t}\r\n}\r\n\r\nFormItem.propTypes = {\r\n\taddItemToShop:PropTypes.func.isRequired,\r\n\tgetSuperMarkets:PropTypes.func.isRequired,\r\n\tsuperMarket:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n\tsuperMarket:state.superMarket\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,{getSuperMarkets,addItemToShop})(FormItem)"]},"metadata":{},"sourceType":"module"}