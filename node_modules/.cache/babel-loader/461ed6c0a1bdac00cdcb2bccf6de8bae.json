{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlankHoang\\\\Desktop\\\\freecodeacademy\\\\shoppingBasket\\\\client\\\\src\\\\components\\\\AddShop\\\\InfoShop.js\";\nimport React, { Component } from \"react\";\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { connect } from \"react-redux\";\nimport { addItem } from \"../../actions/itemActions\";\nimport PropTypes from \"prop-types\";\nimport Geocode from \"react-geocode\";\nimport uuid from \"uuid\";\nGeocode.setApiKey(\"AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI\");\nGeocode.enableDebug();\n\nclass InfoShop extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      const address = this.state.address + \" \" + this.state.city + \" \" + this.state.state + \" \" + this.state.postcode;\n      console.log(address);\n      Geocode.fromAddress(address).then(response => {\n        const _response$results$0$g = response.results[0].geometry.location,\n              lat = _response$results$0$g.lat,\n              lng = _response$results$0$g.lng;\n        this.props.markerPosition({\n          lat: lat,\n          lng: lng\n        });\n        this.props.mapPosition({\n          lat: lat,\n          lng: lng\n        });\n        console.log(lat, lng);\n        const newMarker = {\n          id: uuid(),\n          lat: lat,\n          lng: lng,\n          name: this.state.name,\n          address: address,\n          score: \"\",\n          details: \"\"\n        };\n        this.props.addItem(newMarker);\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      address: '',\n      city: '',\n      state: '',\n      postcode: \"\",\n      completeAddress: \"\",\n      markerPresent: false\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"shouldComponentUpdate\", nextProps, nextState);\n\n    if (this.props.markerInfo.completeAddress !== nextProps.markerInfo.completeAddress) {\n      console.log(\"new address\");\n      return true;\n    } else if (this.state !== nextState) {\n      console.log(\"<chainging></chainging>\");\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.markerInfo.completeAddress !== prevProps.markerInfo.completeAddress) {\n      console.log(\"componentDidUpdate\", prevProps, this.props);\n      this.setState({\n        address: this.props.markerInfo.address,\n        city: this.props.markerInfo.city,\n        state: this.props.markerInfo.state,\n        postcode: this.props.markerInfo.postcode,\n        completeAddress: this.props.markerInfo.completeAddress,\n        markerPresent: true\n      });\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Row, {\n      form: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      onChange: this.onChange,\n      value: this.state.name,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Address\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"address\",\n      onChange: this.onChange,\n      value: this.state.address,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"City\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"city\",\n      onChange: this.onChange,\n      value: this.state.city,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      form: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"State\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"state\",\n      onChange: this.onChange,\n      value: this.state.state,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Postcode\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"postcode\",\n      onChange: this.onChange,\n      type: \"number\",\n      value: this.state.postcode,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })))), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Add Supermarket\"));\n  }\n\n}\n\nMap.propTypes = {\n  addItem: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.item\n});\n\nexport default connect(mapStateToProps, {\n  addItem\n})(Map);","map":{"version":3,"sources":["C:\\Users\\AlankHoang\\Desktop\\freecodeacademy\\shoppingBasket\\client\\src\\components\\AddShop\\InfoShop.js"],"names":["React","Component","Col","Row","Button","Form","FormGroup","Label","Input","FormText","connect","addItem","PropTypes","Geocode","uuid","setApiKey","enableDebug","InfoShop","constructor","props","onChange","event","setState","target","name","value","onSubmit","preventDefault","address","state","city","postcode","console","log","fromAddress","then","response","results","geometry","location","lat","lng","markerPosition","mapPosition","newMarker","id","score","details","completeAddress","markerPresent","shouldComponentUpdate","nextProps","nextState","markerInfo","componentDidUpdate","prevProps","render","marginTop","Map","propTypes","func","isRequired","item","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport {connect} from \"react-redux\"\r\nimport {addItem} from \"../../actions/itemActions\"\r\nimport PropTypes from \"prop-types\"\r\nimport Geocode from \"react-geocode\";\r\nimport uuid from \"uuid\"\r\nGeocode.setApiKey(\"AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI\");\r\nGeocode.enableDebug();\r\n\r\nclass InfoShop extends Component{\r\n\tconstructor( props ){\r\n\t\tsuper( props )\r\n\t\tthis.state = {\r\n\t\t\tname:\"\",\r\n\t\t\taddress: '',\r\n\t\t\tcity: '',\r\n\t\t\tstate: '',\r\n\t\t\tpostcode:\"\",\r\n\t\t\tcompleteAddress\t:\"\",\r\n\t\t\tmarkerPresent:false,\r\n\t\t}\r\n\t}\r\n\tshouldComponentUpdate(nextProps,nextState){\r\n\t\tconsole.log(\"shouldComponentUpdate\",nextProps,nextState)\r\n\t\tif (this.props.markerInfo.completeAddress!==nextProps.markerInfo.completeAddress){\r\n\t\t\tconsole.log(\"new address\")\r\n\t\t\treturn true\r\n\t\t}else if (this.state!==nextState){\r\n\t\t\tconsole.log(\"<chainging></chainging>\")\r\n\t\t\treturn true\r\n\t\t}else{return false}\r\n\r\n\t}\r\n\tcomponentDidUpdate(prevProps){\r\n\t\tif (this.props.markerInfo.completeAddress!==prevProps.markerInfo.completeAddress){\r\n\t\t\tconsole.log(\"componentDidUpdate\",prevProps,this.props)\r\n\t\t\tthis.setState({\r\n\t\t\t\taddress:this.props.markerInfo.address,\r\n\t\t\t\tcity:this.props.markerInfo.city,\r\n\t\t\t\tstate:this.props.markerInfo.state,\r\n\t\t\t\tpostcode:this.props.markerInfo.postcode,\r\n\t\t\t\tcompleteAddress:this.props.markerInfo.completeAddress,\r\n\t\t\t\tmarkerPresent:true,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tonChange = ( event ) => {\r\n  \t\tthis.setState({ [event.target.name]: event.target.value });\r\n \t};\r\n \tonSubmit = (event)=>{\t\r\n \t\tevent.preventDefault()\r\n \t\tconst address = this.state.address +\" \"+ this.state.city  +\" \"+ this.state.state  +\" \"+  this.state.postcode\r\n \t\tconsole.log(address)\r\n \t\tGeocode.fromAddress(address).then(\r\n\t\t\t\tresponse => {\r\n    \t\t\tconst { lat, lng } = response.results[0].geometry.location\r\n    \t\t\tthis.props.markerPosition({lat:lat,lng:lng})\r\n    \t\t\tthis.props.mapPosition({lat:lat,lng:lng})\r\n    \t\t\tconsole.log(lat,lng)\r\n    \t\t\tconst newMarker ={\r\n    \t\t\t\tid:uuid(),\r\n    \t\t\t\tlat:lat,\r\n    \t\t\t\tlng:lng,\r\n    \t\t\t\tname:this.state.name,\r\n    \t\t\t\taddress:address,\r\n    \t\t\t\tscore:\"\",\r\n    \t\t\t\tdetails:\"\",\r\n    \t\t\t}\r\n    \t\t\tthis.props.addItem(newMarker)}\r\n    \t\t\t )\r\n \t}\r\n\trender(){\r\n\t\tconsole.log(this.state)\r\n\t\treturn(\r\n\t\t<Form onSubmit={this.onSubmit} style={{marginTop:\"20px\"}} >\r\n\t\t\t<Row form>\r\n\t\t\t\t<Col md={12}>\r\n\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t<Label>Name</Label>\t\r\n\t\t\t\t\t\t<Input type=\"text\" name=\"name\"  onChange={ this.onChange } value={ this.state.name } required/>\t\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={12}>\r\n\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t<Label>Address</Label>\r\n\t\t\t\t\t\t\t<Input type=\"text\" name=\"address\"  onChange={ this.onChange } value={ this.state.address } required/>\t\t\t\t\t\t\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={12}>\r\n\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t<Label>City</Label>\r\n\t\t\t\t\t\t\t<Input type=\"text\" name=\"city\"  onChange={ this.onChange }  value={ this.state.city } required/>\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row form>\r\n\t\t\t\t<Col md={6}>\r\n\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t<Label>State</Label>\r\n\t\t\t\t\t\t<Input type=\"text\" name=\"state\"  onChange={ this.onChange } value={ this.state.state } required/>\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col md={6}>\r\n\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t<Label>Postcode</Label>\r\n\t\t\t\t\t\t<Input type=\"text\" name=\"postcode\"  onChange={ this.onChange } type=\"number\" value={ this.state.postcode } required/>\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Button>Add Supermarket</Button>\r\n\t\t</Form>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\n\r\nMap.propTypes = {\r\n\taddItem:PropTypes.func.isRequired,\r\n\titem:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n\titem:state.item\r\n})\r\n\r\nexport default connect(mapStateToProps,{addItem})(Map)"]},"metadata":{},"sourceType":"module"}