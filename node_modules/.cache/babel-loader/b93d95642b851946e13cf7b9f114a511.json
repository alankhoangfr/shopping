{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlankHoang\\\\Desktop\\\\freecodeacademy\\\\shoppingBasket\\\\client\\\\src\\\\components\\\\Compare\\\\ItemDisplay.js\";\nimport React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardLink, CardTitle, CardSubtitle, Form, FormGroup, Label, Input, Col, Button } from 'reactstrap';\nimport SearchBox from \"../AddItem/SearchBox\";\nimport { addItemToShop, getSuperMarkets, putPrice } from \"../../actions/SuperMarketActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport Cleave from 'cleave.js/react';\nimport { Alert } from 'reactstrap';\nimport grocery_sampleJSON from \"../../Data/grocery_sampleJSON.json\";\nconst source = grocery_sampleJSON;\nexport class ItemDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.result = result => {\n      this.setState({\n        result: result\n      });\n    };\n\n    this.onStartDrag = (resultInfo, event) => {\n      console.log(\"drag START\", resultInfo);\n      this.props.itemOnDrag(resultInfo);\n    };\n\n    this.state = {\n      result: \"\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    this.props.getSuperMarkets();\n  }\n\n  shouldComponentUpdate(nextState, nextProps) {\n    if (this.state.result !== nextState.result) {\n      return true;\n    }\n\n    if (this.props.supermarket_selected !== nextProps.supermarket_selected) {\n      return true;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.supermarket_selected !== this.props.supermarket_selected) {\n      this.setState({\n        result: \"\"\n      });\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          result = _this$state.result,\n          price = _this$state.price;\n    let cardImage = React.createElement(CardImg, {\n      top: true,\n      width: \"100%\",\n      src: this.state.result.image,\n      alt: \"Card image cap\",\n      style: {\n        maxWidth: \"150px\",\n        maxHeight: \"150px\",\n        margin: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n\n    if (this.state.result.image === null) {\n      cardImage = React.createElement(CardBody, {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Be the first to upload a photo\"), React.createElement(Input, {\n        type: \"file\",\n        name: \"file\",\n        id: \"exampleFile\",\n        style: {\n          width: \"60%\",\n          margin: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    }\n\n    let card = React.createElement(Card, {\n      style: {\n        marginTop: \"20px\"\n      },\n      draggable: true,\n      onDragStart: this.onStartDrag.bind(this, {\n        result: this.state.result,\n        price: price\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.result.brand_name), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.result.description)), cardImage, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.result.price)));\n\n    if (this.state.result === \"\") {\n      console.log(\"new item\");\n      card = null;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Search an item\"), React.createElement(SearchBox, {\n      result: this.result,\n      supermarket_selected: this.props.supermarket_selected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), card);\n  }\n\n}\nItemDisplay.propTypes = {\n  addItemToShop: PropTypes.func.isRequired,\n  getSuperMarkets: PropTypes.func.isRequired,\n  superMarket: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  superMarket: state.superMarket\n});\n\nexport default connect(mapStateToProps, {\n  getSuperMarkets,\n  addItemToShop\n})(ItemDisplay);","map":{"version":3,"sources":["C:\\Users\\AlankHoang\\Desktop\\freecodeacademy\\shoppingBasket\\client\\src\\components\\Compare\\ItemDisplay.js"],"names":["React","Card","CardImg","CardText","CardBody","CardLink","CardTitle","CardSubtitle","Form","FormGroup","Label","Input","Col","Button","SearchBox","addItemToShop","getSuperMarkets","putPrice","connect","PropTypes","moment","Cleave","Alert","grocery_sampleJSON","source","ItemDisplay","Component","constructor","props","result","setState","onStartDrag","resultInfo","event","console","log","itemOnDrag","state","componentDidMount","shouldComponentUpdate","nextState","nextProps","supermarket_selected","componentDidUpdate","prevProps","render","price","cardImage","image","maxWidth","maxHeight","margin","width","card","marginTop","bind","brand_name","description","propTypes","func","isRequired","superMarket","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardLink,\r\n  CardTitle, CardSubtitle,Form, FormGroup, Label, Input,Col,Button } from 'reactstrap';\r\nimport SearchBox from \"../AddItem/SearchBox\"\r\nimport {addItemToShop,getSuperMarkets,putPrice} from \"../../actions/SuperMarketActions\"\r\nimport {connect} from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\nimport moment from \"moment\"\r\nimport Cleave from 'cleave.js/react';\t\r\nimport { Alert } from 'reactstrap';\r\nimport grocery_sampleJSON from \"../../Data/grocery_sampleJSON.json\"\r\n\r\nconst source = grocery_sampleJSON\r\n\r\nexport class ItemDisplay extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n             result:\"\",\r\n         }\r\n     }\r\n\r\n     componentDidMount(){\r\n\t\tconsole.log(\"componentDidMount\")\r\n\t\tthis.props.getSuperMarkets()\r\n\t}\r\n    shouldComponentUpdate(nextState,nextProps){\r\n         if(this.state.result!==nextState.result){\r\n             return true\r\n         }\r\n         if(this.props.supermarket_selected!==nextProps.supermarket_selected\t){\r\n\t\t\treturn true\r\n\t\t}\r\n    }\r\n    componentDidUpdate(prevProps){\r\n    \tif(prevProps.supermarket_selected!==this.props.supermarket_selected\t){\r\n    \t\tthis.setState({result:\"\"})\r\n    \t}\r\n    }\r\n\tresult = (result)=>{\r\n    \tthis.setState({result:result})\r\n\t}\r\n\r\n\tonStartDrag=(resultInfo,event)=>{\r\n\t\tconsole.log(\"drag START\",resultInfo)\r\n\t\tthis.props.itemOnDrag(resultInfo)\r\n\t}\r\n    render() {\r\n    \tconst {result,price}=this.state\r\n    \tlet cardImage = <CardImg top width=\"100%\" src={this.state.result.image} alt=\"Card image cap\"\r\n             \t\tstyle={{maxWidth:\"150px\",maxHeight:\"150px\",margin:\"auto\"}}/>\r\n        if(this.state.result.image===null){\r\n        \tcardImage=\r\n        \t    <CardBody className=\"text-center\"> \r\n        \t    \t<CardText>Be the first to upload a photo</CardText>\r\n        \t\t\t<Input type=\"file\" name=\"file\" id=\"exampleFile\"  style={{width:\"60%\",margin:\"auto\"}}/>\r\n        \t\t</CardBody>\r\n        }\t\t\r\n         let card = \r\n            <Card style={{marginTop:\"20px\"}} draggable={true} onDragStart={this.onStartDrag.bind(this,{result:this.state.result,price:price})}>\r\n                <CardBody className=\"text-center\">\r\n                    <CardTitle>{this.state.result.brand_name}</CardTitle>\r\n                    <CardSubtitle>{this.state.result.description}</CardSubtitle>\r\n                    \r\n                </CardBody>\r\n                   {cardImage}\r\n                <CardBody>\r\n                    <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n                     <CardText>{this.state.result.price}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n    \t\t\tif (this.state.result===\"\"){\r\n       \t\t\t\tconsole.log(\"new item\")\r\n       \t\t\t\tcard=null\r\n    \t\t\t}\r\n\treturn (\r\n    \t<div>\r\n    \t\t<h1 style={{marginTop:\"20px\"}}>Search an item</h1>\r\n        \t<SearchBox\r\n            \tresult = {this.result}\r\n            \tsupermarket_selected={this.props.supermarket_selected}/>\r\n        \t{card}\r\n    \t</div>\r\n   \r\n\t\t);\r\n\t}\r\n}\r\n\r\nItemDisplay.propTypes = {\r\n\taddItemToShop:PropTypes.func.isRequired,\r\n\tgetSuperMarkets:PropTypes.func.isRequired,\r\n\tsuperMarket:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n\tsuperMarket:state.superMarket\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps,{getSuperMarkets,addItemToShop})(ItemDisplay)"]},"metadata":{},"sourceType":"module"}