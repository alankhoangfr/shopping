{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlankHoang\\\\Desktop\\\\freecodeacademy\\\\shoppingBasket\\\\client\\\\src\\\\components\\\\AddItem\\\\SearchBox.js\";\nimport Brand from \"../../Data/brand.json\";\nimport React, { Component } from 'react';\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react';\nconst initialState = {\n  isLoading: false,\n  results: [],\n  value: ''\n};\nexport class SearchBox extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.handleResultSelect = (e, {\n      result\n    }) => this.setState({\n      value: result.title\n    });\n\n    this.handleSearchChange = (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(initialState);\n        const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n\n        const isMatch = result => re.test(result.title);\n\n        this.setState({\n          isLoading: false,\n          results: _.filter(Brand, isMatch)\n        });\n      }, 300);\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          value = _this$state.value,\n          results = _this$state.results;\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Search, Object.assign({\n      loading: isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      results: results,\n      value: value\n    }, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }))), React.createElement(Grid.Column, {\n      width: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"State\"), React.createElement(\"pre\", {\n      style: {\n        overflowX: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, JSON.stringify(this.state, null, 2)), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Options\"), React.createElement(\"pre\", {\n      style: {\n        overflowX: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, JSON.stringify(Brand, null, 2)))));\n  }\n\n}\nexport default SearchBox;","map":{"version":3,"sources":["C:\\Users\\AlankHoang\\Desktop\\freecodeacademy\\shoppingBasket\\client\\src\\components\\AddItem\\SearchBox.js"],"names":["Brand","React","Component","Search","Grid","Header","Segment","initialState","isLoading","results","value","SearchBox","state","handleResultSelect","e","result","setState","title","handleSearchChange","setTimeout","length","re","RegExp","_","escapeRegExp","isMatch","test","filter","render","debounce","leading","props","overflowX","JSON","stringify"],"mappings":"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","sourcesContent":["import Brand from \"../../Data/brand.json\"\r\nimport React, { Component } from 'react'\r\nimport { Search, Grid, Header, Segment } from 'semantic-ui-react'\r\n\r\nconst initialState = { isLoading: false, results: [], value: '' }\r\n\r\n\r\nexport  class SearchBox extends Component {\r\n  state = initialState\r\n\r\n  handleResultSelect = (e, { result }) => this.setState({ value: result.title })\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ isLoading: true, value })\r\n\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.setState(initialState)\r\n\r\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\r\n      const isMatch = result => re.test(result.title)\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        results: _.filter(Brand, isMatch),\r\n      })\r\n    }, 300)\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, value, results } = this.state\r\n\r\n    return (\r\n      <Grid>\r\n        <Grid.Column width={6}>\r\n          <Search\r\n            loading={isLoading}\r\n            onResultSelect={this.handleResultSelect}\r\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n              leading: true,\r\n            })}\r\n            results={results}\r\n            value={value}\r\n            {...this.props}\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={10}>\r\n          <Segment>\r\n            <Header>State</Header>\r\n            <pre style={{ overflowX: 'auto' }}>\r\n              {JSON.stringify(this.state, null, 2)}\r\n            </pre>\r\n            <Header>Options</Header>\r\n            <pre style={{ overflowX: 'auto' }}>\r\n              {JSON.stringify(Brand, null, 2)}\r\n            </pre>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\nexport default SearchBox "]},"metadata":{},"sourceType":"module"}