{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlankHoang\\\\Desktop\\\\freecodeacademy\\\\shoppingBasket\\\\client\\\\src\\\\components\\\\SearchShop\\\\Map.js\";\nimport React, { Component } from 'react';\nimport { withGoogleMap, GoogleMap, withScriptjs, Marker, InfoWindow } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport uuid from \"uuid\";\nimport { connect } from \"react-redux\";\nimport { getSuperMarkets } from \"../../actions/SuperMarketActions\";\nimport MarkerShop from \"./MarkerShop\";\nimport PropTypes from \"prop-types\";\nGeocode.setApiKey('AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI');\nGeocode.enableDebug();\nexport class Map extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updating_marker = () => {\n      console.log(\"updating marker>\");\n\n      if (this.state.moving === true) {\n        var markers1 = this.insideBound_bound(this.props.superMarket.markers, this.state.bound);\n        this.setState({\n          markers1: markers1,\n          moving: false,\n          input: false,\n          maploading: false\n        });\n      } else {\n        markers1 = this.insideBound(this.props.superMarket.markers, this.state.movePosition);\n        this.setState({\n          markers1: markers1,\n          moving: false,\n          input: false,\n          maploading: false\n        });\n      }\n    };\n\n    this.check_markers1 = (array1, array2) => {\n      var arr1 = [];\n      var arr2 = [];\n      array1.map(elem => {\n        arr1.push(elem.id);\n      });\n      array2.map(elem => {\n        arr2.push(elem.id);\n      });\n\n      if (arr1.sort().toString() == arr2.sort().toString()) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.onPlaceSelected = (place, event) => {\n      console.log(place);\n\n      if (place.name !== undefined) {\n        Geocode.fromAddress(place.name).then(response => {\n          const _response$results$0$g = response.results[0].geometry.location,\n                lat = _response$results$0$g.lat,\n                lng = _response$results$0$g.lng;\n          console.log(lat, lng);\n          var markers1 = this.insideBound(this.props.superMarket.markers, response.results[0].geometry.location);\n\n          if (lat === undefined) {\n            return null;\n          }\n\n          this.setState({\n            mapPosition: {\n              lat: lat,\n              lng: lng\n            },\n            markerPosition: {\n              lat: lat,\n              lng: lng\n            },\n            movePosition: {\n              lat: lat,\n              lng: lng\n            },\n            zoom: 11,\n            markers1: markers1,\n            input: true,\n            moving: false\n          });\n        });\n      } else {\n        const name = place.formatted_name,\n              latValue = place.geometry.location.lat(),\n              lngValue = place.geometry.location.lng();\n        var markers1 = this.insideBound(this.props.superMarket.markers, place.geometry.location); // Set these values in the state.\n\n        this.setState({\n          mapPosition: {\n            lat: latValue,\n            lng: lngValue\n          },\n          markerPosition: {\n            lat: latValue,\n            lng: lngValue\n          },\n          movePosition: {\n            lat: latValue,\n            lng: lngValue\n          },\n          zoom: 11,\n          markers1: markers1,\n          input: true,\n          moving: false\n        });\n      }\n\n      this.props.markerSelected(\"\");\n      return;\n    };\n\n    this.mapmoved = () => {\n      console.log(\"mapMoved:\" + JSON.stringify(this.state.map.getBounds()));\n      var markers1 = this.insideBound_bound(this.props.superMarket.markers, JSON.stringify(this.state.map.getBounds()));\n      this.setState({\n        bound: JSON.stringify(this.state.map.getBounds()),\n        movePosition: {\n          lat: this.state.map.getCenter().lat(),\n          lng: this.state.map.getCenter().lng()\n        },\n        mapPosition: {\n          lat: this.state.map.getCenter().lat(),\n          lng: this.state.map.getCenter().lng()\n        },\n        markers1: markers1,\n        moving: true\n      });\n    };\n\n    this.maploaded = mapRef => {\n      console.log(\"maploaded\");\n\n      if (!mapRef) {\n        return;\n      }\n\n      this.setState({\n        map: mapRef,\n        maploading: true\n      });\n    };\n\n    this.onZoom = () => {\n      console.log(\"zoom:\" + this.state.map.getCenter(), this.state.map.getZoom());\n      var markers1 = this.insideBound_bound(this.props.superMarket.markers, JSON.stringify(this.state.map.getBounds()));\n      this.setState({\n        bound: JSON.stringify(this.state.map.getBounds()),\n        movePosition: {\n          lat: this.state.map.getCenter().lat(),\n          lng: this.state.map.getCenter().lng()\n        },\n        mapPosition: {\n          lat: this.state.map.getCenter().lat(),\n          lng: this.state.map.getCenter().lng()\n        },\n        markers1: markers1,\n        zoom: this.state.map.getZoom(),\n        moving: true\n      });\n    };\n\n    this.insideBound = (shops, center) => {\n      if (center != null && shops != null) {\n        var result = [];\n        shops.map(shop => {\n          if (shop.lat > center.lat - 0.2 && shop.lat < center.lat + 0.2 && shop.lng > center.lng - 0.2 && shop.lng < center.lng + 0.2) {\n            result.push(shop);\n          }\n        });\n        console.log(result, \"lets look center\", center, shops);\n        this.props.markersInBound(result);\n        return result;\n      } else {\n        return [];\n      }\n    };\n\n    this.insideBound_bound = (shops, bound) => {\n      if (bound != null && shops != null) {\n        var result = [];\n        shops.map(shop => {\n          if (shop.lat > bound.south && shop.lat < bound.north && shop.lng > bound.west && shop.lng < bound.east) {\n            result.push(shop);\n          }\n        });\n        console.log(result, \"lets look bound\", bound, shops);\n        this.props.markersInBound(result);\n        return result;\n      } else {\n        return [];\n      }\n    };\n\n    this.markerSelected = markerObject => {\n      this.props.markerSelected(markerObject);\n    };\n\n    this.state = {\n      bound: null,\n      input: \"\",\n      mapPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      },\n      markerPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      },\n      movePosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      },\n      map: null,\n      markers1: [],\n      zoom: 10,\n      moving: false,\n      maploading: false\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    this.props.getSuperMarkets();\n    this.updating_marker();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"should Componeent update\", nextState, this.state, nextProps, this.props);\n\n    if (this.check_markers1(nextState.markers1, this.state.markers1) === false) {\n      console.log(\"change\");\n      return true;\n    } else if (nextState.input === true) {\n      console.log(\"change position\");\n      return true;\n    } else if (nextProps.shopSelected !== this.props.shopSelected) {\n      console.log(\"new marker selected\");\n      return true;\n    } else if (this.check_markers1(nextState.markers1, this.state.markers1) === true) {\n      console.log(\"no change\");\n      return false;\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(\"componentDidUpdate\", prevState, this.state, prevProps, this.props, snapshot);\n\n    if (this.props.shopSelected !== prevProps.shopSelected) {\n      return null;\n    } else {\n      this.updating_marker();\n    }\n  }\n\n  render() {\n    console.log(this.state, \"rendering state\");\n    console.log(this.props, \"rendering props\");\n    const AsyncMap = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n      ref: this.maploaded,\n      zoom: this.state.zoom,\n      defaultCenter: {\n        lat: this.props.lat,\n        lng: this.props.lng\n      },\n      center: {\n        lat: this.state.mapPosition.lat,\n        lng: this.state.mapPosition.lng\n      },\n      onDragEnd: this.mapmoved,\n      onZoomChanged: this.onZoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      style: {\n        width: '200%',\n        height: '40px',\n        paddingLeft: '16px',\n        margin: \"2px auto 20px auto\"\n      },\n      onPlaceSelected: this.onPlaceSelected,\n      types: ['(regions)'],\n      placeholder: \"Enter and select location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), React.createElement(Marker, {\n      draggable: true,\n      position: {\n        lat: this.state.markerPosition.lat,\n        lng: this.state.markerPosition.lng\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }), React.createElement(MarkerShop, {\n      markers1: this.state.markers1,\n      markerSelected: this.markerSelected,\n      shopSelected: this.props.shopSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }))));\n    let map;\n    map = React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(AsyncMap, {\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI&libraries=places\",\n      loadingElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }),\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: this.props.height,\n          display: \"flex\",\n          flexDirection: \"column-reverse\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, map);\n  }\n\n}\nMap.propTypes = {\n  getSuperMarkets: PropTypes.func.isRequired,\n  superMarket: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  superMarket: state.superMarket\n});\n\nexport default connect(mapStateToProps, {\n  getSuperMarkets\n})(Map);","map":{"version":3,"sources":["C:\\Users\\AlankHoang\\Desktop\\freecodeacademy\\shoppingBasket\\client\\src\\components\\SearchShop\\Map.js"],"names":["React","Component","withGoogleMap","GoogleMap","withScriptjs","Marker","InfoWindow","Geocode","Autocomplete","uuid","connect","getSuperMarkets","MarkerShop","PropTypes","setApiKey","enableDebug","Map","constructor","props","updating_marker","console","log","state","moving","markers1","insideBound_bound","superMarket","markers","bound","setState","input","maploading","insideBound","movePosition","check_markers1","array1","array2","arr1","arr2","map","elem","push","id","sort","toString","onPlaceSelected","place","event","name","undefined","fromAddress","then","response","results","geometry","location","lat","lng","mapPosition","markerPosition","zoom","formatted_name","latValue","lngValue","markerSelected","mapmoved","JSON","stringify","getBounds","getCenter","maploaded","mapRef","onZoom","getZoom","shops","center","result","shop","markersInBound","south","north","west","east","markerObject","componentDidMount","shouldComponentUpdate","nextProps","nextState","shopSelected","componentDidUpdate","prevProps","prevState","snapshot","render","AsyncMap","width","height","paddingLeft","margin","display","flexDirection","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { withGoogleMap, GoogleMap, withScriptjs, Marker,InfoWindow  } from \"react-google-maps\";\r\nimport Geocode from \"react-geocode\"\r\nimport Autocomplete from 'react-google-autocomplete';\r\nimport uuid from \"uuid\"\r\nimport {connect} from \"react-redux\"\r\nimport {getSuperMarkets} from \"../../actions/SuperMarketActions\"\r\nimport MarkerShop from \"./MarkerShop\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nGeocode.setApiKey('AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI');\r\nGeocode.enableDebug();\r\n\r\n\r\nexport class Map extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tbound:null,\r\n\t\t\tinput:\"\",\r\n\t\t\tmapPosition:{\r\n\t\t\t\tlat: this.props.center.lat,\r\n\t\t\t\tlng: this.props.center.lng\r\n\t\t\t},\r\n\t\t\tmarkerPosition:{\r\n\t\t\t\tlat:this.props.center.lat,\r\n\t\t\t\tlng:this.props.center.lng\r\n\t\t\t},\r\n\t\t\tmovePosition:{\r\n\t\t\t\tlat:this.props.center.lat,\r\n\t\t\t\tlng:this.props.center.lng\t\t\r\n\t\t\t},\r\n\t\t\tmap:null,\r\n\t\t\tmarkers1:[],\r\n\t\t\tzoom:10,\r\n\t\t\tmoving:false,\r\n\t\t\tmaploading:false,\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tconsole.log(\"componentDidMount\")\r\n\t\tthis.props.getSuperMarkets()\r\n\t\tthis.updating_marker()\r\n\r\n\t}\r\n\tupdating_marker = ()=>{\r\n\t\tconsole.log(\"updating marker>\")\r\n\t\tif (this.state.moving===true){\r\n\t\t\tvar markers1 = this.insideBound_bound(this.props.superMarket.markers,this.state.bound)\r\n\t\t\tthis.setState({\r\n\t\t\t\tmarkers1:markers1,\r\n\t\t\t\tmoving:false,\r\n\t\t\t\tinput:false,\r\n\t\t\t\tmaploading:false,\r\n\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tmarkers1 = this.insideBound(this.props.superMarket.markers,this.state.movePosition)\r\n\t\t\tthis.setState({\r\n\t\t\t\tmarkers1:markers1,\r\n\t\t\t\tmoving:false,\r\n\t\t\t\tinput:false,\r\n\t\t\t\tmaploading:false,\r\n\r\n\t\t\t})\t\t\r\n\t\t}\r\n\t\t}\r\n\tshouldComponentUpdate( nextProps, nextState ){\t\r\n\t\tconsole.log(\"should Componeent update\", nextState, this.state,nextProps,this.props)\r\n\t\tif (this.check_markers1(nextState.markers1,this.state.markers1)===false){\r\n\t\t\tconsole.log(\"change\")\r\n\t\t\treturn true\r\n\t\t}\t\t\r\n\t\telse if(nextState.input===true){\r\n\t\t\tconsole.log(\"change position\")\r\n\t\t\treturn true\r\n\t\t}\r\n\t\telse if(nextProps.shopSelected !== this.props.shopSelected){\r\n\t\t\tconsole.log(\"new marker selected\")\r\n\t\t\treturn true\r\n\t\t}\r\n\t\telse if (this.check_markers1(nextState.markers1,this.state.markers1)===true){\r\n\t\t\tconsole.log(\"no change\")\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot){\r\n\t\tconsole.log(\"componentDidUpdate\",prevState,this.state,prevProps,this.props,snapshot)\r\n\t\tif(this.props.shopSelected!==prevProps.shopSelected){\r\n\t\t\treturn null\r\n\t\t}else{\r\n\t\t\tthis.updating_marker()\r\n\t\t}\r\n\r\n\t}\r\n\tcheck_markers1=(array1,array2) => {\r\n\t\tvar arr1 = []\r\n\t\tvar arr2 = []\r\n\t\tarray1.map((elem)=>{\r\n\t\t\tarr1.push(elem.id)\r\n\t\t})\r\n\t\tarray2.map((elem)=>{\r\n\t\t\tarr2.push(elem.id)\r\n\t\t})\r\n\t\tif (arr1.sort().toString()==arr2.sort().toString()){\t\r\n\t\t\treturn true\r\n\t\t}else \r\n\t\t\t{return false}\r\n\t\t}\r\n\tonPlaceSelected = ( place,event ) => {\r\n\t\tconsole.log(place)\r\n\t\tif (place.name!==undefined){\r\n\t\t\tGeocode.fromAddress(place.name).then(\r\n\t\t\t\tresponse => {\r\n    \t\t\tconst { lat, lng } = response.results[0].geometry.location\r\n    \t\t\tconsole.log(lat, lng)\r\n    \t\t\tvar markers1 = this.insideBound(this.props.superMarket.markers,response.results[0].geometry.location)\r\n    \t\t\tif (lat ===undefined){\r\n    \t\t\t\treturn null\r\n    \t\t\t}\r\n    \t\t\tthis.setState({\r\n\t\t\t\t\tmapPosition: {\r\n\t\t\t\t\t\tlat: lat,\r\n\t\t\t\t\t\tlng: lng\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmarkerPosition: {\r\n\t\t\t\t\t\tlat: lat,\r\n\t\t\t\t\t\tlng: lng\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmovePosition: {\r\n\t\t\t\t\t\tlat: lat,\r\n\t\t\t\t\t\tlng: lng\r\n\t\t\t\t},\r\n\t\t\t\t\tzoom:11,\r\n\t\t\t\t\tmarkers1:markers1,\r\n\t\t\t\t\tinput:true,\r\n\t\t\t\t\tmoving:false,\r\n\t\t\t})\r\n    \t\t})\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconst name = place.formatted_name,\r\n\t\t\tlatValue = place.geometry.location.lat(),\r\n\t\t\tlngValue = place.geometry.location.lng();\r\n\t\t\tvar markers1 = this.insideBound(this.props.superMarket.markers,place.geometry.location)\r\n\t\t\t// Set these values in the state.\r\n\t\t\tthis.setState({\r\n\t\t\t\tmapPosition: {\r\n\t\t\t\t\tlat: latValue,\r\n\t\t\t\t\tlng: lngValue\r\n\t\t\t\t},\r\n\t\t\t\tmarkerPosition: {\r\n\t\t\t\t\tlat: latValue,\r\n\t\t\t\t\tlng: lngValue\r\n\t\t\t\t},\r\n\t\t\t\tmovePosition: {\r\n\t\t\t\t\tlat: latValue,\r\n\t\t\t\t\tlng: lngValue\r\n\t\t\t\t},\r\n\t\t\t\tzoom:11,\r\n\t\t\t\tmarkers1:markers1,\r\n\t\t\t\tinput:true,\r\n\t\t\t\tmoving:false,\r\n\t\t\t})\r\n\t\t}\r\n\tthis.props.markerSelected(\"\")\r\n\treturn\r\n\t};\r\n\tmapmoved=()=>{\r\n\t\tconsole.log(\"mapMoved:\"+JSON.stringify(this.state.map.getBounds()))\r\n\t\tvar markers1 = this.insideBound_bound(this.props.superMarket.markers,JSON.stringify(this.state.map.getBounds()))\r\n\t\tthis.setState({\r\n\t\t\tbound:JSON.stringify(this.state.map.getBounds()),\r\n\t\t\tmovePosition: {\r\n\t\t\t\tlat: this.state.map.getCenter().lat(),\r\n\t\t\t\tlng: this.state.map.getCenter().lng()\r\n\t\t\t},\r\n\t\t\tmapPosition: {\r\n\t\t\t\tlat: this.state.map.getCenter().lat(),\r\n\t\t\t\tlng: this.state.map.getCenter().lng()\r\n\t\t\t},\r\n\t\t\tmarkers1:markers1 ,\r\n\t\t\tmoving:true\t\r\n\t\t})\r\n\t}\r\n\tmaploaded=(mapRef)=>{\r\n\t\tconsole.log(\"maploaded\")\r\n\t\tif(!mapRef){\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tmap:mapRef,\r\n\t\t\tmaploading:true})\t\r\n\t}\r\n\tonZoom = ()=>{\r\n\t\tconsole.log(\"zoom:\"+this.state.map.getCenter(),this.state.map.getZoom())\r\n\t\tvar markers1 = this.insideBound_bound(this.props.superMarket.markers,JSON.stringify(this.state.map.getBounds()))\r\n\t\tthis.setState({\r\n\t\t\tbound:JSON.stringify(this.state.map.getBounds()),\r\n\t\t\tmovePosition: {\r\n\t\t\t\tlat: this.state.map.getCenter().lat(),\r\n\t\t\t\tlng: this.state.map.getCenter().lng()\r\n\t\t\t},\r\n\t\t\tmapPosition: {\r\n\t\t\t\tlat: this.state.map.getCenter().lat(),\r\n\t\t\t\tlng: this.state.map.getCenter().lng()\r\n\t\t\t},\r\n\t\t\tmarkers1:markers1,\r\n\t\t\tzoom:this.state.map.getZoom(),\r\n\t\t\tmoving:true\t\r\n\t\t})\r\n\t}\r\n\tinsideBound = (shops,center)=>{\r\n\t\tif (center!=null&&shops!=null){\r\n\t\t\tvar result = []\r\n\t\t\tshops.map((shop)=>{\r\n\t\t\t\tif (shop.lat>center.lat-0.2 && shop.lat<center.lat+0.2 && shop.lng>center.lng-0.2 && shop.lng<center.lng+0.2){\r\n\t\t\t\t\tresult.push(shop)}\t\r\n\t\t\t})\r\n\t\t\tconsole.log(result,\"lets look center\",center,shops)\t\r\n\t\t\tthis.props.markersInBound(result)\t\t\r\n\t\t\treturn result\t\t\t\r\n\t\t}else{return []}\t\t\r\n\t}\r\n\tinsideBound_bound = (shops,bound)=>{\r\n\t\tif (bound!=null&&shops!=null){\r\n\t\t\tvar result = []\t\r\n\t\t\tshops.map((shop)=>{\r\n\t\t\t\tif (shop.lat>bound.south && shop.lat<bound.north && shop.lng>bound.west && shop.lng<bound.east){\r\n\t\t\t\t\tresult.push(shop)}\t\r\n\t\t\t})\r\n\t\t\tconsole.log(result,\"lets look bound\",bound,shops)\t\t\r\n\t\t\tthis.props.markersInBound(result)\t\t\r\n\t\t\treturn result\t\t\t\r\n\t\t}else{return []}\r\n\t}\r\n\tmarkerSelected =(markerObject)=>{\r\n\t\tthis.props.markerSelected(markerObject)\r\n\t}\r\n\t\r\n\trender() {\r\n\tconsole.log(this.state,\"rendering state\")\r\n\tconsole.log(this.props,\"rendering props\")\r\n\t\r\n\tconst AsyncMap = withScriptjs(\r\n\t\twithGoogleMap(\r\n\t\t\tprops => (\r\n\t\t\t\t<GoogleMap \r\n\t\t\t\tref = {this.maploaded}\r\n\t\t\t\tzoom={this.state.zoom}\r\n\t\t\t\tdefaultCenter={{ lat: this.props.lat, lng: this.props.lng }}\r\n\t\t\t\tcenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\r\n\t\t\t\tonDragEnd={this.mapmoved}\r\n\t\t\t\tonZoomChanged = {this.onZoom}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: '200%',\r\n\t\t\t\t\t\theight: '40px',\r\n\t\t\t\t\t\tpaddingLeft: '16px',\r\n\t\t\t\t\t\tmargin:\"2px auto 20px auto\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonPlaceSelected={ this.onPlaceSelected }\r\n\t\t\t\t\t\ttypes={['(regions)']}\r\n\t\t\t\t\t\tplaceholder={\"Enter and select location\"}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Marker \r\n\t\t\t\t\t\tdraggable={true}\r\n\t\t\t\t\t\tposition={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<MarkerShop\r\n\t\t\t\t\t\tmarkers1={this.state.markers1}\r\n\t\t\t\t\t\tmarkerSelected = {this.markerSelected}\r\n\t\t\t\t\t\tshopSelected = {this.props.shopSelected}/>\r\n\t\t\t\t</GoogleMap>\r\n\t\t\t)\r\n\t\t)\r\n\t)\r\n\tlet map\r\n\tmap =  <div style={{width:\"100%\"}} >\r\n\t\t\t<AsyncMap\r\n\t\t\t\tgoogleMapURL= \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI&libraries=places\"\r\n\t\t\t\tloadingElement={\r\n\t\t\t\t <div style={{ height: `100%` }} />\r\n\t\t\t\t}\r\n\t\t\t\tcontainerElement={\r\n\t\t\t\t <div style={{ height: this.props.height,\r\n  \t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n  \t\t\t\t\t\t\t\tflexDirection: \"column-reverse\"}} />\r\n\t\t\t\t}\r\n\t\t\t\tmapElement={\r\n\t\t\t\t <div style={{ height: `100%` }} />\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t{map}\r\n\t\t</React.Fragment> \r\n\t)\r\n  }\r\n}\r\n\r\nMap.propTypes = {\r\n\tgetSuperMarkets:PropTypes.func.isRequired,\r\n\tsuperMarket:PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n\tsuperMarket:state.superMarket\r\n})\r\n\r\nexport default connect(mapStateToProps,{getSuperMarkets})(Map)"]},"metadata":{},"sourceType":"module"}