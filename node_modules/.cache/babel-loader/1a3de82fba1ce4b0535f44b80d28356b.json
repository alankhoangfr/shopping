{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AlankHoang\\\\Desktop\\\\freecodeacademy\\\\shoppingBasket\\\\client\\\\src\\\\components\\\\Map.js\";\nimport React, { Component } from 'react';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nGeocode.setApiKey('AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI');\nGeocode.enableDebug();\nexport class Map extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mapPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      },\n      markerPosition: {\n        lat: this.props.center.lat,\n        lng: this.props.center.lng\n      },\n      map: null\n    };\n\n    this.onPlaceSelected = (place, event) => {\n      console.log(place);\n\n      if (place.name !== undefined) {\n        Geocode.fromAddress(place.name).then(response => {\n          const _response$results$0$g = response.results[0].geometry.location,\n                lat = _response$results$0$g.lat,\n                lng = _response$results$0$g.lng;\n          console.log(lat, lng);\n\n          if (lat === undefined) {\n            return null;\n          }\n\n          this.setState({\n            mapPosition: {\n              lat: lat,\n              lng: lng\n            },\n            markerPosition: {\n              lat: lat,\n              lng: lng\n            }\n          });\n        });\n        return;\n      } else {\n        const address = place.formatted_address,\n              latValue = place.geometry.location.lat(),\n              lngValue = place.geometry.location.lng(); // Set these values in the state.\n\n        this.setState({\n          mapPosition: {\n            lat: latValue,\n            lng: lngValue\n          },\n          markerPosition: {\n            lat: latValue,\n            lng: lngValue\n          }\n        });\n      }\n    };\n\n    this.mapmoved = () => {\n      console.log(\"drag:\" + JSON.stringify(this.state.map.getCenter()));\n    };\n\n    this.maploaded = map => {\n      if (this.state.map != null) {\n        return;\n      }\n\n      this.setState({\n        map: map\n      });\n    };\n\n    this.onZoom = () => {\n      console.log(\"zoom:\" + JSON.stringify(this.state.map.getCenter()));\n    };\n\n    this.searchBox = text => {\n      console.log(text);\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(nextProps);\n\n    if (nextState.mapPosition.lat !== this.state.mapPosition.lat) {\n      return true;\n    } else if (this.state.mapPosition.lat === nextState.mapPosition.lat) {\n      return false;\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    const AsyncMap = withScriptjs(withGoogleMap(props => React.createElement(GoogleMap, {\n      google: this.props.google,\n      ref: this.maploaded,\n      defaultZoom: 8,\n      defaultCenter: {\n        lat: this.state.mapPosition.lat,\n        lng: this.state.mapPosition.lng\n      },\n      onDragEnd: this.mapmoved,\n      onZoomChanged: this.onZoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      google: this.props.google,\n      name: 'Dolores park',\n      draggable: true,\n      position: {\n        lat: this.state.markerPosition.lat,\n        lng: this.state.markerPosition.lng\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Marker, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      style: {\n        width: '100%',\n        height: '40px',\n        paddingLeft: '16px',\n        marginTop: '2px',\n        marginBottom: '100px'\n      },\n      onPlaceSelected: this.onPlaceSelected,\n      types: ['(regions)'],\n      placeholder: \"Enter and select location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))));\n    return React.createElement(\"div\", {\n      style: {\n        width: \"500px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(AsyncMap, {\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI&libraries=places\",\n      loadingElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }),\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: this.props.height\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default Map;","map":{"version":3,"sources":["C:\\Users\\AlankHoang\\Desktop\\freecodeacademy\\shoppingBasket\\client\\src\\components\\Map.js"],"names":["React","Component","withGoogleMap","GoogleMap","withScriptjs","InfoWindow","Marker","Geocode","Autocomplete","setApiKey","enableDebug","Map","state","mapPosition","lat","props","center","lng","markerPosition","map","onPlaceSelected","place","event","console","log","name","undefined","fromAddress","then","response","results","geometry","location","setState","address","formatted_address","latValue","lngValue","mapmoved","JSON","stringify","getCenter","maploaded","onZoom","searchBox","text","shouldComponentUpdate","nextProps","nextState","render","AsyncMap","google","width","height","paddingLeft","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\r\nimport Geocode from \"react-geocode\";\r\nimport Autocomplete from 'react-google-autocomplete';\r\n\r\nGeocode.setApiKey('AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI');\r\nGeocode.enableDebug();\r\n\r\n\r\nexport class Map extends Component {\r\n\tstate = {\r\n\t\tmapPosition:{\r\n\t\t\tlat: this.props.center.lat,\r\n\t\t\tlng: this.props.center.lng\r\n\t\t},\r\n\t\tmarkerPosition:{\r\n\t\t\tlat:this.props.center.lat,\r\n\t\t\tlng:this.props.center.lng\r\n\t\t},\r\n\t\tmap:null,\r\n\t}\r\n\r\n\tshouldComponentUpdate( nextProps, nextState ){\r\n\t\tconsole.log(nextProps)\r\n\t\tif (\r\n\t\tnextState.mapPosition.lat !== this.state.mapPosition.lat \r\n\t\t) {\r\n\t\treturn true\r\n\t\t} else if ( this.state.mapPosition.lat  === nextState.mapPosition.lat ){\r\n\t\treturn false\r\n\t\t}\r\n\t }\r\n\r\n\tonPlaceSelected = ( place,event ) => {\r\n\t\tconsole.log(place)\r\n\t\tif (place.name!==undefined){\r\n\t\t\tGeocode.fromAddress(place.name).then(\r\n\t\t\t\tresponse => {\r\n    \t\t\tconst { lat, lng } = response.results[0].geometry.location\r\n    \t\t\tconsole.log(lat, lng)\r\n    \t\t\tif (lat ===undefined){\r\n    \t\t\t\treturn null\r\n    \t\t\t}\r\n    \t\t\tthis.setState({\r\n\t\t\t\t\tmapPosition: {\r\n\t\t\t\t\t\tlat: lat,\r\n\t\t\t\t\t\tlng: lng\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmarkerPosition: {\r\n\t\t\t\t\t\tlat: lat,\r\n\t\t\t\t\t\tlng: lng\r\n\t\t\t\t},\r\n\t\t\t})\r\n    \t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconst address = place.formatted_address,\r\n\t\t\tlatValue = place.geometry.location.lat(),\r\n\t\t\tlngValue = place.geometry.location.lng();\r\n\t\t\t// Set these values in the state.\r\n\t\t\tthis.setState({\r\n\r\n\t\t\t\tmapPosition: {\r\n\t\t\t\t\tlat: latValue,\r\n\t\t\t\t\tlng: lngValue\r\n\t\t\t\t},\r\n\t\t\t\tmarkerPosition: {\r\n\t\t\t\t\tlat: latValue,\r\n\t\t\t\t\tlng: lngValue\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t}\r\n\r\n\t};\r\n\tmapmoved=()=>{\r\n\t\tconsole.log(\"drag:\"+JSON.stringify(this.state.map.getCenter()))\r\n\t}\r\n\tmaploaded=(map)=>{\r\n\t\tif (this.state.map !=null){\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tmap:map\r\n\t\t})\r\n\t\t\r\n\t}\r\n\tonZoom = ()=>{\r\n\t\tconsole.log(\"zoom:\"+JSON.stringify(this.state.map.getCenter()))\r\n\t}\r\n\tsearchBox = (text)=>{\r\n\t\tconsole.log(text)\r\n\t}\r\n\trender() {\r\n\t\tconsole.log(this.props)\r\n\tconst AsyncMap = withScriptjs(\r\n\t\twithGoogleMap(\r\n\t\t\tprops => (\r\n\t\t\t\t<GoogleMap \r\n\t\t\t\tgoogle={this.props.google}\r\n\t\t\t\tref = {this.maploaded}\r\n\t\t\t\tdefaultZoom={8}\r\n\t\t\t\tdefaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\r\n\t\t\t\tonDragEnd={this.mapmoved}\r\n\t\t\t\tonZoomChanged = {this.onZoom}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Marker google={this.props.google}\r\n\t\t\t\t\t\tname={'Dolores park'}\r\n\t\t\t\t\t\tdraggable={true}\r\n\t\t\t\t\t\tposition={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Marker />\r\n\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: '100%',\r\n\t\t\t\t\t\theight: '40px',\r\n\t\t\t\t\t\tpaddingLeft: '16px',\r\n\t\t\t\t\t\tmarginTop: '2px',\r\n\t\t\t\t\t\tmarginBottom: '100px'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonPlaceSelected={ this.onPlaceSelected }\r\n\t\t\t\t\t\ttypes={['(regions)']}\r\n\t\t\t\t\t\tplaceholder={\"Enter and select location\"}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t</GoogleMap>\r\n\t\t\t)\r\n\t\t)\r\n\t)\r\n\r\n\t\r\n\r\n\treturn (\r\n\t\t <div style={{width:\"500px\"}}>\r\n\r\n\t\t\t<AsyncMap\r\n\t\t\t\tgoogleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBiffp6dvrIk_EWQHzXk05VzFKb5tioZeI&libraries=places\"\r\n\t\t\t\tloadingElement={\r\n\t\t\t\t <div style={{ height: `100%` }} />\r\n\t\t\t\t}\r\n\t\t\t\tcontainerElement={\r\n\t\t\t\t <div style={{ height: this.props.height }} />\r\n\t\t\t\t}\r\n\t\t\t\tmapElement={\r\n\t\t\t\t <div style={{ height: `100%` }} />\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</div>\r\n\r\n\t \r\n\t)\r\n  }\r\n}\r\n\r\nexport default Map"]},"metadata":{},"sourceType":"module"}